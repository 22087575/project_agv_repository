
bin\Debug\agv.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00003122  000031d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003122  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800202  00800202  000031d8  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000031d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000031db  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000031f0  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000138  00000000  00000000  00003230  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001d85  00000000  00000000  00003368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000011e0  00000000  00000000  000050ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00001b22  00000000  00000000  000062cd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  0000049c  00000000  00000000  00007df0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000083c  00000000  00000000  0000828c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000217  00000000  00000000  00008ac8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 5e 06 	jmp	0xcbc	; 0xcbc <__vector_21>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e2 e2       	ldi	r30, 0x22	; 34

000000fc <.Loc.4>:
      fc:	f1 e3       	ldi	r31, 0x31	; 49

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a2 30       	cpi	r26, 0x02	; 2

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a2 e0       	ldi	r26, 0x02	; 2

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	af 30       	cpi	r26, 0x0F	; 15

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <main>
     122:	0c 94 8f 18 	jmp	0x311e	; 0x311e <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <init_buzzer>:
#include <avr/io.h>
#include "buzzer.h"

void init_buzzer(void) {
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    // Stel de buzzer pin in als uitgang
    DDRB |= (1 << BUZZER_PIN);
     132:	84 e2       	ldi	r24, 0x24	; 36
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	fc 01       	movw	r30, r24
     138:	20 81       	ld	r18, Z
     13a:	84 e2       	ldi	r24, 0x24	; 36
     13c:	90 e0       	ldi	r25, 0x00	; 0

0000013e <.Loc.2>:
     13e:	20 62       	ori	r18, 0x20	; 32
     140:	fc 01       	movw	r30, r24
     142:	20 83       	st	Z, r18

00000144 <.Loc.3>:
    // Zet de buzzer uit om te beginnen
    PORTB |= (1 << BUZZER_PIN);
     144:	85 e2       	ldi	r24, 0x25	; 37
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	fc 01       	movw	r30, r24
     14a:	20 81       	ld	r18, Z
     14c:	85 e2       	ldi	r24, 0x25	; 37
     14e:	90 e0       	ldi	r25, 0x00	; 0

00000150 <.Loc.4>:
     150:	20 62       	ori	r18, 0x20	; 32
     152:	fc 01       	movw	r30, r24
     154:	20 83       	st	Z, r18

00000156 <.Loc.5>:
}
     156:	00 00       	nop
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	08 95       	ret

0000015e <buzzer_aan>:

void buzzer_aan(void) {
     15e:	cf 93       	push	r28
     160:	df 93       	push	r29
     162:	cd b7       	in	r28, 0x3d	; 61
     164:	de b7       	in	r29, 0x3e	; 62

00000166 <.Loc.7>:
    // Zet de buzzer pin hoog om de buzzer aan te zetten
    PORTB |= (1 << BUZZER_PIN);
     166:	85 e2       	ldi	r24, 0x25	; 37
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	fc 01       	movw	r30, r24
     16c:	20 81       	ld	r18, Z
     16e:	85 e2       	ldi	r24, 0x25	; 37
     170:	90 e0       	ldi	r25, 0x00	; 0

00000172 <.Loc.8>:
     172:	20 62       	ori	r18, 0x20	; 32
     174:	fc 01       	movw	r30, r24
     176:	20 83       	st	Z, r18

00000178 <.Loc.9>:
}
     178:	00 00       	nop
     17a:	df 91       	pop	r29
     17c:	cf 91       	pop	r28
     17e:	08 95       	ret

00000180 <buzzer_uit>:

void buzzer_uit(void) {
     180:	cf 93       	push	r28
     182:	df 93       	push	r29
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62

00000188 <.Loc.11>:
    // Zet de buzzer pin laag om de buzzer uit te zetten
    PORTB &= ~(1 << BUZZER_PIN);
     188:	85 e2       	ldi	r24, 0x25	; 37
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	fc 01       	movw	r30, r24
     18e:	20 81       	ld	r18, Z

00000190 <.Loc.12>:
     190:	85 e2       	ldi	r24, 0x25	; 37
     192:	90 e0       	ldi	r25, 0x00	; 0

00000194 <.Loc.13>:
     194:	2f 7d       	andi	r18, 0xDF	; 223
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18

0000019a <.Loc.14>:
}
     19a:	00 00       	nop
     19c:	df 91       	pop	r29
     19e:	cf 91       	pop	r28
     1a0:	08 95       	ret

000001a2 <buzzer_toggle>:

void buzzer_toggle(void) {
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
     1a6:	cd b7       	in	r28, 0x3d	; 61
     1a8:	de b7       	in	r29, 0x3e	; 62

000001aa <.Loc.16>:
    // Wissel de huidige toestand van de buzzer pin
    PORTB ^= (1 << BUZZER_PIN);
     1aa:	85 e2       	ldi	r24, 0x25	; 37
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	fc 01       	movw	r30, r24
     1b0:	30 81       	ld	r19, Z
     1b2:	85 e2       	ldi	r24, 0x25	; 37
     1b4:	90 e0       	ldi	r25, 0x00	; 0

000001b6 <.Loc.17>:
     1b6:	20 e2       	ldi	r18, 0x20	; 32
     1b8:	23 27       	eor	r18, r19
     1ba:	fc 01       	movw	r30, r24
     1bc:	20 83       	st	Z, r18

000001be <.Loc.18>:
}
     1be:	00 00       	nop
     1c0:	df 91       	pop	r29
     1c2:	cf 91       	pop	r28
     1c4:	08 95       	ret

000001c6 <init_timer_buzzer>:

void init_timer_buzzer(void) {
     1c6:	cf 93       	push	r28
     1c8:	df 93       	push	r29
     1ca:	cd b7       	in	r28, 0x3d	; 61
     1cc:	de b7       	in	r29, 0x3e	; 62

000001ce <.Loc.20>:
    TCCR4A = 0;
     1ce:	80 ea       	ldi	r24, 0xA0	; 160
     1d0:	90 e0       	ldi	r25, 0x00	; 0

000001d2 <.Loc.21>:
     1d2:	fc 01       	movw	r30, r24
     1d4:	10 82       	st	Z, r1

000001d6 <.Loc.22>:
    TCCR4B = (1 << CS42) | (0 << CS41) | (0 << CS40);
     1d6:	81 ea       	ldi	r24, 0xA1	; 161
     1d8:	90 e0       	ldi	r25, 0x00	; 0

000001da <.Loc.23>:
     1da:	24 e0       	ldi	r18, 0x04	; 4
     1dc:	fc 01       	movw	r30, r24
     1de:	20 83       	st	Z, r18

000001e0 <.Loc.24>:
    TCNT4 = 0;  // Reset timer
     1e0:	84 ea       	ldi	r24, 0xA4	; 164
     1e2:	90 e0       	ldi	r25, 0x00	; 0

000001e4 <.Loc.25>:
     1e4:	fc 01       	movw	r30, r24
     1e6:	11 82       	std	Z+1, r1	; 0x01
     1e8:	10 82       	st	Z, r1

000001ea <.Loc.26>:
}
     1ea:	00 00       	nop
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	08 95       	ret

000001f2 <agv_rechtdoor>:
#include <avr/io.h>
#include <util/delay.h>
#include "h_bridge.h"

void agv_rechtdoor(void)
{
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	cd b7       	in	r28, 0x3d	; 61
     1f8:	de b7       	in	r29, 0x3e	; 62
     1fa:	a2 97       	sbiw	r28, 0x22	; 34
     1fc:	0f b6       	in	r0, 0x3f	; 63
     1fe:	f8 94       	cli
     200:	de bf       	out	0x3e, r29	; 62
     202:	0f be       	out	0x3f, r0	; 63
     204:	cd bf       	out	0x3d, r28	; 61

00000206 <.Loc.1>:
    set_motor_speed(1, 200);
     206:	68 ec       	ldi	r22, 0xC8	; 200
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

0000020e <.Loc.2>:
    set_motor_speed(2, 200);
     20e:	68 ec       	ldi	r22, 0xC8	; 200
     210:	82 e0       	ldi	r24, 0x02	; 2
     212:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	a8 ec       	ldi	r26, 0xC8	; 200
     21c:	b2 e4       	ldi	r27, 0x42	; 66
     21e:	89 83       	std	Y+1, r24	; 0x01
     220:	9a 83       	std	Y+2, r25	; 0x02
     222:	ab 83       	std	Y+3, r26	; 0x03
     224:	bc 83       	std	Y+4, r27	; 0x04

00000226 <.LBB42>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     226:	20 e0       	ldi	r18, 0x00	; 0
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	4a e7       	ldi	r20, 0x7A	; 122
     22c:	55 e4       	ldi	r21, 0x45	; 69
     22e:	69 81       	ldd	r22, Y+1	; 0x01
     230:	7a 81       	ldd	r23, Y+2	; 0x02
     232:	8b 81       	ldd	r24, Y+3	; 0x03
     234:	9c 81       	ldd	r25, Y+4	; 0x04
     236:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     23a:	6b 8b       	std	Y+19, r22	; 0x13
     23c:	7c 8b       	std	Y+20, r23	; 0x14
     23e:	8d 8b       	std	Y+21, r24	; 0x15
     240:	9e 8b       	std	Y+22, r25	; 0x16
     242:	8b 89       	ldd	r24, Y+19	; 0x13
     244:	9c 89       	ldd	r25, Y+20	; 0x14
     246:	ad 89       	ldd	r26, Y+21	; 0x15
     248:	be 89       	ldd	r27, Y+22	; 0x16
     24a:	8d 83       	std	Y+5, r24	; 0x05
     24c:	9e 83       	std	Y+6, r25	; 0x06
     24e:	af 83       	std	Y+7, r26	; 0x07
     250:	b8 87       	std	Y+8, r27	; 0x08

00000252 <.Loc.4>:
	if (__tmp < 1.0)
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	40 e8       	ldi	r20, 0x80	; 128
     258:	5f e3       	ldi	r21, 0x3F	; 63
     25a:	6d 81       	ldd	r22, Y+5	; 0x05
     25c:	7e 81       	ldd	r23, Y+6	; 0x06
     25e:	8f 81       	ldd	r24, Y+7	; 0x07
     260:	98 85       	ldd	r25, Y+8	; 0x08
     262:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
     266:	88 23       	and	r24, r24
     268:	2c f4       	brge	.+10     	; 0x274 <.L12>

0000026a <.Loc.5>:
		__ticks = 1;
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	9a 87       	std	Y+10, r25	; 0x0a
     270:	89 87       	std	Y+9, r24	; 0x09
     272:	55 c0       	rjmp	.+170    	; 0x31e <.L4>

00000274 <.L12>:
	else if (__tmp > 65535)
     274:	20 e0       	ldi	r18, 0x00	; 0
     276:	3f ef       	ldi	r19, 0xFF	; 255
     278:	4f e7       	ldi	r20, 0x7F	; 127
     27a:	57 e4       	ldi	r21, 0x47	; 71
     27c:	6d 81       	ldd	r22, Y+5	; 0x05
     27e:	7e 81       	ldd	r23, Y+6	; 0x06
     280:	8f 81       	ldd	r24, Y+7	; 0x07
     282:	98 85       	ldd	r25, Y+8	; 0x08
     284:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
     288:	88 23       	and	r24, r24
     28a:	d9 f1       	breq	.+118    	; 0x302 <.L13>
     28c:	d4 f1       	brlt	.+116    	; 0x302 <.L13>

0000028e <.Loc.7>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     28e:	20 e0       	ldi	r18, 0x00	; 0
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	40 e2       	ldi	r20, 0x20	; 32
     294:	51 e4       	ldi	r21, 0x41	; 65
     296:	69 81       	ldd	r22, Y+1	; 0x01
     298:	7a 81       	ldd	r23, Y+2	; 0x02
     29a:	8b 81       	ldd	r24, Y+3	; 0x03
     29c:	9c 81       	ldd	r25, Y+4	; 0x04
     29e:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     2a2:	6f 8b       	std	Y+23, r22	; 0x17
     2a4:	78 8f       	std	Y+24, r23	; 0x18
     2a6:	89 8f       	std	Y+25, r24	; 0x19
     2a8:	9a 8f       	std	Y+26, r25	; 0x1a
     2aa:	8f 89       	ldd	r24, Y+23	; 0x17
     2ac:	98 8d       	ldd	r25, Y+24	; 0x18
     2ae:	a9 8d       	ldd	r26, Y+25	; 0x19
     2b0:	ba 8d       	ldd	r27, Y+26	; 0x1a
     2b2:	8f 87       	std	Y+15, r24	; 0x0f
     2b4:	98 8b       	std	Y+16, r25	; 0x10
     2b6:	a9 8b       	std	Y+17, r26	; 0x11
     2b8:	ba 8b       	std	Y+18, r27	; 0x12

000002ba <.Loc.8>:
     2ba:	6f 85       	ldd	r22, Y+15	; 0x0f
     2bc:	78 89       	ldd	r23, Y+16	; 0x10
     2be:	89 89       	ldd	r24, Y+17	; 0x11
     2c0:	9a 89       	ldd	r25, Y+18	; 0x12
     2c2:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     2c6:	6b 8f       	std	Y+27, r22	; 0x1b
     2c8:	7c 8f       	std	Y+28, r23	; 0x1c
     2ca:	8d 8f       	std	Y+29, r24	; 0x1d
     2cc:	9e 8f       	std	Y+30, r25	; 0x1e
     2ce:	ab 8d       	ldd	r26, Y+27	; 0x1b
     2d0:	bc 8d       	ldd	r27, Y+28	; 0x1c
     2d2:	ba 87       	std	Y+10, r27	; 0x0a
     2d4:	a9 87       	std	Y+9, r26	; 0x09

000002d6 <.Loc.9>:
		while(__ticks)
     2d6:	10 c0       	rjmp	.+32     	; 0x2f8 <.L7>

000002d8 <.L8>:
     2d8:	80 e9       	ldi	r24, 0x90	; 144
     2da:	91 e0       	ldi	r25, 0x01	; 1
     2dc:	9c 87       	std	Y+12, r25	; 0x0c
     2de:	8b 87       	std	Y+11, r24	; 0x0b

000002e0 <.LBB44>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     2e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     2e2:	9c 85       	ldd	r25, Y+12	; 0x0c

000002e4 <.L1^B1>:
     2e4:	01 97       	sbiw	r24, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <.L1^B1>
     2e8:	9c 87       	std	Y+12, r25	; 0x0c
     2ea:	8b 87       	std	Y+11, r24	; 0x0b

000002ec <.Loc.11>:
	...

000002ee <.LBE44>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2ee:	89 85       	ldd	r24, Y+9	; 0x09
     2f0:	9a 85       	ldd	r25, Y+10	; 0x0a
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	9a 87       	std	Y+10, r25	; 0x0a
     2f6:	89 87       	std	Y+9, r24	; 0x09

000002f8 <.L7>:
		while(__ticks)
     2f8:	89 85       	ldd	r24, Y+9	; 0x09
     2fa:	9a 85       	ldd	r25, Y+10	; 0x0a
     2fc:	00 97       	sbiw	r24, 0x00	; 0
     2fe:	61 f7       	brne	.-40     	; 0x2d8 <.L8>

00000300 <.Loc.14>:
		}
		return;
     300:	19 c0       	rjmp	.+50     	; 0x334 <.L9>

00000302 <.L13>:
	}
	else
		__ticks = (uint16_t)__tmp;
     302:	6d 81       	ldd	r22, Y+5	; 0x05
     304:	7e 81       	ldd	r23, Y+6	; 0x06
     306:	8f 81       	ldd	r24, Y+7	; 0x07
     308:	98 85       	ldd	r25, Y+8	; 0x08
     30a:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     30e:	6f 8f       	std	Y+31, r22	; 0x1f
     310:	78 a3       	std	Y+32, r23	; 0x20
     312:	89 a3       	std	Y+33, r24	; 0x21
     314:	9a a3       	std	Y+34, r25	; 0x22
     316:	8f 8d       	ldd	r24, Y+31	; 0x1f
     318:	98 a1       	ldd	r25, Y+32	; 0x20
     31a:	9a 87       	std	Y+10, r25	; 0x0a
     31c:	89 87       	std	Y+9, r24	; 0x09

0000031e <.L4>:
     31e:	89 85       	ldd	r24, Y+9	; 0x09
     320:	9a 85       	ldd	r25, Y+10	; 0x0a
     322:	9e 87       	std	Y+14, r25	; 0x0e
     324:	8d 87       	std	Y+13, r24	; 0x0d

00000326 <.LBB46>:
     326:	8d 85       	ldd	r24, Y+13	; 0x0d
     328:	9e 85       	ldd	r25, Y+14	; 0x0e

0000032a <.L1^B2>:
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	f1 f7       	brne	.-4      	; 0x32a <.L1^B2>
     32e:	9e 87       	std	Y+14, r25	; 0x0e
     330:	8d 87       	std	Y+13, r24	; 0x0d

00000332 <.Loc.17>:
	...

00000334 <.L9>:
    _delay_ms(100);
}
     334:	00 00       	nop
     336:	a2 96       	adiw	r28, 0x22	; 34
     338:	0f b6       	in	r0, 0x3f	; 63
     33a:	f8 94       	cli
     33c:	de bf       	out	0x3e, r29	; 62
     33e:	0f be       	out	0x3f, r0	; 63
     340:	cd bf       	out	0x3d, r28	; 61
     342:	df 91       	pop	r29
     344:	cf 91       	pop	r28
     346:	08 95       	ret

00000348 <agv_rechts_bocht>:

void agv_rechts_bocht(void)
{
     348:	cf 93       	push	r28
     34a:	df 93       	push	r29
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
     350:	a2 97       	sbiw	r28, 0x22	; 34
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61

0000035c <.Loc.20>:
    set_motor_speed(1, 165);
     35c:	65 ea       	ldi	r22, 0xA5	; 165
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

00000364 <.Loc.21>:
    set_motor_speed(2, 200);
     364:	68 ec       	ldi	r22, 0xC8	; 200
     366:	82 e0       	ldi	r24, 0x02	; 2
     368:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	a8 ec       	ldi	r26, 0xC8	; 200
     372:	b2 e4       	ldi	r27, 0x42	; 66
     374:	89 83       	std	Y+1, r24	; 0x01
     376:	9a 83       	std	Y+2, r25	; 0x02
     378:	ab 83       	std	Y+3, r26	; 0x03
     37a:	bc 83       	std	Y+4, r27	; 0x04

0000037c <.LBB48>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	4a e7       	ldi	r20, 0x7A	; 122
     382:	55 e4       	ldi	r21, 0x45	; 69
     384:	69 81       	ldd	r22, Y+1	; 0x01
     386:	7a 81       	ldd	r23, Y+2	; 0x02
     388:	8b 81       	ldd	r24, Y+3	; 0x03
     38a:	9c 81       	ldd	r25, Y+4	; 0x04
     38c:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     390:	6b 8b       	std	Y+19, r22	; 0x13
     392:	7c 8b       	std	Y+20, r23	; 0x14
     394:	8d 8b       	std	Y+21, r24	; 0x15
     396:	9e 8b       	std	Y+22, r25	; 0x16
     398:	8b 89       	ldd	r24, Y+19	; 0x13
     39a:	9c 89       	ldd	r25, Y+20	; 0x14
     39c:	ad 89       	ldd	r26, Y+21	; 0x15
     39e:	be 89       	ldd	r27, Y+22	; 0x16
     3a0:	8d 83       	std	Y+5, r24	; 0x05
     3a2:	9e 83       	std	Y+6, r25	; 0x06
     3a4:	af 83       	std	Y+7, r26	; 0x07
     3a6:	b8 87       	std	Y+8, r27	; 0x08

000003a8 <.Loc.23>:
	if (__tmp < 1.0)
     3a8:	20 e0       	ldi	r18, 0x00	; 0
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	40 e8       	ldi	r20, 0x80	; 128
     3ae:	5f e3       	ldi	r21, 0x3F	; 63
     3b0:	6d 81       	ldd	r22, Y+5	; 0x05
     3b2:	7e 81       	ldd	r23, Y+6	; 0x06
     3b4:	8f 81       	ldd	r24, Y+7	; 0x07
     3b6:	98 85       	ldd	r25, Y+8	; 0x08
     3b8:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
     3bc:	88 23       	and	r24, r24
     3be:	2c f4       	brge	.+10     	; 0x3ca <.L25>

000003c0 <.Loc.24>:
		__ticks = 1;
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	9a 87       	std	Y+10, r25	; 0x0a
     3c6:	89 87       	std	Y+9, r24	; 0x09
     3c8:	55 c0       	rjmp	.+170    	; 0x474 <.L17>

000003ca <.L25>:
	else if (__tmp > 65535)
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	3f ef       	ldi	r19, 0xFF	; 255
     3ce:	4f e7       	ldi	r20, 0x7F	; 127
     3d0:	57 e4       	ldi	r21, 0x47	; 71
     3d2:	6d 81       	ldd	r22, Y+5	; 0x05
     3d4:	7e 81       	ldd	r23, Y+6	; 0x06
     3d6:	8f 81       	ldd	r24, Y+7	; 0x07
     3d8:	98 85       	ldd	r25, Y+8	; 0x08
     3da:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
     3de:	88 23       	and	r24, r24
     3e0:	d9 f1       	breq	.+118    	; 0x458 <.L26>
     3e2:	d4 f1       	brlt	.+116    	; 0x458 <.L26>

000003e4 <.Loc.26>:
		__ticks = (uint16_t) (__ms * 10.0);
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	40 e2       	ldi	r20, 0x20	; 32
     3ea:	51 e4       	ldi	r21, 0x41	; 65
     3ec:	69 81       	ldd	r22, Y+1	; 0x01
     3ee:	7a 81       	ldd	r23, Y+2	; 0x02
     3f0:	8b 81       	ldd	r24, Y+3	; 0x03
     3f2:	9c 81       	ldd	r25, Y+4	; 0x04
     3f4:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     3f8:	6f 8b       	std	Y+23, r22	; 0x17
     3fa:	78 8f       	std	Y+24, r23	; 0x18
     3fc:	89 8f       	std	Y+25, r24	; 0x19
     3fe:	9a 8f       	std	Y+26, r25	; 0x1a
     400:	8f 89       	ldd	r24, Y+23	; 0x17
     402:	98 8d       	ldd	r25, Y+24	; 0x18
     404:	a9 8d       	ldd	r26, Y+25	; 0x19
     406:	ba 8d       	ldd	r27, Y+26	; 0x1a
     408:	8f 87       	std	Y+15, r24	; 0x0f
     40a:	98 8b       	std	Y+16, r25	; 0x10
     40c:	a9 8b       	std	Y+17, r26	; 0x11
     40e:	ba 8b       	std	Y+18, r27	; 0x12

00000410 <.Loc.27>:
     410:	6f 85       	ldd	r22, Y+15	; 0x0f
     412:	78 89       	ldd	r23, Y+16	; 0x10
     414:	89 89       	ldd	r24, Y+17	; 0x11
     416:	9a 89       	ldd	r25, Y+18	; 0x12
     418:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     41c:	6b 8f       	std	Y+27, r22	; 0x1b
     41e:	7c 8f       	std	Y+28, r23	; 0x1c
     420:	8d 8f       	std	Y+29, r24	; 0x1d
     422:	9e 8f       	std	Y+30, r25	; 0x1e
     424:	ab 8d       	ldd	r26, Y+27	; 0x1b
     426:	bc 8d       	ldd	r27, Y+28	; 0x1c
     428:	ba 87       	std	Y+10, r27	; 0x0a
     42a:	a9 87       	std	Y+9, r26	; 0x09

0000042c <.Loc.28>:
		while(__ticks)
     42c:	10 c0       	rjmp	.+32     	; 0x44e <.L20>

0000042e <.L21>:
     42e:	80 e9       	ldi	r24, 0x90	; 144
     430:	91 e0       	ldi	r25, 0x01	; 1
     432:	9c 87       	std	Y+12, r25	; 0x0c
     434:	8b 87       	std	Y+11, r24	; 0x0b

00000436 <.LBB50>:
     436:	8b 85       	ldd	r24, Y+11	; 0x0b
     438:	9c 85       	ldd	r25, Y+12	; 0x0c

0000043a <.L1^B3>:
     43a:	01 97       	sbiw	r24, 0x01	; 1
     43c:	f1 f7       	brne	.-4      	; 0x43a <.L1^B3>
     43e:	9c 87       	std	Y+12, r25	; 0x0c
     440:	8b 87       	std	Y+11, r24	; 0x0b

00000442 <.Loc.30>:
	...

00000444 <.LBE50>:
			__ticks --;
     444:	89 85       	ldd	r24, Y+9	; 0x09
     446:	9a 85       	ldd	r25, Y+10	; 0x0a
     448:	01 97       	sbiw	r24, 0x01	; 1
     44a:	9a 87       	std	Y+10, r25	; 0x0a
     44c:	89 87       	std	Y+9, r24	; 0x09

0000044e <.L20>:
		while(__ticks)
     44e:	89 85       	ldd	r24, Y+9	; 0x09
     450:	9a 85       	ldd	r25, Y+10	; 0x0a
     452:	00 97       	sbiw	r24, 0x00	; 0
     454:	61 f7       	brne	.-40     	; 0x42e <.L21>

00000456 <.Loc.33>:
		return;
     456:	19 c0       	rjmp	.+50     	; 0x48a <.L22>

00000458 <.L26>:
		__ticks = (uint16_t)__tmp;
     458:	6d 81       	ldd	r22, Y+5	; 0x05
     45a:	7e 81       	ldd	r23, Y+6	; 0x06
     45c:	8f 81       	ldd	r24, Y+7	; 0x07
     45e:	98 85       	ldd	r25, Y+8	; 0x08
     460:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     464:	6f 8f       	std	Y+31, r22	; 0x1f
     466:	78 a3       	std	Y+32, r23	; 0x20
     468:	89 a3       	std	Y+33, r24	; 0x21
     46a:	9a a3       	std	Y+34, r25	; 0x22
     46c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     46e:	98 a1       	ldd	r25, Y+32	; 0x20
     470:	9a 87       	std	Y+10, r25	; 0x0a
     472:	89 87       	std	Y+9, r24	; 0x09

00000474 <.L17>:
     474:	89 85       	ldd	r24, Y+9	; 0x09
     476:	9a 85       	ldd	r25, Y+10	; 0x0a
     478:	9e 87       	std	Y+14, r25	; 0x0e
     47a:	8d 87       	std	Y+13, r24	; 0x0d

0000047c <.LBB52>:
     47c:	8d 85       	ldd	r24, Y+13	; 0x0d
     47e:	9e 85       	ldd	r25, Y+14	; 0x0e

00000480 <.L1^B4>:
     480:	01 97       	sbiw	r24, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <.L1^B4>
     484:	9e 87       	std	Y+14, r25	; 0x0e
     486:	8d 87       	std	Y+13, r24	; 0x0d

00000488 <.Loc.36>:
	...

0000048a <.L22>:
    _delay_ms(100);
}
     48a:	00 00       	nop
     48c:	a2 96       	adiw	r28, 0x22	; 34
     48e:	0f b6       	in	r0, 0x3f	; 63
     490:	f8 94       	cli
     492:	de bf       	out	0x3e, r29	; 62
     494:	0f be       	out	0x3f, r0	; 63
     496:	cd bf       	out	0x3d, r28	; 61
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	08 95       	ret

0000049e <agv_links_bocht>:

void agv_links_bocht(void)
{
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	cd b7       	in	r28, 0x3d	; 61
     4a4:	de b7       	in	r29, 0x3e	; 62
     4a6:	a2 97       	sbiw	r28, 0x22	; 34
     4a8:	0f b6       	in	r0, 0x3f	; 63
     4aa:	f8 94       	cli
     4ac:	de bf       	out	0x3e, r29	; 62
     4ae:	0f be       	out	0x3f, r0	; 63
     4b0:	cd bf       	out	0x3d, r28	; 61

000004b2 <.Loc.39>:
    set_motor_speed(1, 165);
     4b2:	65 ea       	ldi	r22, 0xA5	; 165
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

000004ba <.Loc.40>:
    set_motor_speed(2, 200);
     4ba:	68 ec       	ldi	r22, 0xC8	; 200
     4bc:	82 e0       	ldi	r24, 0x02	; 2
     4be:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	a8 ec       	ldi	r26, 0xC8	; 200
     4c8:	b2 e4       	ldi	r27, 0x42	; 66
     4ca:	89 83       	std	Y+1, r24	; 0x01
     4cc:	9a 83       	std	Y+2, r25	; 0x02
     4ce:	ab 83       	std	Y+3, r26	; 0x03
     4d0:	bc 83       	std	Y+4, r27	; 0x04

000004d2 <.LBB54>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	4a e7       	ldi	r20, 0x7A	; 122
     4d8:	55 e4       	ldi	r21, 0x45	; 69
     4da:	69 81       	ldd	r22, Y+1	; 0x01
     4dc:	7a 81       	ldd	r23, Y+2	; 0x02
     4de:	8b 81       	ldd	r24, Y+3	; 0x03
     4e0:	9c 81       	ldd	r25, Y+4	; 0x04
     4e2:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     4e6:	6b 8b       	std	Y+19, r22	; 0x13
     4e8:	7c 8b       	std	Y+20, r23	; 0x14
     4ea:	8d 8b       	std	Y+21, r24	; 0x15
     4ec:	9e 8b       	std	Y+22, r25	; 0x16
     4ee:	8b 89       	ldd	r24, Y+19	; 0x13
     4f0:	9c 89       	ldd	r25, Y+20	; 0x14
     4f2:	ad 89       	ldd	r26, Y+21	; 0x15
     4f4:	be 89       	ldd	r27, Y+22	; 0x16
     4f6:	8d 83       	std	Y+5, r24	; 0x05
     4f8:	9e 83       	std	Y+6, r25	; 0x06
     4fa:	af 83       	std	Y+7, r26	; 0x07
     4fc:	b8 87       	std	Y+8, r27	; 0x08

000004fe <.Loc.42>:
	if (__tmp < 1.0)
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	40 e8       	ldi	r20, 0x80	; 128
     504:	5f e3       	ldi	r21, 0x3F	; 63
     506:	6d 81       	ldd	r22, Y+5	; 0x05
     508:	7e 81       	ldd	r23, Y+6	; 0x06
     50a:	8f 81       	ldd	r24, Y+7	; 0x07
     50c:	98 85       	ldd	r25, Y+8	; 0x08
     50e:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
     512:	88 23       	and	r24, r24
     514:	2c f4       	brge	.+10     	; 0x520 <.L38>

00000516 <.Loc.43>:
		__ticks = 1;
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	9a 87       	std	Y+10, r25	; 0x0a
     51c:	89 87       	std	Y+9, r24	; 0x09
     51e:	55 c0       	rjmp	.+170    	; 0x5ca <.L30>

00000520 <.L38>:
	else if (__tmp > 65535)
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	3f ef       	ldi	r19, 0xFF	; 255
     524:	4f e7       	ldi	r20, 0x7F	; 127
     526:	57 e4       	ldi	r21, 0x47	; 71
     528:	6d 81       	ldd	r22, Y+5	; 0x05
     52a:	7e 81       	ldd	r23, Y+6	; 0x06
     52c:	8f 81       	ldd	r24, Y+7	; 0x07
     52e:	98 85       	ldd	r25, Y+8	; 0x08
     530:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
     534:	88 23       	and	r24, r24
     536:	d9 f1       	breq	.+118    	; 0x5ae <.L39>
     538:	d4 f1       	brlt	.+116    	; 0x5ae <.L39>

0000053a <.Loc.45>:
		__ticks = (uint16_t) (__ms * 10.0);
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	40 e2       	ldi	r20, 0x20	; 32
     540:	51 e4       	ldi	r21, 0x41	; 65
     542:	69 81       	ldd	r22, Y+1	; 0x01
     544:	7a 81       	ldd	r23, Y+2	; 0x02
     546:	8b 81       	ldd	r24, Y+3	; 0x03
     548:	9c 81       	ldd	r25, Y+4	; 0x04
     54a:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     54e:	6f 8b       	std	Y+23, r22	; 0x17
     550:	78 8f       	std	Y+24, r23	; 0x18
     552:	89 8f       	std	Y+25, r24	; 0x19
     554:	9a 8f       	std	Y+26, r25	; 0x1a
     556:	8f 89       	ldd	r24, Y+23	; 0x17
     558:	98 8d       	ldd	r25, Y+24	; 0x18
     55a:	a9 8d       	ldd	r26, Y+25	; 0x19
     55c:	ba 8d       	ldd	r27, Y+26	; 0x1a
     55e:	8f 87       	std	Y+15, r24	; 0x0f
     560:	98 8b       	std	Y+16, r25	; 0x10
     562:	a9 8b       	std	Y+17, r26	; 0x11
     564:	ba 8b       	std	Y+18, r27	; 0x12

00000566 <.Loc.46>:
     566:	6f 85       	ldd	r22, Y+15	; 0x0f
     568:	78 89       	ldd	r23, Y+16	; 0x10
     56a:	89 89       	ldd	r24, Y+17	; 0x11
     56c:	9a 89       	ldd	r25, Y+18	; 0x12
     56e:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     572:	6b 8f       	std	Y+27, r22	; 0x1b
     574:	7c 8f       	std	Y+28, r23	; 0x1c
     576:	8d 8f       	std	Y+29, r24	; 0x1d
     578:	9e 8f       	std	Y+30, r25	; 0x1e
     57a:	ab 8d       	ldd	r26, Y+27	; 0x1b
     57c:	bc 8d       	ldd	r27, Y+28	; 0x1c
     57e:	ba 87       	std	Y+10, r27	; 0x0a
     580:	a9 87       	std	Y+9, r26	; 0x09

00000582 <.Loc.47>:
		while(__ticks)
     582:	10 c0       	rjmp	.+32     	; 0x5a4 <.L33>

00000584 <.L34>:
     584:	80 e9       	ldi	r24, 0x90	; 144
     586:	91 e0       	ldi	r25, 0x01	; 1
     588:	9c 87       	std	Y+12, r25	; 0x0c
     58a:	8b 87       	std	Y+11, r24	; 0x0b

0000058c <.LBB56>:
     58c:	8b 85       	ldd	r24, Y+11	; 0x0b
     58e:	9c 85       	ldd	r25, Y+12	; 0x0c

00000590 <.L1^B5>:
     590:	01 97       	sbiw	r24, 0x01	; 1
     592:	f1 f7       	brne	.-4      	; 0x590 <.L1^B5>
     594:	9c 87       	std	Y+12, r25	; 0x0c
     596:	8b 87       	std	Y+11, r24	; 0x0b

00000598 <.Loc.49>:
	...

0000059a <.LBE56>:
			__ticks --;
     59a:	89 85       	ldd	r24, Y+9	; 0x09
     59c:	9a 85       	ldd	r25, Y+10	; 0x0a
     59e:	01 97       	sbiw	r24, 0x01	; 1
     5a0:	9a 87       	std	Y+10, r25	; 0x0a
     5a2:	89 87       	std	Y+9, r24	; 0x09

000005a4 <.L33>:
		while(__ticks)
     5a4:	89 85       	ldd	r24, Y+9	; 0x09
     5a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     5a8:	00 97       	sbiw	r24, 0x00	; 0
     5aa:	61 f7       	brne	.-40     	; 0x584 <.L34>

000005ac <.Loc.52>:
		return;
     5ac:	19 c0       	rjmp	.+50     	; 0x5e0 <.L35>

000005ae <.L39>:
		__ticks = (uint16_t)__tmp;
     5ae:	6d 81       	ldd	r22, Y+5	; 0x05
     5b0:	7e 81       	ldd	r23, Y+6	; 0x06
     5b2:	8f 81       	ldd	r24, Y+7	; 0x07
     5b4:	98 85       	ldd	r25, Y+8	; 0x08
     5b6:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     5ba:	6f 8f       	std	Y+31, r22	; 0x1f
     5bc:	78 a3       	std	Y+32, r23	; 0x20
     5be:	89 a3       	std	Y+33, r24	; 0x21
     5c0:	9a a3       	std	Y+34, r25	; 0x22
     5c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     5c4:	98 a1       	ldd	r25, Y+32	; 0x20
     5c6:	9a 87       	std	Y+10, r25	; 0x0a
     5c8:	89 87       	std	Y+9, r24	; 0x09

000005ca <.L30>:
     5ca:	89 85       	ldd	r24, Y+9	; 0x09
     5cc:	9a 85       	ldd	r25, Y+10	; 0x0a
     5ce:	9e 87       	std	Y+14, r25	; 0x0e
     5d0:	8d 87       	std	Y+13, r24	; 0x0d

000005d2 <.LBB58>:
     5d2:	8d 85       	ldd	r24, Y+13	; 0x0d
     5d4:	9e 85       	ldd	r25, Y+14	; 0x0e

000005d6 <.L1^B6>:
     5d6:	01 97       	sbiw	r24, 0x01	; 1
     5d8:	f1 f7       	brne	.-4      	; 0x5d6 <.L1^B6>
     5da:	9e 87       	std	Y+14, r25	; 0x0e
     5dc:	8d 87       	std	Y+13, r24	; 0x0d

000005de <.Loc.55>:
	...

000005e0 <.L35>:
    _delay_ms(100);
}
     5e0:	00 00       	nop
     5e2:	a2 96       	adiw	r28, 0x22	; 34
     5e4:	0f b6       	in	r0, 0x3f	; 63
     5e6:	f8 94       	cli
     5e8:	de bf       	out	0x3e, r29	; 62
     5ea:	0f be       	out	0x3f, r0	; 63
     5ec:	cd bf       	out	0x3d, r28	; 61
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <agv_stoppen>:

void agv_stoppen(void)
{
     5f4:	cf 93       	push	r28
     5f6:	df 93       	push	r29
     5f8:	cd b7       	in	r28, 0x3d	; 61
     5fa:	de b7       	in	r29, 0x3e	; 62
     5fc:	a2 97       	sbiw	r28, 0x22	; 34
     5fe:	0f b6       	in	r0, 0x3f	; 63
     600:	f8 94       	cli
     602:	de bf       	out	0x3e, r29	; 62
     604:	0f be       	out	0x3f, r0	; 63
     606:	cd bf       	out	0x3d, r28	; 61

00000608 <.Loc.58>:
    set_motor_speed(1, 0);
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

00000610 <.Loc.59>:
    set_motor_speed(2, 0);
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	82 e0       	ldi	r24, 0x02	; 2
     614:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a8 ec       	ldi	r26, 0xC8	; 200
     61e:	b2 e4       	ldi	r27, 0x42	; 66
     620:	89 83       	std	Y+1, r24	; 0x01
     622:	9a 83       	std	Y+2, r25	; 0x02
     624:	ab 83       	std	Y+3, r26	; 0x03
     626:	bc 83       	std	Y+4, r27	; 0x04

00000628 <.LBB60>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	4a e7       	ldi	r20, 0x7A	; 122
     62e:	55 e4       	ldi	r21, 0x45	; 69
     630:	69 81       	ldd	r22, Y+1	; 0x01
     632:	7a 81       	ldd	r23, Y+2	; 0x02
     634:	8b 81       	ldd	r24, Y+3	; 0x03
     636:	9c 81       	ldd	r25, Y+4	; 0x04
     638:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     63c:	6b 8b       	std	Y+19, r22	; 0x13
     63e:	7c 8b       	std	Y+20, r23	; 0x14
     640:	8d 8b       	std	Y+21, r24	; 0x15
     642:	9e 8b       	std	Y+22, r25	; 0x16
     644:	8b 89       	ldd	r24, Y+19	; 0x13
     646:	9c 89       	ldd	r25, Y+20	; 0x14
     648:	ad 89       	ldd	r26, Y+21	; 0x15
     64a:	be 89       	ldd	r27, Y+22	; 0x16
     64c:	8d 83       	std	Y+5, r24	; 0x05
     64e:	9e 83       	std	Y+6, r25	; 0x06
     650:	af 83       	std	Y+7, r26	; 0x07
     652:	b8 87       	std	Y+8, r27	; 0x08

00000654 <.Loc.61>:
	if (__tmp < 1.0)
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	30 e0       	ldi	r19, 0x00	; 0
     658:	40 e8       	ldi	r20, 0x80	; 128
     65a:	5f e3       	ldi	r21, 0x3F	; 63
     65c:	6d 81       	ldd	r22, Y+5	; 0x05
     65e:	7e 81       	ldd	r23, Y+6	; 0x06
     660:	8f 81       	ldd	r24, Y+7	; 0x07
     662:	98 85       	ldd	r25, Y+8	; 0x08
     664:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
     668:	88 23       	and	r24, r24
     66a:	2c f4       	brge	.+10     	; 0x676 <.L51>

0000066c <.Loc.62>:
		__ticks = 1;
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	9a 87       	std	Y+10, r25	; 0x0a
     672:	89 87       	std	Y+9, r24	; 0x09
     674:	55 c0       	rjmp	.+170    	; 0x720 <.L43>

00000676 <.L51>:
	else if (__tmp > 65535)
     676:	20 e0       	ldi	r18, 0x00	; 0
     678:	3f ef       	ldi	r19, 0xFF	; 255
     67a:	4f e7       	ldi	r20, 0x7F	; 127
     67c:	57 e4       	ldi	r21, 0x47	; 71
     67e:	6d 81       	ldd	r22, Y+5	; 0x05
     680:	7e 81       	ldd	r23, Y+6	; 0x06
     682:	8f 81       	ldd	r24, Y+7	; 0x07
     684:	98 85       	ldd	r25, Y+8	; 0x08
     686:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
     68a:	88 23       	and	r24, r24
     68c:	d9 f1       	breq	.+118    	; 0x704 <.L52>
     68e:	d4 f1       	brlt	.+116    	; 0x704 <.L52>

00000690 <.Loc.64>:
		__ticks = (uint16_t) (__ms * 10.0);
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	40 e2       	ldi	r20, 0x20	; 32
     696:	51 e4       	ldi	r21, 0x41	; 65
     698:	69 81       	ldd	r22, Y+1	; 0x01
     69a:	7a 81       	ldd	r23, Y+2	; 0x02
     69c:	8b 81       	ldd	r24, Y+3	; 0x03
     69e:	9c 81       	ldd	r25, Y+4	; 0x04
     6a0:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     6a4:	6f 8b       	std	Y+23, r22	; 0x17
     6a6:	78 8f       	std	Y+24, r23	; 0x18
     6a8:	89 8f       	std	Y+25, r24	; 0x19
     6aa:	9a 8f       	std	Y+26, r25	; 0x1a
     6ac:	8f 89       	ldd	r24, Y+23	; 0x17
     6ae:	98 8d       	ldd	r25, Y+24	; 0x18
     6b0:	a9 8d       	ldd	r26, Y+25	; 0x19
     6b2:	ba 8d       	ldd	r27, Y+26	; 0x1a
     6b4:	8f 87       	std	Y+15, r24	; 0x0f
     6b6:	98 8b       	std	Y+16, r25	; 0x10
     6b8:	a9 8b       	std	Y+17, r26	; 0x11
     6ba:	ba 8b       	std	Y+18, r27	; 0x12

000006bc <.Loc.65>:
     6bc:	6f 85       	ldd	r22, Y+15	; 0x0f
     6be:	78 89       	ldd	r23, Y+16	; 0x10
     6c0:	89 89       	ldd	r24, Y+17	; 0x11
     6c2:	9a 89       	ldd	r25, Y+18	; 0x12
     6c4:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     6c8:	6b 8f       	std	Y+27, r22	; 0x1b
     6ca:	7c 8f       	std	Y+28, r23	; 0x1c
     6cc:	8d 8f       	std	Y+29, r24	; 0x1d
     6ce:	9e 8f       	std	Y+30, r25	; 0x1e
     6d0:	ab 8d       	ldd	r26, Y+27	; 0x1b
     6d2:	bc 8d       	ldd	r27, Y+28	; 0x1c
     6d4:	ba 87       	std	Y+10, r27	; 0x0a
     6d6:	a9 87       	std	Y+9, r26	; 0x09

000006d8 <.Loc.66>:
		while(__ticks)
     6d8:	10 c0       	rjmp	.+32     	; 0x6fa <.L46>

000006da <.L47>:
     6da:	80 e9       	ldi	r24, 0x90	; 144
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	9c 87       	std	Y+12, r25	; 0x0c
     6e0:	8b 87       	std	Y+11, r24	; 0x0b

000006e2 <.LBB62>:
     6e2:	8b 85       	ldd	r24, Y+11	; 0x0b
     6e4:	9c 85       	ldd	r25, Y+12	; 0x0c

000006e6 <.L1^B7>:
     6e6:	01 97       	sbiw	r24, 0x01	; 1
     6e8:	f1 f7       	brne	.-4      	; 0x6e6 <.L1^B7>
     6ea:	9c 87       	std	Y+12, r25	; 0x0c
     6ec:	8b 87       	std	Y+11, r24	; 0x0b

000006ee <.Loc.68>:
	...

000006f0 <.LBE62>:
			__ticks --;
     6f0:	89 85       	ldd	r24, Y+9	; 0x09
     6f2:	9a 85       	ldd	r25, Y+10	; 0x0a
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	9a 87       	std	Y+10, r25	; 0x0a
     6f8:	89 87       	std	Y+9, r24	; 0x09

000006fa <.L46>:
		while(__ticks)
     6fa:	89 85       	ldd	r24, Y+9	; 0x09
     6fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     6fe:	00 97       	sbiw	r24, 0x00	; 0
     700:	61 f7       	brne	.-40     	; 0x6da <.L47>

00000702 <.Loc.71>:
		return;
     702:	19 c0       	rjmp	.+50     	; 0x736 <.L48>

00000704 <.L52>:
		__ticks = (uint16_t)__tmp;
     704:	6d 81       	ldd	r22, Y+5	; 0x05
     706:	7e 81       	ldd	r23, Y+6	; 0x06
     708:	8f 81       	ldd	r24, Y+7	; 0x07
     70a:	98 85       	ldd	r25, Y+8	; 0x08
     70c:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     710:	6f 8f       	std	Y+31, r22	; 0x1f
     712:	78 a3       	std	Y+32, r23	; 0x20
     714:	89 a3       	std	Y+33, r24	; 0x21
     716:	9a a3       	std	Y+34, r25	; 0x22
     718:	8f 8d       	ldd	r24, Y+31	; 0x1f
     71a:	98 a1       	ldd	r25, Y+32	; 0x20
     71c:	9a 87       	std	Y+10, r25	; 0x0a
     71e:	89 87       	std	Y+9, r24	; 0x09

00000720 <.L43>:
     720:	89 85       	ldd	r24, Y+9	; 0x09
     722:	9a 85       	ldd	r25, Y+10	; 0x0a
     724:	9e 87       	std	Y+14, r25	; 0x0e
     726:	8d 87       	std	Y+13, r24	; 0x0d

00000728 <.LBB64>:
     728:	8d 85       	ldd	r24, Y+13	; 0x0d
     72a:	9e 85       	ldd	r25, Y+14	; 0x0e

0000072c <.L1^B8>:
     72c:	01 97       	sbiw	r24, 0x01	; 1
     72e:	f1 f7       	brne	.-4      	; 0x72c <.L1^B8>
     730:	9e 87       	std	Y+14, r25	; 0x0e
     732:	8d 87       	std	Y+13, r24	; 0x0d

00000734 <.Loc.74>:
	...

00000736 <.L48>:
    _delay_ms(100);
}
     736:	00 00       	nop
     738:	a2 96       	adiw	r28, 0x22	; 34
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	f8 94       	cli
     73e:	de bf       	out	0x3e, r29	; 62
     740:	0f be       	out	0x3f, r0	; 63
     742:	cd bf       	out	0x3d, r28	; 61
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	08 95       	ret

0000074a <agv_rechts_correctie>:

void agv_rechts_correctie(void)
{
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	cd b7       	in	r28, 0x3d	; 61
     750:	de b7       	in	r29, 0x3e	; 62
     752:	a2 97       	sbiw	r28, 0x22	; 34
     754:	0f b6       	in	r0, 0x3f	; 63
     756:	f8 94       	cli
     758:	de bf       	out	0x3e, r29	; 62
     75a:	0f be       	out	0x3f, r0	; 63
     75c:	cd bf       	out	0x3d, r28	; 61

0000075e <.Loc.77>:
    set_motor_speed(1, 180);
     75e:	64 eb       	ldi	r22, 0xB4	; 180
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

00000766 <.Loc.78>:
    set_motor_speed(2, 200);
     766:	68 ec       	ldi	r22, 0xC8	; 200
     768:	82 e0       	ldi	r24, 0x02	; 2
     76a:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	a8 ec       	ldi	r26, 0xC8	; 200
     774:	b2 e4       	ldi	r27, 0x42	; 66
     776:	89 83       	std	Y+1, r24	; 0x01
     778:	9a 83       	std	Y+2, r25	; 0x02
     77a:	ab 83       	std	Y+3, r26	; 0x03
     77c:	bc 83       	std	Y+4, r27	; 0x04

0000077e <.LBB66>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	4a e7       	ldi	r20, 0x7A	; 122
     784:	55 e4       	ldi	r21, 0x45	; 69
     786:	69 81       	ldd	r22, Y+1	; 0x01
     788:	7a 81       	ldd	r23, Y+2	; 0x02
     78a:	8b 81       	ldd	r24, Y+3	; 0x03
     78c:	9c 81       	ldd	r25, Y+4	; 0x04
     78e:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     792:	6b 8b       	std	Y+19, r22	; 0x13
     794:	7c 8b       	std	Y+20, r23	; 0x14
     796:	8d 8b       	std	Y+21, r24	; 0x15
     798:	9e 8b       	std	Y+22, r25	; 0x16
     79a:	8b 89       	ldd	r24, Y+19	; 0x13
     79c:	9c 89       	ldd	r25, Y+20	; 0x14
     79e:	ad 89       	ldd	r26, Y+21	; 0x15
     7a0:	be 89       	ldd	r27, Y+22	; 0x16
     7a2:	8d 83       	std	Y+5, r24	; 0x05
     7a4:	9e 83       	std	Y+6, r25	; 0x06
     7a6:	af 83       	std	Y+7, r26	; 0x07
     7a8:	b8 87       	std	Y+8, r27	; 0x08

000007aa <.Loc.80>:
	if (__tmp < 1.0)
     7aa:	20 e0       	ldi	r18, 0x00	; 0
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	40 e8       	ldi	r20, 0x80	; 128
     7b0:	5f e3       	ldi	r21, 0x3F	; 63
     7b2:	6d 81       	ldd	r22, Y+5	; 0x05
     7b4:	7e 81       	ldd	r23, Y+6	; 0x06
     7b6:	8f 81       	ldd	r24, Y+7	; 0x07
     7b8:	98 85       	ldd	r25, Y+8	; 0x08
     7ba:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
     7be:	88 23       	and	r24, r24
     7c0:	2c f4       	brge	.+10     	; 0x7cc <.L64>

000007c2 <.Loc.81>:
		__ticks = 1;
     7c2:	81 e0       	ldi	r24, 0x01	; 1
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	9a 87       	std	Y+10, r25	; 0x0a
     7c8:	89 87       	std	Y+9, r24	; 0x09
     7ca:	55 c0       	rjmp	.+170    	; 0x876 <.L56>

000007cc <.L64>:
	else if (__tmp > 65535)
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f e7       	ldi	r20, 0x7F	; 127
     7d2:	57 e4       	ldi	r21, 0x47	; 71
     7d4:	6d 81       	ldd	r22, Y+5	; 0x05
     7d6:	7e 81       	ldd	r23, Y+6	; 0x06
     7d8:	8f 81       	ldd	r24, Y+7	; 0x07
     7da:	98 85       	ldd	r25, Y+8	; 0x08
     7dc:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
     7e0:	88 23       	and	r24, r24
     7e2:	d9 f1       	breq	.+118    	; 0x85a <.L65>
     7e4:	d4 f1       	brlt	.+116    	; 0x85a <.L65>

000007e6 <.Loc.83>:
		__ticks = (uint16_t) (__ms * 10.0);
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e2       	ldi	r20, 0x20	; 32
     7ec:	51 e4       	ldi	r21, 0x41	; 65
     7ee:	69 81       	ldd	r22, Y+1	; 0x01
     7f0:	7a 81       	ldd	r23, Y+2	; 0x02
     7f2:	8b 81       	ldd	r24, Y+3	; 0x03
     7f4:	9c 81       	ldd	r25, Y+4	; 0x04
     7f6:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     7fa:	6f 8b       	std	Y+23, r22	; 0x17
     7fc:	78 8f       	std	Y+24, r23	; 0x18
     7fe:	89 8f       	std	Y+25, r24	; 0x19
     800:	9a 8f       	std	Y+26, r25	; 0x1a
     802:	8f 89       	ldd	r24, Y+23	; 0x17
     804:	98 8d       	ldd	r25, Y+24	; 0x18
     806:	a9 8d       	ldd	r26, Y+25	; 0x19
     808:	ba 8d       	ldd	r27, Y+26	; 0x1a
     80a:	8f 87       	std	Y+15, r24	; 0x0f
     80c:	98 8b       	std	Y+16, r25	; 0x10
     80e:	a9 8b       	std	Y+17, r26	; 0x11
     810:	ba 8b       	std	Y+18, r27	; 0x12

00000812 <.Loc.84>:
     812:	6f 85       	ldd	r22, Y+15	; 0x0f
     814:	78 89       	ldd	r23, Y+16	; 0x10
     816:	89 89       	ldd	r24, Y+17	; 0x11
     818:	9a 89       	ldd	r25, Y+18	; 0x12
     81a:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     81e:	6b 8f       	std	Y+27, r22	; 0x1b
     820:	7c 8f       	std	Y+28, r23	; 0x1c
     822:	8d 8f       	std	Y+29, r24	; 0x1d
     824:	9e 8f       	std	Y+30, r25	; 0x1e
     826:	ab 8d       	ldd	r26, Y+27	; 0x1b
     828:	bc 8d       	ldd	r27, Y+28	; 0x1c
     82a:	ba 87       	std	Y+10, r27	; 0x0a
     82c:	a9 87       	std	Y+9, r26	; 0x09

0000082e <.Loc.85>:
		while(__ticks)
     82e:	10 c0       	rjmp	.+32     	; 0x850 <.L59>

00000830 <.L60>:
     830:	80 e9       	ldi	r24, 0x90	; 144
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	9c 87       	std	Y+12, r25	; 0x0c
     836:	8b 87       	std	Y+11, r24	; 0x0b

00000838 <.LBB68>:
     838:	8b 85       	ldd	r24, Y+11	; 0x0b
     83a:	9c 85       	ldd	r25, Y+12	; 0x0c

0000083c <.L1^B9>:
     83c:	01 97       	sbiw	r24, 0x01	; 1
     83e:	f1 f7       	brne	.-4      	; 0x83c <.L1^B9>
     840:	9c 87       	std	Y+12, r25	; 0x0c
     842:	8b 87       	std	Y+11, r24	; 0x0b

00000844 <.Loc.87>:
	...

00000846 <.LBE68>:
			__ticks --;
     846:	89 85       	ldd	r24, Y+9	; 0x09
     848:	9a 85       	ldd	r25, Y+10	; 0x0a
     84a:	01 97       	sbiw	r24, 0x01	; 1
     84c:	9a 87       	std	Y+10, r25	; 0x0a
     84e:	89 87       	std	Y+9, r24	; 0x09

00000850 <.L59>:
		while(__ticks)
     850:	89 85       	ldd	r24, Y+9	; 0x09
     852:	9a 85       	ldd	r25, Y+10	; 0x0a
     854:	00 97       	sbiw	r24, 0x00	; 0
     856:	61 f7       	brne	.-40     	; 0x830 <.L60>

00000858 <.Loc.90>:
		return;
     858:	19 c0       	rjmp	.+50     	; 0x88c <.L61>

0000085a <.L65>:
		__ticks = (uint16_t)__tmp;
     85a:	6d 81       	ldd	r22, Y+5	; 0x05
     85c:	7e 81       	ldd	r23, Y+6	; 0x06
     85e:	8f 81       	ldd	r24, Y+7	; 0x07
     860:	98 85       	ldd	r25, Y+8	; 0x08
     862:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     866:	6f 8f       	std	Y+31, r22	; 0x1f
     868:	78 a3       	std	Y+32, r23	; 0x20
     86a:	89 a3       	std	Y+33, r24	; 0x21
     86c:	9a a3       	std	Y+34, r25	; 0x22
     86e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     870:	98 a1       	ldd	r25, Y+32	; 0x20
     872:	9a 87       	std	Y+10, r25	; 0x0a
     874:	89 87       	std	Y+9, r24	; 0x09

00000876 <.L56>:
     876:	89 85       	ldd	r24, Y+9	; 0x09
     878:	9a 85       	ldd	r25, Y+10	; 0x0a
     87a:	9e 87       	std	Y+14, r25	; 0x0e
     87c:	8d 87       	std	Y+13, r24	; 0x0d

0000087e <.LBB70>:
     87e:	8d 85       	ldd	r24, Y+13	; 0x0d
     880:	9e 85       	ldd	r25, Y+14	; 0x0e

00000882 <.L1^B10>:
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	f1 f7       	brne	.-4      	; 0x882 <.L1^B10>
     886:	9e 87       	std	Y+14, r25	; 0x0e
     888:	8d 87       	std	Y+13, r24	; 0x0d

0000088a <.Loc.93>:
	...

0000088c <.L61>:
    _delay_ms(100);
}
     88c:	00 00       	nop
     88e:	a2 96       	adiw	r28, 0x22	; 34
     890:	0f b6       	in	r0, 0x3f	; 63
     892:	f8 94       	cli
     894:	de bf       	out	0x3e, r29	; 62
     896:	0f be       	out	0x3f, r0	; 63
     898:	cd bf       	out	0x3d, r28	; 61
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	08 95       	ret

000008a0 <agv_links_correctie>:

void agv_links_correctie(void) {
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	cd b7       	in	r28, 0x3d	; 61
     8a6:	de b7       	in	r29, 0x3e	; 62
     8a8:	a2 97       	sbiw	r28, 0x22	; 34
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	f8 94       	cli
     8ae:	de bf       	out	0x3e, r29	; 62
     8b0:	0f be       	out	0x3f, r0	; 63
     8b2:	cd bf       	out	0x3d, r28	; 61

000008b4 <.Loc.96>:
    set_motor_speed(1, 200);
     8b4:	68 ec       	ldi	r22, 0xC8	; 200
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

000008bc <.Loc.97>:
    set_motor_speed(2, 180);
     8bc:	64 eb       	ldi	r22, 0xB4	; 180
     8be:	82 e0       	ldi	r24, 0x02	; 2
     8c0:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     8c4:	80 e0       	ldi	r24, 0x00	; 0
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	a8 ec       	ldi	r26, 0xC8	; 200
     8ca:	b2 e4       	ldi	r27, 0x42	; 66
     8cc:	89 83       	std	Y+1, r24	; 0x01
     8ce:	9a 83       	std	Y+2, r25	; 0x02
     8d0:	ab 83       	std	Y+3, r26	; 0x03
     8d2:	bc 83       	std	Y+4, r27	; 0x04

000008d4 <.LBB72>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     8d4:	20 e0       	ldi	r18, 0x00	; 0
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	4a e7       	ldi	r20, 0x7A	; 122
     8da:	55 e4       	ldi	r21, 0x45	; 69
     8dc:	69 81       	ldd	r22, Y+1	; 0x01
     8de:	7a 81       	ldd	r23, Y+2	; 0x02
     8e0:	8b 81       	ldd	r24, Y+3	; 0x03
     8e2:	9c 81       	ldd	r25, Y+4	; 0x04
     8e4:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     8e8:	6b 8b       	std	Y+19, r22	; 0x13
     8ea:	7c 8b       	std	Y+20, r23	; 0x14
     8ec:	8d 8b       	std	Y+21, r24	; 0x15
     8ee:	9e 8b       	std	Y+22, r25	; 0x16
     8f0:	8b 89       	ldd	r24, Y+19	; 0x13
     8f2:	9c 89       	ldd	r25, Y+20	; 0x14
     8f4:	ad 89       	ldd	r26, Y+21	; 0x15
     8f6:	be 89       	ldd	r27, Y+22	; 0x16
     8f8:	8d 83       	std	Y+5, r24	; 0x05
     8fa:	9e 83       	std	Y+6, r25	; 0x06
     8fc:	af 83       	std	Y+7, r26	; 0x07
     8fe:	b8 87       	std	Y+8, r27	; 0x08

00000900 <.Loc.99>:
	if (__tmp < 1.0)
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	40 e8       	ldi	r20, 0x80	; 128
     906:	5f e3       	ldi	r21, 0x3F	; 63
     908:	6d 81       	ldd	r22, Y+5	; 0x05
     90a:	7e 81       	ldd	r23, Y+6	; 0x06
     90c:	8f 81       	ldd	r24, Y+7	; 0x07
     90e:	98 85       	ldd	r25, Y+8	; 0x08
     910:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
     914:	88 23       	and	r24, r24
     916:	2c f4       	brge	.+10     	; 0x922 <.L77>

00000918 <.Loc.100>:
		__ticks = 1;
     918:	81 e0       	ldi	r24, 0x01	; 1
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	9a 87       	std	Y+10, r25	; 0x0a
     91e:	89 87       	std	Y+9, r24	; 0x09
     920:	55 c0       	rjmp	.+170    	; 0x9cc <.L69>

00000922 <.L77>:
	else if (__tmp > 65535)
     922:	20 e0       	ldi	r18, 0x00	; 0
     924:	3f ef       	ldi	r19, 0xFF	; 255
     926:	4f e7       	ldi	r20, 0x7F	; 127
     928:	57 e4       	ldi	r21, 0x47	; 71
     92a:	6d 81       	ldd	r22, Y+5	; 0x05
     92c:	7e 81       	ldd	r23, Y+6	; 0x06
     92e:	8f 81       	ldd	r24, Y+7	; 0x07
     930:	98 85       	ldd	r25, Y+8	; 0x08
     932:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
     936:	88 23       	and	r24, r24
     938:	d9 f1       	breq	.+118    	; 0x9b0 <.L78>
     93a:	d4 f1       	brlt	.+116    	; 0x9b0 <.L78>

0000093c <.Loc.102>:
		__ticks = (uint16_t) (__ms * 10.0);
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e2       	ldi	r20, 0x20	; 32
     942:	51 e4       	ldi	r21, 0x41	; 65
     944:	69 81       	ldd	r22, Y+1	; 0x01
     946:	7a 81       	ldd	r23, Y+2	; 0x02
     948:	8b 81       	ldd	r24, Y+3	; 0x03
     94a:	9c 81       	ldd	r25, Y+4	; 0x04
     94c:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     950:	6f 8b       	std	Y+23, r22	; 0x17
     952:	78 8f       	std	Y+24, r23	; 0x18
     954:	89 8f       	std	Y+25, r24	; 0x19
     956:	9a 8f       	std	Y+26, r25	; 0x1a
     958:	8f 89       	ldd	r24, Y+23	; 0x17
     95a:	98 8d       	ldd	r25, Y+24	; 0x18
     95c:	a9 8d       	ldd	r26, Y+25	; 0x19
     95e:	ba 8d       	ldd	r27, Y+26	; 0x1a
     960:	8f 87       	std	Y+15, r24	; 0x0f
     962:	98 8b       	std	Y+16, r25	; 0x10
     964:	a9 8b       	std	Y+17, r26	; 0x11
     966:	ba 8b       	std	Y+18, r27	; 0x12

00000968 <.Loc.103>:
     968:	6f 85       	ldd	r22, Y+15	; 0x0f
     96a:	78 89       	ldd	r23, Y+16	; 0x10
     96c:	89 89       	ldd	r24, Y+17	; 0x11
     96e:	9a 89       	ldd	r25, Y+18	; 0x12
     970:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     974:	6b 8f       	std	Y+27, r22	; 0x1b
     976:	7c 8f       	std	Y+28, r23	; 0x1c
     978:	8d 8f       	std	Y+29, r24	; 0x1d
     97a:	9e 8f       	std	Y+30, r25	; 0x1e
     97c:	ab 8d       	ldd	r26, Y+27	; 0x1b
     97e:	bc 8d       	ldd	r27, Y+28	; 0x1c
     980:	ba 87       	std	Y+10, r27	; 0x0a
     982:	a9 87       	std	Y+9, r26	; 0x09

00000984 <.Loc.104>:
		while(__ticks)
     984:	10 c0       	rjmp	.+32     	; 0x9a6 <.L72>

00000986 <.L73>:
     986:	80 e9       	ldi	r24, 0x90	; 144
     988:	91 e0       	ldi	r25, 0x01	; 1
     98a:	9c 87       	std	Y+12, r25	; 0x0c
     98c:	8b 87       	std	Y+11, r24	; 0x0b

0000098e <.LBB74>:
     98e:	8b 85       	ldd	r24, Y+11	; 0x0b
     990:	9c 85       	ldd	r25, Y+12	; 0x0c

00000992 <.L1^B11>:
     992:	01 97       	sbiw	r24, 0x01	; 1
     994:	f1 f7       	brne	.-4      	; 0x992 <.L1^B11>
     996:	9c 87       	std	Y+12, r25	; 0x0c
     998:	8b 87       	std	Y+11, r24	; 0x0b

0000099a <.Loc.106>:
	...

0000099c <.LBE74>:
			__ticks --;
     99c:	89 85       	ldd	r24, Y+9	; 0x09
     99e:	9a 85       	ldd	r25, Y+10	; 0x0a
     9a0:	01 97       	sbiw	r24, 0x01	; 1
     9a2:	9a 87       	std	Y+10, r25	; 0x0a
     9a4:	89 87       	std	Y+9, r24	; 0x09

000009a6 <.L72>:
		while(__ticks)
     9a6:	89 85       	ldd	r24, Y+9	; 0x09
     9a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     9aa:	00 97       	sbiw	r24, 0x00	; 0
     9ac:	61 f7       	brne	.-40     	; 0x986 <.L73>

000009ae <.Loc.109>:
		return;
     9ae:	19 c0       	rjmp	.+50     	; 0x9e2 <.L74>

000009b0 <.L78>:
		__ticks = (uint16_t)__tmp;
     9b0:	6d 81       	ldd	r22, Y+5	; 0x05
     9b2:	7e 81       	ldd	r23, Y+6	; 0x06
     9b4:	8f 81       	ldd	r24, Y+7	; 0x07
     9b6:	98 85       	ldd	r25, Y+8	; 0x08
     9b8:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     9bc:	6f 8f       	std	Y+31, r22	; 0x1f
     9be:	78 a3       	std	Y+32, r23	; 0x20
     9c0:	89 a3       	std	Y+33, r24	; 0x21
     9c2:	9a a3       	std	Y+34, r25	; 0x22
     9c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9c6:	98 a1       	ldd	r25, Y+32	; 0x20
     9c8:	9a 87       	std	Y+10, r25	; 0x0a
     9ca:	89 87       	std	Y+9, r24	; 0x09

000009cc <.L69>:
     9cc:	89 85       	ldd	r24, Y+9	; 0x09
     9ce:	9a 85       	ldd	r25, Y+10	; 0x0a
     9d0:	9e 87       	std	Y+14, r25	; 0x0e
     9d2:	8d 87       	std	Y+13, r24	; 0x0d

000009d4 <.LBB76>:
     9d4:	8d 85       	ldd	r24, Y+13	; 0x0d
     9d6:	9e 85       	ldd	r25, Y+14	; 0x0e

000009d8 <.L1^B12>:
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <.L1^B12>
     9dc:	9e 87       	std	Y+14, r25	; 0x0e
     9de:	8d 87       	std	Y+13, r24	; 0x0d

000009e0 <.Loc.112>:
	...

000009e2 <.L74>:
    _delay_ms(100);
}
     9e2:	00 00       	nop
     9e4:	a2 96       	adiw	r28, 0x22	; 34
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	f8 94       	cli
     9ea:	de bf       	out	0x3e, r29	; 62
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	cd bf       	out	0x3d, r28	; 61
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	08 95       	ret

000009f6 <init_motors>:

void init_motors(void)
{
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	cd b7       	in	r28, 0x3d	; 61
     9fc:	de b7       	in	r29, 0x3e	; 62

000009fe <.Loc.115>:
    DDRL |= (1 << IN1) | (1 << IN2);
     9fe:	8a e0       	ldi	r24, 0x0A	; 10
     a00:	91 e0       	ldi	r25, 0x01	; 1
     a02:	fc 01       	movw	r30, r24
     a04:	20 81       	ld	r18, Z
     a06:	8a e0       	ldi	r24, 0x0A	; 10
     a08:	91 e0       	ldi	r25, 0x01	; 1

00000a0a <.Loc.116>:
     a0a:	25 60       	ori	r18, 0x05	; 5
     a0c:	fc 01       	movw	r30, r24
     a0e:	20 83       	st	Z, r18

00000a10 <.Loc.117>:
    DDRB |= (1 << IN3) | (1 << IN4);
     a10:	84 e2       	ldi	r24, 0x24	; 36
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	fc 01       	movw	r30, r24
     a16:	20 81       	ld	r18, Z
     a18:	84 e2       	ldi	r24, 0x24	; 36
     a1a:	90 e0       	ldi	r25, 0x00	; 0

00000a1c <.Loc.118>:
     a1c:	25 60       	ori	r18, 0x05	; 5
     a1e:	fc 01       	movw	r30, r24
     a20:	20 83       	st	Z, r18

00000a22 <.Loc.119>:

    DDRH |= (1 << EN_A);
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	91 e0       	ldi	r25, 0x01	; 1
     a26:	fc 01       	movw	r30, r24
     a28:	20 81       	ld	r18, Z
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	91 e0       	ldi	r25, 0x01	; 1

00000a2e <.Loc.120>:
     a2e:	20 64       	ori	r18, 0x40	; 64
     a30:	fc 01       	movw	r30, r24
     a32:	20 83       	st	Z, r18

00000a34 <.Loc.121>:
    DDRE |= (1 << EN_B);
     a34:	8d e2       	ldi	r24, 0x2D	; 45
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	fc 01       	movw	r30, r24
     a3a:	20 81       	ld	r18, Z
     a3c:	8d e2       	ldi	r24, 0x2D	; 45
     a3e:	90 e0       	ldi	r25, 0x00	; 0

00000a40 <.Loc.122>:
     a40:	28 60       	ori	r18, 0x08	; 8
     a42:	fc 01       	movw	r30, r24
     a44:	20 83       	st	Z, r18

00000a46 <.Loc.123>:

    TCCR2A |= (1 << WGM20) | (1 << WGM21);
     a46:	80 eb       	ldi	r24, 0xB0	; 176
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	fc 01       	movw	r30, r24
     a4c:	20 81       	ld	r18, Z
     a4e:	80 eb       	ldi	r24, 0xB0	; 176
     a50:	90 e0       	ldi	r25, 0x00	; 0

00000a52 <.Loc.124>:
     a52:	23 60       	ori	r18, 0x03	; 3
     a54:	fc 01       	movw	r30, r24
     a56:	20 83       	st	Z, r18

00000a58 <.Loc.125>:
    TCCR2A |= (1 << COM2B1);
     a58:	80 eb       	ldi	r24, 0xB0	; 176
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	fc 01       	movw	r30, r24
     a5e:	20 81       	ld	r18, Z
     a60:	80 eb       	ldi	r24, 0xB0	; 176
     a62:	90 e0       	ldi	r25, 0x00	; 0

00000a64 <.Loc.126>:
     a64:	20 62       	ori	r18, 0x20	; 32
     a66:	fc 01       	movw	r30, r24
     a68:	20 83       	st	Z, r18

00000a6a <.Loc.127>:
    TCCR2B |= (1 << CS21);
     a6a:	81 eb       	ldi	r24, 0xB1	; 177
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	fc 01       	movw	r30, r24
     a70:	20 81       	ld	r18, Z
     a72:	81 eb       	ldi	r24, 0xB1	; 177
     a74:	90 e0       	ldi	r25, 0x00	; 0

00000a76 <.Loc.128>:
     a76:	22 60       	ori	r18, 0x02	; 2
     a78:	fc 01       	movw	r30, r24
     a7a:	20 83       	st	Z, r18

00000a7c <.Loc.129>:

    TCCR3A |= (1 << WGM30) | (1 << WGM32);
     a7c:	80 e9       	ldi	r24, 0x90	; 144
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	fc 01       	movw	r30, r24
     a82:	20 81       	ld	r18, Z
     a84:	80 e9       	ldi	r24, 0x90	; 144
     a86:	90 e0       	ldi	r25, 0x00	; 0

00000a88 <.Loc.130>:
     a88:	29 60       	ori	r18, 0x09	; 9
     a8a:	fc 01       	movw	r30, r24
     a8c:	20 83       	st	Z, r18

00000a8e <.Loc.131>:
    TCCR3A |= (1 << COM3A1);
     a8e:	80 e9       	ldi	r24, 0x90	; 144
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	fc 01       	movw	r30, r24
     a94:	20 81       	ld	r18, Z
     a96:	80 e9       	ldi	r24, 0x90	; 144
     a98:	90 e0       	ldi	r25, 0x00	; 0

00000a9a <.Loc.132>:
     a9a:	20 68       	ori	r18, 0x80	; 128
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 83       	st	Z, r18

00000aa0 <.Loc.133>:
    TCCR3B |= (1 << CS31);
     aa0:	81 e9       	ldi	r24, 0x91	; 145
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	fc 01       	movw	r30, r24
     aa6:	20 81       	ld	r18, Z
     aa8:	81 e9       	ldi	r24, 0x91	; 145
     aaa:	90 e0       	ldi	r25, 0x00	; 0

00000aac <.Loc.134>:
     aac:	22 60       	ori	r18, 0x02	; 2
     aae:	fc 01       	movw	r30, r24
     ab0:	20 83       	st	Z, r18

00000ab2 <.Loc.135>:

    OCR2B = 0;
     ab2:	84 eb       	ldi	r24, 0xB4	; 180
     ab4:	90 e0       	ldi	r25, 0x00	; 0

00000ab6 <.Loc.136>:
     ab6:	fc 01       	movw	r30, r24
     ab8:	10 82       	st	Z, r1

00000aba <.Loc.137>:
    OCR3A = 0;
     aba:	88 e9       	ldi	r24, 0x98	; 152
     abc:	90 e0       	ldi	r25, 0x00	; 0

00000abe <.Loc.138>:
     abe:	fc 01       	movw	r30, r24
     ac0:	11 82       	std	Z+1, r1	; 0x01
     ac2:	10 82       	st	Z, r1

00000ac4 <.Loc.139>:
}
     ac4:	00 00       	nop
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	08 95       	ret

00000acc <set_motor_speed>:

void set_motor_speed(uint8_t motor, uint8_t speed)
{
     acc:	cf 93       	push	r28
     ace:	df 93       	push	r29
     ad0:	0f 92       	push	r0
     ad2:	0f 92       	push	r0
     ad4:	cd b7       	in	r28, 0x3d	; 61
     ad6:	de b7       	in	r29, 0x3e	; 62
     ad8:	89 83       	std	Y+1, r24	; 0x01
     ada:	6a 83       	std	Y+2, r22	; 0x02

00000adc <.Loc.141>:
    if (motor == 1)
     adc:	89 81       	ldd	r24, Y+1	; 0x01
     ade:	81 30       	cpi	r24, 0x01	; 1
     ae0:	29 f4       	brne	.+10     	; 0xaec <.L81>

00000ae2 <.Loc.142>:
        {
            OCR2B = speed;
     ae2:	84 eb       	ldi	r24, 0xB4	; 180
     ae4:	90 e0       	ldi	r25, 0x00	; 0

00000ae6 <.Loc.143>:
     ae6:	2a 81       	ldd	r18, Y+2	; 0x02
     ae8:	fc 01       	movw	r30, r24
     aea:	20 83       	st	Z, r18

00000aec <.L81>:
        }
    if (motor == 2)
     aec:	89 81       	ldd	r24, Y+1	; 0x01
     aee:	82 30       	cpi	r24, 0x02	; 2
     af0:	41 f4       	brne	.+16     	; 0xb02 <.L83>

00000af2 <.Loc.145>:
        {
            OCR3A = speed;
     af2:	88 e9       	ldi	r24, 0x98	; 152
     af4:	90 e0       	ldi	r25, 0x00	; 0

00000af6 <.Loc.146>:
     af6:	2a 81       	ldd	r18, Y+2	; 0x02
     af8:	22 2f       	mov	r18, r18
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	fc 01       	movw	r30, r24
     afe:	31 83       	std	Z+1, r19	; 0x01
     b00:	20 83       	st	Z, r18

00000b02 <.L83>:
        }
}
     b02:	00 00       	nop
     b04:	0f 90       	pop	r0
     b06:	0f 90       	pop	r0
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <set_motor_direction>:

void set_motor_direction(uint8_t motor, uint8_t direction)
{
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	0f 92       	push	r0
     b14:	0f 92       	push	r0
     b16:	cd b7       	in	r28, 0x3d	; 61
     b18:	de b7       	in	r29, 0x3e	; 62
     b1a:	89 83       	std	Y+1, r24	; 0x01
     b1c:	6a 83       	std	Y+2, r22	; 0x02

00000b1e <.Loc.149>:
    if (motor == 1)
     b1e:	89 81       	ldd	r24, Y+1	; 0x01
     b20:	81 30       	cpi	r24, 0x01	; 1
     b22:	b1 f4       	brne	.+44     	; 0xb50 <.L85>

00000b24 <.Loc.150>:
    {
        if (direction == 1)
     b24:	8a 81       	ldd	r24, Y+2	; 0x02
     b26:	81 30       	cpi	r24, 0x01	; 1
     b28:	59 f5       	brne	.+86     	; 0xb80 <.L87>

00000b2a <.Loc.151>:
        {
            PORTL |= (1 << IN1);
     b2a:	8b e0       	ldi	r24, 0x0B	; 11
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	fc 01       	movw	r30, r24
     b30:	20 81       	ld	r18, Z
     b32:	8b e0       	ldi	r24, 0x0B	; 11
     b34:	91 e0       	ldi	r25, 0x01	; 1

00000b36 <.Loc.152>:
     b36:	24 60       	ori	r18, 0x04	; 4
     b38:	fc 01       	movw	r30, r24
     b3a:	20 83       	st	Z, r18

00000b3c <.Loc.153>:
            PORTL &= ~(1 << IN2);
     b3c:	8b e0       	ldi	r24, 0x0B	; 11
     b3e:	91 e0       	ldi	r25, 0x01	; 1
     b40:	fc 01       	movw	r30, r24
     b42:	20 81       	ld	r18, Z

00000b44 <.Loc.154>:
     b44:	8b e0       	ldi	r24, 0x0B	; 11
     b46:	91 e0       	ldi	r25, 0x01	; 1

00000b48 <.Loc.155>:
     b48:	2e 7f       	andi	r18, 0xFE	; 254
     b4a:	fc 01       	movw	r30, r24
     b4c:	20 83       	st	Z, r18

00000b4e <.Loc.156>:
        {
            PORTB |= (1 << IN3);
            PORTB &= ~(1 << IN4);
        }
    }
}
     b4e:	18 c0       	rjmp	.+48     	; 0xb80 <.L87>

00000b50 <.L85>:
    else if (motor == 2)
     b50:	89 81       	ldd	r24, Y+1	; 0x01
     b52:	82 30       	cpi	r24, 0x02	; 2
     b54:	a9 f4       	brne	.+42     	; 0xb80 <.L87>

00000b56 <.Loc.158>:
        if (direction == 1)
     b56:	8a 81       	ldd	r24, Y+2	; 0x02
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	91 f4       	brne	.+36     	; 0xb80 <.L87>

00000b5c <.Loc.159>:
            PORTB |= (1 << IN3);
     b5c:	85 e2       	ldi	r24, 0x25	; 37
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	fc 01       	movw	r30, r24
     b62:	20 81       	ld	r18, Z
     b64:	85 e2       	ldi	r24, 0x25	; 37
     b66:	90 e0       	ldi	r25, 0x00	; 0

00000b68 <.Loc.160>:
     b68:	24 60       	ori	r18, 0x04	; 4
     b6a:	fc 01       	movw	r30, r24
     b6c:	20 83       	st	Z, r18

00000b6e <.Loc.161>:
            PORTB &= ~(1 << IN4);
     b6e:	85 e2       	ldi	r24, 0x25	; 37
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	fc 01       	movw	r30, r24
     b74:	20 81       	ld	r18, Z

00000b76 <.Loc.162>:
     b76:	85 e2       	ldi	r24, 0x25	; 37
     b78:	90 e0       	ldi	r25, 0x00	; 0

00000b7a <.Loc.163>:
     b7a:	2e 7f       	andi	r18, 0xFE	; 254
     b7c:	fc 01       	movw	r30, r24
     b7e:	20 83       	st	Z, r18

00000b80 <.L87>:
}
     b80:	00 00       	nop
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	08 95       	ret

00000b8c <initm>:

void initm(void)
{
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	cd b7       	in	r28, 0x3d	; 61
     b92:	de b7       	in	r29, 0x3e	; 62

00000b94 <.Loc.166>:
    set_motor_direction(1, 1);
     b94:	61 e0       	ldi	r22, 0x01	; 1
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	0e 94 87 05 	call	0xb0e	; 0xb0e <set_motor_direction>

00000b9c <.Loc.167>:
    set_motor_direction(2, 1);
     b9c:	61 e0       	ldi	r22, 0x01	; 1
     b9e:	82 e0       	ldi	r24, 0x02	; 2
     ba0:	0e 94 87 05 	call	0xb0e	; 0xb0e <set_motor_direction>

00000ba4 <.Loc.168>:
}
     ba4:	00 00       	nop
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	08 95       	ret

00000bac <init_infrared>:
#include <avr/io.h>
#include "infrared.h"

void init_infrared(void)
{
     bac:	cf 93       	push	r28
     bae:	df 93       	push	r29
     bb0:	cd b7       	in	r28, 0x3d	; 61
     bb2:	de b7       	in	r29, 0x3e	; 62

00000bb4 <.Loc.1>:
    DDRF &= ~(1 << INFRARED_PIN); // Set as input
     bb4:	80 e3       	ldi	r24, 0x30	; 48
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	fc 01       	movw	r30, r24
     bba:	20 81       	ld	r18, Z

00000bbc <.Loc.2>:
     bbc:	80 e3       	ldi	r24, 0x30	; 48
     bbe:	90 e0       	ldi	r25, 0x00	; 0

00000bc0 <.Loc.3>:
     bc0:	2f 7d       	andi	r18, 0xDF	; 223
     bc2:	fc 01       	movw	r30, r24
     bc4:	20 83       	st	Z, r18

00000bc6 <.Loc.4>:
    DDRF &= ~(1 << INFRARED2_PIN);
     bc6:	80 e3       	ldi	r24, 0x30	; 48
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	fc 01       	movw	r30, r24
     bcc:	20 81       	ld	r18, Z

00000bce <.Loc.5>:
     bce:	80 e3       	ldi	r24, 0x30	; 48
     bd0:	90 e0       	ldi	r25, 0x00	; 0

00000bd2 <.Loc.6>:
     bd2:	2f 7b       	andi	r18, 0xBF	; 191
     bd4:	fc 01       	movw	r30, r24
     bd6:	20 83       	st	Z, r18

00000bd8 <.Loc.7>:
}
     bd8:	00 00       	nop
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	08 95       	ret

00000be0 <read_ir_left>:

int read_ir_left(void)
{
     be0:	cf 93       	push	r28
     be2:	df 93       	push	r29
     be4:	cd b7       	in	r28, 0x3d	; 61
     be6:	de b7       	in	r29, 0x3e	; 62

00000be8 <.Loc.9>:
    return (PINF & (1 << INFRARED_PIN)) == 0;
     be8:	8f e2       	ldi	r24, 0x2F	; 47
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	fc 01       	movw	r30, r24
     bee:	80 81       	ld	r24, Z

00000bf0 <.Loc.10>:
     bf0:	88 2f       	mov	r24, r24
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	80 72       	andi	r24, 0x20	; 32
     bf6:	99 27       	eor	r25, r25

00000bf8 <.Loc.11>:
     bf8:	21 e0       	ldi	r18, 0x01	; 1
     bfa:	00 97       	sbiw	r24, 0x00	; 0
     bfc:	09 f0       	breq	.+2      	; 0xc00 <.L3>
     bfe:	20 e0       	ldi	r18, 0x00	; 0

00000c00 <.L3>:
     c00:	82 2f       	mov	r24, r18
     c02:	90 e0       	ldi	r25, 0x00	; 0

00000c04 <.Loc.12>:
}
     c04:	df 91       	pop	r29
     c06:	cf 91       	pop	r28
     c08:	08 95       	ret

00000c0a <read_ir_right>:
int read_ir_right(void)
{
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	cd b7       	in	r28, 0x3d	; 61
     c10:	de b7       	in	r29, 0x3e	; 62

00000c12 <.Loc.14>:
    return (PINF & (1 << INFRARED2_PIN)) == 0;
     c12:	8f e2       	ldi	r24, 0x2F	; 47
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	fc 01       	movw	r30, r24
     c18:	80 81       	ld	r24, Z

00000c1a <.Loc.15>:
     c1a:	88 2f       	mov	r24, r24
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	80 74       	andi	r24, 0x40	; 64
     c20:	99 27       	eor	r25, r25

00000c22 <.Loc.16>:
     c22:	21 e0       	ldi	r18, 0x01	; 1
     c24:	00 97       	sbiw	r24, 0x00	; 0
     c26:	09 f0       	breq	.+2      	; 0xc2a <.L6>
     c28:	20 e0       	ldi	r18, 0x00	; 0

00000c2a <.L6>:
     c2a:	82 2f       	mov	r24, r18
     c2c:	90 e0       	ldi	r25, 0x00	; 0

00000c2e <.Loc.17>:
}
     c2e:	df 91       	pop	r29
     c30:	cf 91       	pop	r28
     c32:	08 95       	ret

00000c34 <button_pressed>:
volatile uint16_t ir_left_detected_flag = 0;
volatile uint16_t ir_right_detected_flag = 0;
volatile uint16_t path_exit_flag = 0;
volatile uint16_t agv_can_go = 1; // Initialize to 1 to allow AGV to move initially

int button_pressed(void) {
     c34:	cf 93       	push	r28
     c36:	df 93       	push	r29
     c38:	cd b7       	in	r28, 0x3d	; 61
     c3a:	de b7       	in	r29, 0x3e	; 62

00000c3c <.Loc.1>:
    return (PINB & (1 << PB6)) == 0;
     c3c:	83 e2       	ldi	r24, 0x23	; 35
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	fc 01       	movw	r30, r24
     c42:	80 81       	ld	r24, Z

00000c44 <.Loc.2>:
     c44:	88 2f       	mov	r24, r24
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	80 74       	andi	r24, 0x40	; 64
     c4a:	99 27       	eor	r25, r25

00000c4c <.Loc.3>:
     c4c:	21 e0       	ldi	r18, 0x01	; 1
     c4e:	00 97       	sbiw	r24, 0x00	; 0
     c50:	09 f0       	breq	.+2      	; 0xc54 <.L2>
     c52:	20 e0       	ldi	r18, 0x00	; 0

00000c54 <.L2>:
     c54:	82 2f       	mov	r24, r18
     c56:	90 e0       	ldi	r25, 0x00	; 0

00000c58 <.Loc.4>:
}
     c58:	df 91       	pop	r29
     c5a:	cf 91       	pop	r28
     c5c:	08 95       	ret

00000c5e <init>:

// Initialize system
void init(void) {
     c5e:	cf 93       	push	r28
     c60:	df 93       	push	r29
     c62:	cd b7       	in	r28, 0x3d	; 61
     c64:	de b7       	in	r29, 0x3e	; 62

00000c66 <.Loc.6>:
    // Initialize peripherals
    initm();
     c66:	0e 94 c6 05 	call	0xb8c	; 0xb8c <initm>

00000c6a <.Loc.7>:
    init_motors();
     c6a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <init_motors>

00000c6e <.Loc.8>:
    init_infrared();
     c6e:	0e 94 d6 05 	call	0xbac	; 0xbac <init_infrared>

00000c72 <.Loc.9>:
    init_ultrasonics();
     c72:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <init_ultrasonics>

00000c76 <.Loc.10>:
    init_timer_buzzer();
     c76:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <init_timer_buzzer>

00000c7a <.Loc.11>:

    // Initialize Timer0 for ultrasonic delay and cool-down
    TCCR0A = (1 << WGM01); // CTC mode
     c7a:	84 e4       	ldi	r24, 0x44	; 68
     c7c:	90 e0       	ldi	r25, 0x00	; 0

00000c7e <.Loc.12>:
     c7e:	22 e0       	ldi	r18, 0x02	; 2
     c80:	fc 01       	movw	r30, r24
     c82:	20 83       	st	Z, r18

00000c84 <.Loc.13>:
    TCCR0B = (1 << CS02) | (1 << CS00); // Prescaler 1024
     c84:	85 e4       	ldi	r24, 0x45	; 69
     c86:	90 e0       	ldi	r25, 0x00	; 0

00000c88 <.Loc.14>:
     c88:	25 e0       	ldi	r18, 0x05	; 5
     c8a:	fc 01       	movw	r30, r24
     c8c:	20 83       	st	Z, r18

00000c8e <.Loc.15>:
    OCR0A = 156; // 10ms interval (16000000/1024/100)
     c8e:	87 e4       	ldi	r24, 0x47	; 71
     c90:	90 e0       	ldi	r25, 0x00	; 0

00000c92 <.Loc.16>:
     c92:	2c e9       	ldi	r18, 0x9C	; 156
     c94:	fc 01       	movw	r30, r24
     c96:	20 83       	st	Z, r18

00000c98 <.Loc.17>:
    TIMSK0 |= (1 << OCIE0A); // Enable Timer0 compare match A interrupt
     c98:	8e e6       	ldi	r24, 0x6E	; 110
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	fc 01       	movw	r30, r24
     c9e:	20 81       	ld	r18, Z
     ca0:	8e e6       	ldi	r24, 0x6E	; 110
     ca2:	90 e0       	ldi	r25, 0x00	; 0

00000ca4 <.Loc.18>:
     ca4:	22 60       	ori	r18, 0x02	; 2
     ca6:	fc 01       	movw	r30, r24
     ca8:	20 83       	st	Z, r18

00000caa <.Loc.19>:

    sei(); // Enable global interrupts
     caa:	78 94       	sei

00000cac <.Loc.20>:
    init_buzzer(); // Initialize the buzzer
     cac:	0e 94 95 00 	call	0x12a	; 0x12a <init_buzzer>

00000cb0 <.Loc.21>:
    buzzer_uit();  // Ensure the buzzer is off
     cb0:	0e 94 c0 00 	call	0x180	; 0x180 <buzzer_uit>

00000cb4 <.Loc.22>:
}
     cb4:	00 00       	nop
     cb6:	df 91       	pop	r29
     cb8:	cf 91       	pop	r28
     cba:	08 95       	ret

00000cbc <__vector_21>:

// Timer0 compare match interrupt service routine
ISR(TIMER0_COMPA_vect) {
     cbc:	1f 92       	push	r1
     cbe:	0f 92       	push	r0
     cc0:	0f b6       	in	r0, 0x3f	; 63
     cc2:	0f 92       	push	r0
     cc4:	11 24       	eor	r1, r1
     cc6:	0b b6       	in	r0, 0x3b	; 59
     cc8:	0f 92       	push	r0
     cca:	2f 93       	push	r18
     ccc:	3f 93       	push	r19
     cce:	4f 93       	push	r20
     cd0:	5f 93       	push	r21
     cd2:	6f 93       	push	r22
     cd4:	7f 93       	push	r23
     cd6:	8f 93       	push	r24
     cd8:	9f 93       	push	r25
     cda:	af 93       	push	r26
     cdc:	bf 93       	push	r27
     cde:	ef 93       	push	r30
     ce0:	ff 93       	push	r31
     ce2:	cf 93       	push	r28
     ce4:	df 93       	push	r29
     ce6:	cd b7       	in	r28, 0x3d	; 61
     ce8:	de b7       	in	r29, 0x3e	; 62

00000cea <.Loc.24>:
    static uint8_t tick_count = 0;

    if (boom_detected_flag) {
     cea:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

00000cee <.Loc.25>:
     cee:	88 23       	and	r24, r24
     cf0:	41 f1       	breq	.+80     	; 0xd42 <.L6>

00000cf2 <.Loc.26>:
        tick_count++;
     cf2:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <tick_count.0>
     cf6:	8f 5f       	subi	r24, 0xFF	; 255
     cf8:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <tick_count.0>

00000cfc <.Loc.27>:

        if (tick_count % 75 == 0) { // Toggle buzzer every 750ms
     cfc:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <tick_count.0>
     d00:	8b ed       	ldi	r24, 0xDB	; 219
     d02:	98 9f       	mul	r25, r24
     d04:	81 2d       	mov	r24, r1
     d06:	11 24       	eor	r1, r1
     d08:	82 95       	swap	r24
     d0a:	86 95       	lsr	r24
     d0c:	86 95       	lsr	r24
     d0e:	83 70       	andi	r24, 0x03	; 3
     d10:	2b e4       	ldi	r18, 0x4B	; 75
     d12:	82 9f       	mul	r24, r18
     d14:	80 2d       	mov	r24, r0
     d16:	11 24       	eor	r1, r1
     d18:	29 2f       	mov	r18, r25
     d1a:	28 1b       	sub	r18, r24
     d1c:	82 2f       	mov	r24, r18

00000d1e <.Loc.28>:
     d1e:	88 23       	and	r24, r24
     d20:	11 f4       	brne	.+4      	; 0xd26 <.L7>

00000d22 <.Loc.29>:
            buzzer_toggle();
     d22:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <buzzer_toggle>

00000d26 <.L7>:
        }

        if (tick_count >= 150) { // 1.5 seconds
     d26:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <tick_count.0>

00000d2a <.Loc.31>:
     d2a:	85 39       	cpi	r24, 0x95	; 149
     d2c:	51 f0       	breq	.+20     	; 0xd42 <.L6>
     d2e:	48 f0       	brcs	.+18     	; 0xd42 <.L6>

00000d30 <.Loc.32>:
            boom_detected_flag = 0;
     d30:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <boom_detected_flag>

00000d34 <.Loc.33>:
            cool_down_flag = 1;
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <cool_down_flag>

00000d3a <.Loc.34>:
            tick_count = 0;
     d3a:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <tick_count.0>

00000d3e <.Loc.35>:
            buzzer_uit();
     d3e:	0e 94 c0 00 	call	0x180	; 0x180 <buzzer_uit>

00000d42 <.L6>:
        }
    }

    if (cool_down_flag) {
     d42:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <cool_down_flag>

00000d46 <.Loc.37>:
     d46:	88 23       	and	r24, r24
     d48:	f9 f0       	breq	.+62     	; 0xd88 <.L9>

00000d4a <.Loc.38>:
        cool_down_counter++;
     d4a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <cool_down_counter>
     d4e:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <cool_down_counter+0x1>
     d52:	01 96       	adiw	r24, 0x01	; 1
     d54:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <cool_down_counter+0x1>
     d58:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <cool_down_counter>

00000d5c <.Loc.39>:
        if (cool_down_counter >= 50) { // Cool-down period of 1.5 seconds
     d5c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <cool_down_counter>
     d60:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <cool_down_counter+0x1>

00000d64 <.Loc.40>:
     d64:	81 33       	cpi	r24, 0x31	; 49
     d66:	91 05       	cpc	r25, r1
     d68:	79 f0       	breq	.+30     	; 0xd88 <.L9>
     d6a:	70 f0       	brcs	.+28     	; 0xd88 <.L9>

00000d6c <.LBB44>:
            cool_down_flag = 0;
     d6c:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <cool_down_flag>

00000d70 <.Loc.42>:
            cool_down_counter = 0;
     d70:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <cool_down_counter+0x1>
     d74:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <cool_down_counter>

00000d78 <.Loc.43>:
            disable_timer0();
     d78:	0e 94 da 06 	call	0xdb4	; 0xdb4 <disable_timer0>

00000d7c <.Loc.44>:
            agv_can_go = 1;
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <agv_can_go+0x1>
     d84:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_can_go>

00000d88 <.L9>:
        }
    }
}
     d88:	00 00       	nop
     d8a:	df 91       	pop	r29
     d8c:	cf 91       	pop	r28
     d8e:	ff 91       	pop	r31
     d90:	ef 91       	pop	r30
     d92:	bf 91       	pop	r27
     d94:	af 91       	pop	r26
     d96:	9f 91       	pop	r25
     d98:	8f 91       	pop	r24
     d9a:	7f 91       	pop	r23
     d9c:	6f 91       	pop	r22
     d9e:	5f 91       	pop	r21
     da0:	4f 91       	pop	r20
     da2:	3f 91       	pop	r19
     da4:	2f 91       	pop	r18
     da6:	0f 90       	pop	r0
     da8:	0b be       	out	0x3b, r0	; 59
     daa:	0f 90       	pop	r0
     dac:	0f be       	out	0x3f, r0	; 63
     dae:	0f 90       	pop	r0
     db0:	1f 90       	pop	r1
     db2:	18 95       	reti

00000db4 <disable_timer0>:

void disable_timer0() {
     db4:	cf 93       	push	r28
     db6:	df 93       	push	r29
     db8:	cd b7       	in	r28, 0x3d	; 61
     dba:	de b7       	in	r29, 0x3e	; 62

00000dbc <.Loc.47>:
    // Clear the Clock Select bits to stop the timer
    TCCR0B &= ~((1 << CS02) | (1 << CS01) | (1 << CS00));
     dbc:	85 e4       	ldi	r24, 0x45	; 69
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	fc 01       	movw	r30, r24
     dc2:	20 81       	ld	r18, Z

00000dc4 <.Loc.48>:
     dc4:	85 e4       	ldi	r24, 0x45	; 69
     dc6:	90 e0       	ldi	r25, 0x00	; 0

00000dc8 <.Loc.49>:
     dc8:	28 7f       	andi	r18, 0xF8	; 248
     dca:	fc 01       	movw	r30, r24
     dcc:	20 83       	st	Z, r18

00000dce <.Loc.50>:

    // Disable Timer0 interrupts
    //TIMSK0 &= ~((1 << OCIE0A));
}
     dce:	00 00       	nop
     dd0:	df 91       	pop	r29
     dd2:	cf 91       	pop	r28
     dd4:	08 95       	ret

00000dd6 <main>:

int main(void) {
     dd6:	0f 93       	push	r16
     dd8:	1f 93       	push	r17
     dda:	cf 93       	push	r28
     ddc:	df 93       	push	r29
     dde:	cd b7       	in	r28, 0x3d	; 61
     de0:	de b7       	in	r29, 0x3e	; 62
     de2:	ce 5e       	subi	r28, 0xEE	; 238
     de4:	d1 09       	sbc	r29, r1
     de6:	0f b6       	in	r0, 0x3f	; 63
     de8:	f8 94       	cli
     dea:	de bf       	out	0x3e, r29	; 62
     dec:	0f be       	out	0x3f, r0	; 63
     dee:	cd bf       	out	0x3d, r28	; 61

00000df0 <.Loc.52>:
    init();
     df0:	0e 94 2f 06 	call	0xc5e	; 0xc5e <init>

00000df4 <.Loc.53>:
    uint16_t distance1, distance2, distance3;
    int button_already_pressed = 0;
     df4:	1a 82       	std	Y+2, r1	; 0x02
     df6:	19 82       	std	Y+1, r1	; 0x01

00000df8 <.L75>:

    while (1) {
        distance1 = measure_distance1();
     df8:	0e 94 4c 10 	call	0x2098	; 0x2098 <measure_distance1>
     dfc:	a3 96       	adiw	r28, 0x23	; 35
     dfe:	6c af       	std	Y+60, r22	; 0x3c
     e00:	7d af       	std	Y+61, r23	; 0x3d
     e02:	8e af       	std	Y+62, r24	; 0x3e
     e04:	9f af       	std	Y+63, r25	; 0x3f
     e06:	a3 97       	sbiw	r28, 0x23	; 35

00000e08 <.Loc.55>:
     e08:	a3 96       	adiw	r28, 0x23	; 35
     e0a:	6c ad       	ldd	r22, Y+60	; 0x3c
     e0c:	7d ad       	ldd	r23, Y+61	; 0x3d
     e0e:	8e ad       	ldd	r24, Y+62	; 0x3e
     e10:	9f ad       	ldd	r25, Y+63	; 0x3f
     e12:	a3 97       	sbiw	r28, 0x23	; 35
     e14:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     e18:	cd 57       	subi	r28, 0x7D	; 125
     e1a:	df 4f       	sbci	r29, 0xFF	; 255
     e1c:	68 83       	st	Y, r22
     e1e:	79 83       	std	Y+1, r23	; 0x01
     e20:	8a 83       	std	Y+2, r24	; 0x02
     e22:	9b 83       	std	Y+3, r25	; 0x03
     e24:	c3 58       	subi	r28, 0x83	; 131
     e26:	d0 40       	sbci	r29, 0x00	; 0
     e28:	cd 57       	subi	r28, 0x7D	; 125
     e2a:	df 4f       	sbci	r29, 0xFF	; 255
     e2c:	88 81       	ld	r24, Y
     e2e:	99 81       	ldd	r25, Y+1	; 0x01
     e30:	c3 58       	subi	r28, 0x83	; 131
     e32:	d0 40       	sbci	r29, 0x00	; 0
     e34:	9e 83       	std	Y+6, r25	; 0x06
     e36:	8d 83       	std	Y+5, r24	; 0x05

00000e38 <.Loc.56>:
        distance2 = measure_distance2();
     e38:	0e 94 50 12 	call	0x24a0	; 0x24a0 <measure_distance2>
     e3c:	a7 96       	adiw	r28, 0x27	; 39
     e3e:	6c af       	std	Y+60, r22	; 0x3c
     e40:	7d af       	std	Y+61, r23	; 0x3d
     e42:	8e af       	std	Y+62, r24	; 0x3e
     e44:	9f af       	std	Y+63, r25	; 0x3f
     e46:	a7 97       	sbiw	r28, 0x27	; 39

00000e48 <.Loc.57>:
     e48:	a7 96       	adiw	r28, 0x27	; 39
     e4a:	6c ad       	ldd	r22, Y+60	; 0x3c
     e4c:	7d ad       	ldd	r23, Y+61	; 0x3d
     e4e:	8e ad       	ldd	r24, Y+62	; 0x3e
     e50:	9f ad       	ldd	r25, Y+63	; 0x3f
     e52:	a7 97       	sbiw	r28, 0x27	; 39
     e54:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     e58:	c9 57       	subi	r28, 0x79	; 121
     e5a:	df 4f       	sbci	r29, 0xFF	; 255
     e5c:	68 83       	st	Y, r22
     e5e:	79 83       	std	Y+1, r23	; 0x01
     e60:	8a 83       	std	Y+2, r24	; 0x02
     e62:	9b 83       	std	Y+3, r25	; 0x03
     e64:	c7 58       	subi	r28, 0x87	; 135
     e66:	d0 40       	sbci	r29, 0x00	; 0
     e68:	c9 57       	subi	r28, 0x79	; 121
     e6a:	df 4f       	sbci	r29, 0xFF	; 255
     e6c:	a8 81       	ld	r26, Y
     e6e:	b9 81       	ldd	r27, Y+1	; 0x01
     e70:	c7 58       	subi	r28, 0x87	; 135
     e72:	d0 40       	sbci	r29, 0x00	; 0
     e74:	b8 87       	std	Y+8, r27	; 0x08
     e76:	af 83       	std	Y+7, r26	; 0x07

00000e78 <.Loc.58>:
        distance3 = measure_distance3();
     e78:	0e 94 54 14 	call	0x28a8	; 0x28a8 <measure_distance3>
     e7c:	ab 96       	adiw	r28, 0x2b	; 43
     e7e:	6c af       	std	Y+60, r22	; 0x3c
     e80:	7d af       	std	Y+61, r23	; 0x3d
     e82:	8e af       	std	Y+62, r24	; 0x3e
     e84:	9f af       	std	Y+63, r25	; 0x3f
     e86:	ab 97       	sbiw	r28, 0x2b	; 43

00000e88 <.Loc.59>:
     e88:	ab 96       	adiw	r28, 0x2b	; 43
     e8a:	6c ad       	ldd	r22, Y+60	; 0x3c
     e8c:	7d ad       	ldd	r23, Y+61	; 0x3d
     e8e:	8e ad       	ldd	r24, Y+62	; 0x3e
     e90:	9f ad       	ldd	r25, Y+63	; 0x3f
     e92:	ab 97       	sbiw	r28, 0x2b	; 43
     e94:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     e98:	c5 57       	subi	r28, 0x75	; 117
     e9a:	df 4f       	sbci	r29, 0xFF	; 255
     e9c:	68 83       	st	Y, r22
     e9e:	79 83       	std	Y+1, r23	; 0x01
     ea0:	8a 83       	std	Y+2, r24	; 0x02
     ea2:	9b 83       	std	Y+3, r25	; 0x03
     ea4:	cb 58       	subi	r28, 0x8B	; 139
     ea6:	d0 40       	sbci	r29, 0x00	; 0
     ea8:	c5 57       	subi	r28, 0x75	; 117
     eaa:	df 4f       	sbci	r29, 0xFF	; 255
     eac:	e8 81       	ld	r30, Y
     eae:	f9 81       	ldd	r31, Y+1	; 0x01
     eb0:	cb 58       	subi	r28, 0x8B	; 139
     eb2:	d0 40       	sbci	r29, 0x00	; 0
     eb4:	fa 87       	std	Y+10, r31	; 0x0a
     eb6:	e9 87       	std	Y+9, r30	; 0x09

00000eb8 <.Loc.60>:

        ir_left_detected_flag = read_ir_left(); // Function to read left IR sensor
     eb8:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <read_ir_left>

00000ebc <.Loc.61>:
     ebc:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <ir_left_detected_flag+0x1>
     ec0:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <ir_left_detected_flag>

00000ec4 <.Loc.62>:
        ir_right_detected_flag = read_ir_right(); // Function to read right IR sensor
     ec4:	0e 94 05 06 	call	0xc0a	; 0xc0a <read_ir_right>

00000ec8 <.Loc.63>:
     ec8:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <ir_right_detected_flag+0x1>
     ecc:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <ir_right_detected_flag>

00000ed0 <.Loc.64>:

        if (button_pressed() && !button_already_pressed) {
     ed0:	0e 94 1a 06 	call	0xc34	; 0xc34 <button_pressed>

00000ed4 <.Loc.65>:
     ed4:	00 97       	sbiw	r24, 0x00	; 0
     ed6:	09 f4       	brne	.+2      	; 0xeda <.Loc.66>

00000ed8 <L0^A>:
     ed8:	bd c0       	rjmp	.+378    	; 0x1054 <.L12>

00000eda <.Loc.66>:
     eda:	89 81       	ldd	r24, Y+1	; 0x01
     edc:	9a 81       	ldd	r25, Y+2	; 0x02
     ede:	00 97       	sbiw	r24, 0x00	; 0
     ee0:	09 f0       	breq	.+2      	; 0xee4 <.Loc.67>

00000ee2 <L0^A>:
     ee2:	b8 c0       	rjmp	.+368    	; 0x1054 <.L12>

00000ee4 <.Loc.67>:
            button_already_pressed = 1;
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	9a 83       	std	Y+2, r25	; 0x02
     eea:	89 83       	std	Y+1, r24	; 0x01
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	a8 e4       	ldi	r26, 0x48	; 72
     ef2:	b2 e4       	ldi	r27, 0x42	; 66
     ef4:	8b 87       	std	Y+11, r24	; 0x0b
     ef6:	9c 87       	std	Y+12, r25	; 0x0c
     ef8:	ad 87       	std	Y+13, r26	; 0x0d
     efa:	be 87       	std	Y+14, r27	; 0x0e

00000efc <.LBB46>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     efc:	20 e0       	ldi	r18, 0x00	; 0
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	4a e7       	ldi	r20, 0x7A	; 122
     f02:	55 e4       	ldi	r21, 0x45	; 69
     f04:	6b 85       	ldd	r22, Y+11	; 0x0b
     f06:	7c 85       	ldd	r23, Y+12	; 0x0c
     f08:	8d 85       	ldd	r24, Y+13	; 0x0d
     f0a:	9e 85       	ldd	r25, Y+14	; 0x0e
     f0c:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     f10:	c1 57       	subi	r28, 0x71	; 113
     f12:	df 4f       	sbci	r29, 0xFF	; 255
     f14:	68 83       	st	Y, r22
     f16:	79 83       	std	Y+1, r23	; 0x01
     f18:	8a 83       	std	Y+2, r24	; 0x02
     f1a:	9b 83       	std	Y+3, r25	; 0x03
     f1c:	cf 58       	subi	r28, 0x8F	; 143
     f1e:	d0 40       	sbci	r29, 0x00	; 0
     f20:	c1 57       	subi	r28, 0x71	; 113
     f22:	df 4f       	sbci	r29, 0xFF	; 255
     f24:	88 81       	ld	r24, Y
     f26:	99 81       	ldd	r25, Y+1	; 0x01
     f28:	aa 81       	ldd	r26, Y+2	; 0x02
     f2a:	bb 81       	ldd	r27, Y+3	; 0x03
     f2c:	cf 58       	subi	r28, 0x8F	; 143
     f2e:	d0 40       	sbci	r29, 0x00	; 0
     f30:	8f 87       	std	Y+15, r24	; 0x0f
     f32:	98 8b       	std	Y+16, r25	; 0x10
     f34:	a9 8b       	std	Y+17, r26	; 0x11
     f36:	ba 8b       	std	Y+18, r27	; 0x12

00000f38 <.Loc.69>:
	if (__tmp < 1.0)
     f38:	20 e0       	ldi	r18, 0x00	; 0
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	40 e8       	ldi	r20, 0x80	; 128
     f3e:	5f e3       	ldi	r21, 0x3F	; 63
     f40:	6f 85       	ldd	r22, Y+15	; 0x0f
     f42:	78 89       	ldd	r23, Y+16	; 0x10
     f44:	89 89       	ldd	r24, Y+17	; 0x11
     f46:	9a 89       	ldd	r25, Y+18	; 0x12
     f48:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
     f4c:	88 23       	and	r24, r24
     f4e:	2c f4       	brge	.+10     	; 0xf5a <.L89>

00000f50 <.Loc.70>:
		__ticks = 1;
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	9c 8b       	std	Y+20, r25	; 0x14
     f56:	8b 8b       	std	Y+19, r24	; 0x13
     f58:	72 c0       	rjmp	.+228    	; 0x103e <.L15>

00000f5a <.L89>:
	else if (__tmp > 65535)
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	3f ef       	ldi	r19, 0xFF	; 255
     f5e:	4f e7       	ldi	r20, 0x7F	; 127
     f60:	57 e4       	ldi	r21, 0x47	; 71
     f62:	6f 85       	ldd	r22, Y+15	; 0x0f
     f64:	78 89       	ldd	r23, Y+16	; 0x10
     f66:	89 89       	ldd	r24, Y+17	; 0x11
     f68:	9a 89       	ldd	r25, Y+18	; 0x12
     f6a:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
     f6e:	88 23       	and	r24, r24
     f70:	09 f0       	breq	.+2      	; 0xf74 <L0^A>

00000f72 <L0^A>:
     f72:	0c f4       	brge	.+2      	; 0xf76 <.Loc.72>

00000f74 <L0^A>:
     f74:	4e c0       	rjmp	.+156    	; 0x1012 <.L90>

00000f76 <.Loc.72>:
		__ticks = (uint16_t) (__ms * 10.0);
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	40 e2       	ldi	r20, 0x20	; 32
     f7c:	51 e4       	ldi	r21, 0x41	; 65
     f7e:	6b 85       	ldd	r22, Y+11	; 0x0b
     f80:	7c 85       	ldd	r23, Y+12	; 0x0c
     f82:	8d 85       	ldd	r24, Y+13	; 0x0d
     f84:	9e 85       	ldd	r25, Y+14	; 0x0e
     f86:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
     f8a:	cd 56       	subi	r28, 0x6D	; 109
     f8c:	df 4f       	sbci	r29, 0xFF	; 255
     f8e:	68 83       	st	Y, r22
     f90:	79 83       	std	Y+1, r23	; 0x01
     f92:	8a 83       	std	Y+2, r24	; 0x02
     f94:	9b 83       	std	Y+3, r25	; 0x03
     f96:	c3 59       	subi	r28, 0x93	; 147
     f98:	d0 40       	sbci	r29, 0x00	; 0
     f9a:	cd 56       	subi	r28, 0x6D	; 109
     f9c:	df 4f       	sbci	r29, 0xFF	; 255
     f9e:	88 81       	ld	r24, Y
     fa0:	99 81       	ldd	r25, Y+1	; 0x01
     fa2:	aa 81       	ldd	r26, Y+2	; 0x02
     fa4:	bb 81       	ldd	r27, Y+3	; 0x03
     fa6:	c3 59       	subi	r28, 0x93	; 147
     fa8:	d0 40       	sbci	r29, 0x00	; 0
     faa:	af 96       	adiw	r28, 0x2f	; 47
     fac:	8c af       	std	Y+60, r24	; 0x3c
     fae:	9d af       	std	Y+61, r25	; 0x3d
     fb0:	ae af       	std	Y+62, r26	; 0x3e
     fb2:	bf af       	std	Y+63, r27	; 0x3f
     fb4:	af 97       	sbiw	r28, 0x2f	; 47

00000fb6 <.Loc.73>:
     fb6:	af 96       	adiw	r28, 0x2f	; 47
     fb8:	6c ad       	ldd	r22, Y+60	; 0x3c
     fba:	7d ad       	ldd	r23, Y+61	; 0x3d
     fbc:	8e ad       	ldd	r24, Y+62	; 0x3e
     fbe:	9f ad       	ldd	r25, Y+63	; 0x3f
     fc0:	af 97       	sbiw	r28, 0x2f	; 47
     fc2:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
     fc6:	c9 56       	subi	r28, 0x69	; 105
     fc8:	df 4f       	sbci	r29, 0xFF	; 255
     fca:	68 83       	st	Y, r22
     fcc:	79 83       	std	Y+1, r23	; 0x01
     fce:	8a 83       	std	Y+2, r24	; 0x02
     fd0:	9b 83       	std	Y+3, r25	; 0x03
     fd2:	c7 59       	subi	r28, 0x97	; 151
     fd4:	d0 40       	sbci	r29, 0x00	; 0
     fd6:	c9 56       	subi	r28, 0x69	; 105
     fd8:	df 4f       	sbci	r29, 0xFF	; 255
     fda:	a8 81       	ld	r26, Y
     fdc:	b9 81       	ldd	r27, Y+1	; 0x01
     fde:	c7 59       	subi	r28, 0x97	; 151
     fe0:	d0 40       	sbci	r29, 0x00	; 0
     fe2:	bc 8b       	std	Y+20, r27	; 0x14
     fe4:	ab 8b       	std	Y+19, r26	; 0x13

00000fe6 <.Loc.74>:
		while(__ticks)
     fe6:	10 c0       	rjmp	.+32     	; 0x1008 <.L18>

00000fe8 <.L19>:
     fe8:	80 e9       	ldi	r24, 0x90	; 144
     fea:	91 e0       	ldi	r25, 0x01	; 1
     fec:	9e 8b       	std	Y+22, r25	; 0x16
     fee:	8d 8b       	std	Y+21, r24	; 0x15

00000ff0 <.LBB48>:
     ff0:	8d 89       	ldd	r24, Y+21	; 0x15
     ff2:	9e 89       	ldd	r25, Y+22	; 0x16

00000ff4 <.L1^B1>:
     ff4:	01 97       	sbiw	r24, 0x01	; 1
     ff6:	f1 f7       	brne	.-4      	; 0xff4 <.L1^B1>
     ff8:	9e 8b       	std	Y+22, r25	; 0x16
     ffa:	8d 8b       	std	Y+21, r24	; 0x15

00000ffc <.Loc.76>:
	...

00000ffe <.LBE48>:
			__ticks --;
     ffe:	8b 89       	ldd	r24, Y+19	; 0x13
    1000:	9c 89       	ldd	r25, Y+20	; 0x14
    1002:	01 97       	sbiw	r24, 0x01	; 1
    1004:	9c 8b       	std	Y+20, r25	; 0x14
    1006:	8b 8b       	std	Y+19, r24	; 0x13

00001008 <.L18>:
		while(__ticks)
    1008:	8b 89       	ldd	r24, Y+19	; 0x13
    100a:	9c 89       	ldd	r25, Y+20	; 0x14
    100c:	00 97       	sbiw	r24, 0x00	; 0
    100e:	61 f7       	brne	.-40     	; 0xfe8 <.L19>

00001010 <.Loc.79>:
		return;
    1010:	21 c0       	rjmp	.+66     	; 0x1054 <.L12>

00001012 <.L90>:
		__ticks = (uint16_t)__tmp;
    1012:	6f 85       	ldd	r22, Y+15	; 0x0f
    1014:	78 89       	ldd	r23, Y+16	; 0x10
    1016:	89 89       	ldd	r24, Y+17	; 0x11
    1018:	9a 89       	ldd	r25, Y+18	; 0x12
    101a:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    101e:	c5 56       	subi	r28, 0x65	; 101
    1020:	df 4f       	sbci	r29, 0xFF	; 255
    1022:	68 83       	st	Y, r22
    1024:	79 83       	std	Y+1, r23	; 0x01
    1026:	8a 83       	std	Y+2, r24	; 0x02
    1028:	9b 83       	std	Y+3, r25	; 0x03
    102a:	cb 59       	subi	r28, 0x9B	; 155
    102c:	d0 40       	sbci	r29, 0x00	; 0
    102e:	c5 56       	subi	r28, 0x65	; 101
    1030:	df 4f       	sbci	r29, 0xFF	; 255
    1032:	e8 81       	ld	r30, Y
    1034:	f9 81       	ldd	r31, Y+1	; 0x01
    1036:	cb 59       	subi	r28, 0x9B	; 155
    1038:	d0 40       	sbci	r29, 0x00	; 0
    103a:	fc 8b       	std	Y+20, r31	; 0x14
    103c:	eb 8b       	std	Y+19, r30	; 0x13

0000103e <.L15>:
    103e:	8b 89       	ldd	r24, Y+19	; 0x13
    1040:	9c 89       	ldd	r25, Y+20	; 0x14
    1042:	98 8f       	std	Y+24, r25	; 0x18
    1044:	8f 8b       	std	Y+23, r24	; 0x17

00001046 <.LBB50>:
    1046:	8f 89       	ldd	r24, Y+23	; 0x17
    1048:	98 8d       	ldd	r25, Y+24	; 0x18

0000104a <.L1^B2>:
    104a:	01 97       	sbiw	r24, 0x01	; 1
    104c:	f1 f7       	brne	.-4      	; 0x104a <.L1^B2>
    104e:	98 8f       	std	Y+24, r25	; 0x18
    1050:	8f 8b       	std	Y+23, r24	; 0x17

00001052 <.Loc.82>:
	...

00001054 <.L12>:
            _delay_ms(50);
        }

                // Handle obstacle detected by distance1 or distance2 sensor
                if ((distance1 < 15 || distance2 < 15) && !cool_down_flag && !boom_detected_flag && button_already_pressed) {
    1054:	8d 81       	ldd	r24, Y+5	; 0x05
    1056:	9e 81       	ldd	r25, Y+6	; 0x06
    1058:	8e 30       	cpi	r24, 0x0E	; 14
    105a:	91 05       	cpc	r25, r1
    105c:	39 f0       	breq	.+14     	; 0x106c <.L21>
    105e:	30 f0       	brcs	.+12     	; 0x106c <.L21>

00001060 <.Loc.84>:
    1060:	8f 81       	ldd	r24, Y+7	; 0x07
    1062:	98 85       	ldd	r25, Y+8	; 0x08
    1064:	8e 30       	cpi	r24, 0x0E	; 14
    1066:	91 05       	cpc	r25, r1
    1068:	09 f0       	breq	.+2      	; 0x106c <.L21>

0000106a <L0^A>:
    106a:	f0 f4       	brcc	.+60     	; 0x10a8 <.L22>

0000106c <.L21>:
    106c:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <cool_down_flag>

00001070 <.Loc.86>:
    1070:	88 23       	and	r24, r24
    1072:	d1 f4       	brne	.+52     	; 0x10a8 <.L22>

00001074 <.Loc.87>:
    1074:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

00001078 <.Loc.88>:
    1078:	88 23       	and	r24, r24
    107a:	b1 f4       	brne	.+44     	; 0x10a8 <.L22>

0000107c <.Loc.89>:
    107c:	89 81       	ldd	r24, Y+1	; 0x01
    107e:	9a 81       	ldd	r25, Y+2	; 0x02
    1080:	00 97       	sbiw	r24, 0x00	; 0
    1082:	91 f0       	breq	.+36     	; 0x10a8 <.L22>

00001084 <.Loc.90>:
                    agv_stoppen();
    1084:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <agv_stoppen>

00001088 <.Loc.91>:
                    agv_can_go = 0;
    1088:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <agv_can_go+0x1>
    108c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <agv_can_go>

00001090 <.Loc.92>:
                    boom_detected_flag = 1;
    1090:	81 e0       	ldi	r24, 0x01	; 1
    1092:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <boom_detected_flag>

00001096 <.Loc.93>:
                    TCCR0B |= (1 << CS02) | (1 << CS00); // Start Timer0
    1096:	85 e4       	ldi	r24, 0x45	; 69
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	dc 01       	movw	r26, r24
    109c:	2c 91       	ld	r18, X
    109e:	85 e4       	ldi	r24, 0x45	; 69
    10a0:	90 e0       	ldi	r25, 0x00	; 0

000010a2 <.Loc.94>:
    10a2:	25 60       	ori	r18, 0x05	; 5
    10a4:	fc 01       	movw	r30, r24
    10a6:	20 83       	st	Z, r18

000010a8 <.L22>:
                }

                // Handle obstacle detected by distance3 sensor
                if (distance3 < 15) {
    10a8:	89 85       	ldd	r24, Y+9	; 0x09
    10aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    10ac:	8e 30       	cpi	r24, 0x0E	; 14
    10ae:	91 05       	cpc	r25, r1
    10b0:	09 f0       	breq	.+2      	; 0x10b4 <.Loc.96>

000010b2 <L0^A>:
    10b2:	78 f4       	brcc	.+30     	; 0x10d2 <.L23>

000010b4 <.Loc.96>:
                    agv_stoppen();
    10b4:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <agv_stoppen>

000010b8 <.Loc.97>:
                    agv_can_go = 0;
    10b8:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <agv_can_go+0x1>
    10bc:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <agv_can_go>

000010c0 <.Loc.98>:
                    buzzer_uit();
    10c0:	0e 94 c0 00 	call	0x180	; 0x180 <buzzer_uit>

000010c4 <.Loc.99>:
                    ultrason_obstacle_flag = 1;
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <ultrason_obstacle_flag+0x1>
    10cc:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <ultrason_obstacle_flag>
    10d0:	0a c0       	rjmp	.+20     	; 0x10e6 <.L24>

000010d2 <.L23>:
                } else {
                    ultrason_obstacle_flag = 0;
    10d2:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <ultrason_obstacle_flag+0x1>
    10d6:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <ultrason_obstacle_flag>

000010da <.Loc.101>:
                    agv_can_go = 1;
    10da:	81 e0       	ldi	r24, 0x01	; 1
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <agv_can_go+0x1>
    10e2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_can_go>

000010e6 <.L24>:
                }

                // Warning signal for close obstacles detected by distance3
                if (distance3 < 30 && distance3 > 15) {
    10e6:	89 85       	ldd	r24, Y+9	; 0x09
    10e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    10ea:	8d 31       	cpi	r24, 0x1D	; 29
    10ec:	91 05       	cpc	r25, r1
    10ee:	11 f0       	breq	.+4      	; 0x10f4 <.Loc.103>

000010f0 <L0^A>:
    10f0:	08 f0       	brcs	.+2      	; 0x10f4 <.Loc.103>

000010f2 <L0^A>:
    10f2:	e3 c0       	rjmp	.+454    	; 0x12ba <.L25>

000010f4 <.Loc.103>:
    10f4:	89 85       	ldd	r24, Y+9	; 0x09
    10f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    10f8:	8f 30       	cpi	r24, 0x0F	; 15
    10fa:	91 05       	cpc	r25, r1
    10fc:	09 f0       	breq	.+2      	; 0x1100 <L0^A>

000010fe <L0^A>:
    10fe:	08 f4       	brcc	.+2      	; 0x1102 <.LBB52>

00001100 <L0^A>:
    1100:	dc c0       	rjmp	.+440    	; 0x12ba <.L25>

00001102 <.LBB52>:
                    for (int i = 0; i < 2; i++) {
    1102:	1c 82       	std	Y+4, r1	; 0x04
    1104:	1b 82       	std	Y+3, r1	; 0x03

00001106 <.Loc.105>:
    1106:	d2 c0       	rjmp	.+420    	; 0x12ac <.L26>

00001108 <.L36>:
                        if (TIFR4 & (1 << TOV4)) {
    1108:	89 e3       	ldi	r24, 0x39	; 57
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	dc 01       	movw	r26, r24
    110e:	8c 91       	ld	r24, X

00001110 <.Loc.107>:
    1110:	88 2f       	mov	r24, r24
    1112:	90 e0       	ldi	r25, 0x00	; 0
    1114:	81 70       	andi	r24, 0x01	; 1
    1116:	99 27       	eor	r25, r25

00001118 <.Loc.108>:
    1118:	00 97       	sbiw	r24, 0x00	; 0
    111a:	09 f4       	brne	.+2      	; 0x111e <.Loc.109>

0000111c <L0^A>:
    111c:	c2 c0       	rjmp	.+388    	; 0x12a2 <.L27>

0000111e <.Loc.109>:
                            TCNT4 = TCNT_INIT;
    111e:	84 ea       	ldi	r24, 0xA4	; 164
    1120:	90 e0       	ldi	r25, 0x00	; 0

00001122 <.Loc.110>:
    1122:	20 e4       	ldi	r18, 0x40	; 64
    1124:	3c e0       	ldi	r19, 0x0C	; 12
    1126:	fc 01       	movw	r30, r24
    1128:	31 83       	std	Z+1, r19	; 0x01
    112a:	20 83       	st	Z, r18

0000112c <.Loc.111>:
                            TIFR4 = (1 << TOV4);
    112c:	89 e3       	ldi	r24, 0x39	; 57
    112e:	90 e0       	ldi	r25, 0x00	; 0

00001130 <.Loc.112>:
    1130:	21 e0       	ldi	r18, 0x01	; 1
    1132:	dc 01       	movw	r26, r24
    1134:	2c 93       	st	X, r18

00001136 <.Loc.113>:
                            buzzer_toggle();
    1136:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <buzzer_toggle>
    113a:	80 e0       	ldi	r24, 0x00	; 0
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	a8 ec       	ldi	r26, 0xC8	; 200
    1140:	b2 e4       	ldi	r27, 0x42	; 66
    1142:	89 8f       	std	Y+25, r24	; 0x19
    1144:	9a 8f       	std	Y+26, r25	; 0x1a
    1146:	ab 8f       	std	Y+27, r26	; 0x1b
    1148:	bc 8f       	std	Y+28, r27	; 0x1c

0000114a <.LBB53>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    114a:	20 e0       	ldi	r18, 0x00	; 0
    114c:	30 e0       	ldi	r19, 0x00	; 0
    114e:	4a e7       	ldi	r20, 0x7A	; 122
    1150:	55 e4       	ldi	r21, 0x45	; 69
    1152:	69 8d       	ldd	r22, Y+25	; 0x19
    1154:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1156:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1158:	9c 8d       	ldd	r25, Y+28	; 0x1c
    115a:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    115e:	c1 56       	subi	r28, 0x61	; 97
    1160:	df 4f       	sbci	r29, 0xFF	; 255
    1162:	68 83       	st	Y, r22
    1164:	79 83       	std	Y+1, r23	; 0x01
    1166:	8a 83       	std	Y+2, r24	; 0x02
    1168:	9b 83       	std	Y+3, r25	; 0x03
    116a:	cf 59       	subi	r28, 0x9F	; 159
    116c:	d0 40       	sbci	r29, 0x00	; 0
    116e:	c1 56       	subi	r28, 0x61	; 97
    1170:	df 4f       	sbci	r29, 0xFF	; 255
    1172:	88 81       	ld	r24, Y
    1174:	99 81       	ldd	r25, Y+1	; 0x01
    1176:	aa 81       	ldd	r26, Y+2	; 0x02
    1178:	bb 81       	ldd	r27, Y+3	; 0x03
    117a:	cf 59       	subi	r28, 0x9F	; 159
    117c:	d0 40       	sbci	r29, 0x00	; 0
    117e:	8d 8f       	std	Y+29, r24	; 0x1d
    1180:	9e 8f       	std	Y+30, r25	; 0x1e
    1182:	af 8f       	std	Y+31, r26	; 0x1f
    1184:	b8 a3       	std	Y+32, r27	; 0x20

00001186 <.Loc.115>:
	if (__tmp < 1.0)
    1186:	20 e0       	ldi	r18, 0x00	; 0
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	40 e8       	ldi	r20, 0x80	; 128
    118c:	5f e3       	ldi	r21, 0x3F	; 63
    118e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1190:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1192:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1194:	98 a1       	ldd	r25, Y+32	; 0x20
    1196:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    119a:	88 23       	and	r24, r24
    119c:	2c f4       	brge	.+10     	; 0x11a8 <.L91>

0000119e <.Loc.116>:
		__ticks = 1;
    119e:	81 e0       	ldi	r24, 0x01	; 1
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	9a a3       	std	Y+34, r25	; 0x22
    11a4:	89 a3       	std	Y+33, r24	; 0x21
    11a6:	72 c0       	rjmp	.+228    	; 0x128c <.L30>

000011a8 <.L91>:
	else if (__tmp > 65535)
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	3f ef       	ldi	r19, 0xFF	; 255
    11ac:	4f e7       	ldi	r20, 0x7F	; 127
    11ae:	57 e4       	ldi	r21, 0x47	; 71
    11b0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    11b2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    11b4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    11b6:	98 a1       	ldd	r25, Y+32	; 0x20
    11b8:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    11bc:	88 23       	and	r24, r24
    11be:	09 f0       	breq	.+2      	; 0x11c2 <L0^A>

000011c0 <L0^A>:
    11c0:	0c f4       	brge	.+2      	; 0x11c4 <.Loc.118>

000011c2 <L0^A>:
    11c2:	4e c0       	rjmp	.+156    	; 0x1260 <.L92>

000011c4 <.Loc.118>:
		__ticks = (uint16_t) (__ms * 10.0);
    11c4:	20 e0       	ldi	r18, 0x00	; 0
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	40 e2       	ldi	r20, 0x20	; 32
    11ca:	51 e4       	ldi	r21, 0x41	; 65
    11cc:	69 8d       	ldd	r22, Y+25	; 0x19
    11ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    11d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    11d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    11d4:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    11d8:	cd 55       	subi	r28, 0x5D	; 93
    11da:	df 4f       	sbci	r29, 0xFF	; 255
    11dc:	68 83       	st	Y, r22
    11de:	79 83       	std	Y+1, r23	; 0x01
    11e0:	8a 83       	std	Y+2, r24	; 0x02
    11e2:	9b 83       	std	Y+3, r25	; 0x03
    11e4:	c3 5a       	subi	r28, 0xA3	; 163
    11e6:	d0 40       	sbci	r29, 0x00	; 0
    11e8:	cd 55       	subi	r28, 0x5D	; 93
    11ea:	df 4f       	sbci	r29, 0xFF	; 255
    11ec:	88 81       	ld	r24, Y
    11ee:	99 81       	ldd	r25, Y+1	; 0x01
    11f0:	aa 81       	ldd	r26, Y+2	; 0x02
    11f2:	bb 81       	ldd	r27, Y+3	; 0x03
    11f4:	c3 5a       	subi	r28, 0xA3	; 163
    11f6:	d0 40       	sbci	r29, 0x00	; 0
    11f8:	e3 96       	adiw	r28, 0x33	; 51
    11fa:	8c af       	std	Y+60, r24	; 0x3c
    11fc:	9d af       	std	Y+61, r25	; 0x3d
    11fe:	ae af       	std	Y+62, r26	; 0x3e
    1200:	bf af       	std	Y+63, r27	; 0x3f
    1202:	e3 97       	sbiw	r28, 0x33	; 51

00001204 <.Loc.119>:
    1204:	e3 96       	adiw	r28, 0x33	; 51
    1206:	6c ad       	ldd	r22, Y+60	; 0x3c
    1208:	7d ad       	ldd	r23, Y+61	; 0x3d
    120a:	8e ad       	ldd	r24, Y+62	; 0x3e
    120c:	9f ad       	ldd	r25, Y+63	; 0x3f
    120e:	e3 97       	sbiw	r28, 0x33	; 51
    1210:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    1214:	c9 55       	subi	r28, 0x59	; 89
    1216:	df 4f       	sbci	r29, 0xFF	; 255
    1218:	68 83       	st	Y, r22
    121a:	79 83       	std	Y+1, r23	; 0x01
    121c:	8a 83       	std	Y+2, r24	; 0x02
    121e:	9b 83       	std	Y+3, r25	; 0x03
    1220:	c7 5a       	subi	r28, 0xA7	; 167
    1222:	d0 40       	sbci	r29, 0x00	; 0
    1224:	c9 55       	subi	r28, 0x59	; 89
    1226:	df 4f       	sbci	r29, 0xFF	; 255
    1228:	a8 81       	ld	r26, Y
    122a:	b9 81       	ldd	r27, Y+1	; 0x01
    122c:	c7 5a       	subi	r28, 0xA7	; 167
    122e:	d0 40       	sbci	r29, 0x00	; 0
    1230:	ba a3       	std	Y+34, r27	; 0x22
    1232:	a9 a3       	std	Y+33, r26	; 0x21

00001234 <.Loc.120>:
		while(__ticks)
    1234:	10 c0       	rjmp	.+32     	; 0x1256 <.L33>

00001236 <.L34>:
    1236:	80 e9       	ldi	r24, 0x90	; 144
    1238:	91 e0       	ldi	r25, 0x01	; 1
    123a:	9c a3       	std	Y+36, r25	; 0x24
    123c:	8b a3       	std	Y+35, r24	; 0x23

0000123e <.LBB55>:
    123e:	8b a1       	ldd	r24, Y+35	; 0x23
    1240:	9c a1       	ldd	r25, Y+36	; 0x24

00001242 <.L1^B3>:
    1242:	01 97       	sbiw	r24, 0x01	; 1
    1244:	f1 f7       	brne	.-4      	; 0x1242 <.L1^B3>
    1246:	9c a3       	std	Y+36, r25	; 0x24
    1248:	8b a3       	std	Y+35, r24	; 0x23

0000124a <.Loc.122>:
	...

0000124c <.LBE55>:
			__ticks --;
    124c:	89 a1       	ldd	r24, Y+33	; 0x21
    124e:	9a a1       	ldd	r25, Y+34	; 0x22
    1250:	01 97       	sbiw	r24, 0x01	; 1
    1252:	9a a3       	std	Y+34, r25	; 0x22
    1254:	89 a3       	std	Y+33, r24	; 0x21

00001256 <.L33>:
		while(__ticks)
    1256:	89 a1       	ldd	r24, Y+33	; 0x21
    1258:	9a a1       	ldd	r25, Y+34	; 0x22
    125a:	00 97       	sbiw	r24, 0x00	; 0
    125c:	61 f7       	brne	.-40     	; 0x1236 <.L34>

0000125e <.Loc.125>:
		return;
    125e:	21 c0       	rjmp	.+66     	; 0x12a2 <.L27>

00001260 <.L92>:
		__ticks = (uint16_t)__tmp;
    1260:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1262:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1264:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1266:	98 a1       	ldd	r25, Y+32	; 0x20
    1268:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    126c:	c5 55       	subi	r28, 0x55	; 85
    126e:	df 4f       	sbci	r29, 0xFF	; 255
    1270:	68 83       	st	Y, r22
    1272:	79 83       	std	Y+1, r23	; 0x01
    1274:	8a 83       	std	Y+2, r24	; 0x02
    1276:	9b 83       	std	Y+3, r25	; 0x03
    1278:	cb 5a       	subi	r28, 0xAB	; 171
    127a:	d0 40       	sbci	r29, 0x00	; 0
    127c:	c5 55       	subi	r28, 0x55	; 85
    127e:	df 4f       	sbci	r29, 0xFF	; 255
    1280:	e8 81       	ld	r30, Y
    1282:	f9 81       	ldd	r31, Y+1	; 0x01
    1284:	cb 5a       	subi	r28, 0xAB	; 171
    1286:	d0 40       	sbci	r29, 0x00	; 0
    1288:	fa a3       	std	Y+34, r31	; 0x22
    128a:	e9 a3       	std	Y+33, r30	; 0x21

0000128c <.L30>:
    128c:	89 a1       	ldd	r24, Y+33	; 0x21
    128e:	9a a1       	ldd	r25, Y+34	; 0x22
    1290:	9e a3       	std	Y+38, r25	; 0x26
    1292:	8d a3       	std	Y+37, r24	; 0x25

00001294 <.LBB57>:
    1294:	8d a1       	ldd	r24, Y+37	; 0x25
    1296:	9e a1       	ldd	r25, Y+38	; 0x26

00001298 <.L1^B4>:
    1298:	01 97       	sbiw	r24, 0x01	; 1
    129a:	f1 f7       	brne	.-4      	; 0x1298 <.L1^B4>
    129c:	9e a3       	std	Y+38, r25	; 0x26
    129e:	8d a3       	std	Y+37, r24	; 0x25

000012a0 <.Loc.128>:
	...

000012a2 <.L27>:
                    for (int i = 0; i < 2; i++) {
    12a2:	8b 81       	ldd	r24, Y+3	; 0x03
    12a4:	9c 81       	ldd	r25, Y+4	; 0x04
    12a6:	01 96       	adiw	r24, 0x01	; 1
    12a8:	9c 83       	std	Y+4, r25	; 0x04
    12aa:	8b 83       	std	Y+3, r24	; 0x03

000012ac <.L26>:
    12ac:	8b 81       	ldd	r24, Y+3	; 0x03
    12ae:	9c 81       	ldd	r25, Y+4	; 0x04
    12b0:	81 30       	cpi	r24, 0x01	; 1
    12b2:	91 05       	cpc	r25, r1
    12b4:	09 f0       	breq	.+2      	; 0x12b8 <L0^A>

000012b6 <L0^A>:
    12b6:	0c f4       	brge	.+2      	; 0x12ba <.L25>

000012b8 <L0^A>:
    12b8:	27 cf       	rjmp	.-434    	; 0x1108 <.L36>

000012ba <.L25>:
                        }
                    }
                }

                // Path correction based on IR sensors
                if (ir_left_detected_flag && ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go && button_already_pressed) {
    12ba:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    12be:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

000012c2 <.Loc.132>:
    12c2:	00 97       	sbiw	r24, 0x00	; 0
    12c4:	09 f4       	brne	.+2      	; 0x12c8 <.Loc.133>

000012c6 <L0^A>:
    12c6:	da c0       	rjmp	.+436    	; 0x147c <.L37>

000012c8 <.Loc.133>:
    12c8:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    12cc:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>
    12d0:	00 97       	sbiw	r24, 0x00	; 0
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <.Loc.134>

000012d4 <L0^A>:
    12d4:	d3 c0       	rjmp	.+422    	; 0x147c <.L37>

000012d6 <.Loc.134>:
    12d6:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

000012da <.Loc.135>:
    12da:	88 23       	and	r24, r24
    12dc:	09 f0       	breq	.+2      	; 0x12e0 <.Loc.136>

000012de <L0^A>:
    12de:	ce c0       	rjmp	.+412    	; 0x147c <.L37>

000012e0 <.Loc.136>:
    12e0:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    12e4:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

000012e8 <.Loc.137>:
    12e8:	00 97       	sbiw	r24, 0x00	; 0
    12ea:	09 f0       	breq	.+2      	; 0x12ee <.Loc.138>

000012ec <L0^A>:
    12ec:	c7 c0       	rjmp	.+398    	; 0x147c <.L37>

000012ee <.Loc.138>:
    12ee:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    12f2:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    12f6:	00 97       	sbiw	r24, 0x00	; 0
    12f8:	09 f4       	brne	.+2      	; 0x12fc <.Loc.139>

000012fa <L0^A>:
    12fa:	c0 c0       	rjmp	.+384    	; 0x147c <.L37>

000012fc <.Loc.139>:
    12fc:	89 81       	ldd	r24, Y+1	; 0x01
    12fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1300:	00 97       	sbiw	r24, 0x00	; 0
    1302:	09 f4       	brne	.+2      	; 0x1306 <.Loc.140>

00001304 <L0^A>:
    1304:	bb c0       	rjmp	.+374    	; 0x147c <.L37>

00001306 <.Loc.140>:
                    agv_rechtdoor();
    1306:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <agv_rechtdoor>

0000130a <.Loc.141>:
                    path_exit_flag = 0; // Reset path exit flag if both sensors detect the wall
    130a:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <path_exit_flag+0x1>
    130e:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <path_exit_flag>
    1312:	80 e0       	ldi	r24, 0x00	; 0
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	a8 ec       	ldi	r26, 0xC8	; 200
    1318:	b2 e4       	ldi	r27, 0x42	; 66
    131a:	8f a3       	std	Y+39, r24	; 0x27
    131c:	98 a7       	std	Y+40, r25	; 0x28
    131e:	a9 a7       	std	Y+41, r26	; 0x29
    1320:	ba a7       	std	Y+42, r27	; 0x2a

00001322 <.LBB59>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1322:	20 e0       	ldi	r18, 0x00	; 0
    1324:	30 e0       	ldi	r19, 0x00	; 0
    1326:	4a e7       	ldi	r20, 0x7A	; 122
    1328:	55 e4       	ldi	r21, 0x45	; 69
    132a:	6f a1       	ldd	r22, Y+39	; 0x27
    132c:	78 a5       	ldd	r23, Y+40	; 0x28
    132e:	89 a5       	ldd	r24, Y+41	; 0x29
    1330:	9a a5       	ldd	r25, Y+42	; 0x2a
    1332:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    1336:	c1 55       	subi	r28, 0x51	; 81
    1338:	df 4f       	sbci	r29, 0xFF	; 255
    133a:	68 83       	st	Y, r22
    133c:	79 83       	std	Y+1, r23	; 0x01
    133e:	8a 83       	std	Y+2, r24	; 0x02
    1340:	9b 83       	std	Y+3, r25	; 0x03
    1342:	cf 5a       	subi	r28, 0xAF	; 175
    1344:	d0 40       	sbci	r29, 0x00	; 0
    1346:	c1 55       	subi	r28, 0x51	; 81
    1348:	df 4f       	sbci	r29, 0xFF	; 255
    134a:	88 81       	ld	r24, Y
    134c:	99 81       	ldd	r25, Y+1	; 0x01
    134e:	aa 81       	ldd	r26, Y+2	; 0x02
    1350:	bb 81       	ldd	r27, Y+3	; 0x03
    1352:	cf 5a       	subi	r28, 0xAF	; 175
    1354:	d0 40       	sbci	r29, 0x00	; 0
    1356:	8b a7       	std	Y+43, r24	; 0x2b
    1358:	9c a7       	std	Y+44, r25	; 0x2c
    135a:	ad a7       	std	Y+45, r26	; 0x2d
    135c:	be a7       	std	Y+46, r27	; 0x2e

0000135e <.Loc.143>:
	if (__tmp < 1.0)
    135e:	20 e0       	ldi	r18, 0x00	; 0
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	40 e8       	ldi	r20, 0x80	; 128
    1364:	5f e3       	ldi	r21, 0x3F	; 63
    1366:	6b a5       	ldd	r22, Y+43	; 0x2b
    1368:	7c a5       	ldd	r23, Y+44	; 0x2c
    136a:	8d a5       	ldd	r24, Y+45	; 0x2d
    136c:	9e a5       	ldd	r25, Y+46	; 0x2e
    136e:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    1372:	88 23       	and	r24, r24
    1374:	2c f4       	brge	.+10     	; 0x1380 <.L93>

00001376 <.Loc.144>:
		__ticks = 1;
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	98 ab       	std	Y+48, r25	; 0x30
    137c:	8f a7       	std	Y+47, r24	; 0x2f
    137e:	72 c0       	rjmp	.+228    	; 0x1464 <.L40>

00001380 <.L93>:
	else if (__tmp > 65535)
    1380:	20 e0       	ldi	r18, 0x00	; 0
    1382:	3f ef       	ldi	r19, 0xFF	; 255
    1384:	4f e7       	ldi	r20, 0x7F	; 127
    1386:	57 e4       	ldi	r21, 0x47	; 71
    1388:	6b a5       	ldd	r22, Y+43	; 0x2b
    138a:	7c a5       	ldd	r23, Y+44	; 0x2c
    138c:	8d a5       	ldd	r24, Y+45	; 0x2d
    138e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1390:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    1394:	88 23       	and	r24, r24
    1396:	09 f0       	breq	.+2      	; 0x139a <L0^A>

00001398 <L0^A>:
    1398:	0c f4       	brge	.+2      	; 0x139c <.Loc.146>

0000139a <L0^A>:
    139a:	4e c0       	rjmp	.+156    	; 0x1438 <.L94>

0000139c <.Loc.146>:
		__ticks = (uint16_t) (__ms * 10.0);
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	40 e2       	ldi	r20, 0x20	; 32
    13a2:	51 e4       	ldi	r21, 0x41	; 65
    13a4:	6f a1       	ldd	r22, Y+39	; 0x27
    13a6:	78 a5       	ldd	r23, Y+40	; 0x28
    13a8:	89 a5       	ldd	r24, Y+41	; 0x29
    13aa:	9a a5       	ldd	r25, Y+42	; 0x2a
    13ac:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    13b0:	cd 54       	subi	r28, 0x4D	; 77
    13b2:	df 4f       	sbci	r29, 0xFF	; 255
    13b4:	68 83       	st	Y, r22
    13b6:	79 83       	std	Y+1, r23	; 0x01
    13b8:	8a 83       	std	Y+2, r24	; 0x02
    13ba:	9b 83       	std	Y+3, r25	; 0x03
    13bc:	c3 5b       	subi	r28, 0xB3	; 179
    13be:	d0 40       	sbci	r29, 0x00	; 0
    13c0:	cd 54       	subi	r28, 0x4D	; 77
    13c2:	df 4f       	sbci	r29, 0xFF	; 255
    13c4:	88 81       	ld	r24, Y
    13c6:	99 81       	ldd	r25, Y+1	; 0x01
    13c8:	aa 81       	ldd	r26, Y+2	; 0x02
    13ca:	bb 81       	ldd	r27, Y+3	; 0x03
    13cc:	c3 5b       	subi	r28, 0xB3	; 179
    13ce:	d0 40       	sbci	r29, 0x00	; 0
    13d0:	e7 96       	adiw	r28, 0x37	; 55
    13d2:	8c af       	std	Y+60, r24	; 0x3c
    13d4:	9d af       	std	Y+61, r25	; 0x3d
    13d6:	ae af       	std	Y+62, r26	; 0x3e
    13d8:	bf af       	std	Y+63, r27	; 0x3f
    13da:	e7 97       	sbiw	r28, 0x37	; 55

000013dc <.Loc.147>:
    13dc:	e7 96       	adiw	r28, 0x37	; 55
    13de:	6c ad       	ldd	r22, Y+60	; 0x3c
    13e0:	7d ad       	ldd	r23, Y+61	; 0x3d
    13e2:	8e ad       	ldd	r24, Y+62	; 0x3e
    13e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    13e6:	e7 97       	sbiw	r28, 0x37	; 55
    13e8:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    13ec:	c9 54       	subi	r28, 0x49	; 73
    13ee:	df 4f       	sbci	r29, 0xFF	; 255
    13f0:	68 83       	st	Y, r22
    13f2:	79 83       	std	Y+1, r23	; 0x01
    13f4:	8a 83       	std	Y+2, r24	; 0x02
    13f6:	9b 83       	std	Y+3, r25	; 0x03
    13f8:	c7 5b       	subi	r28, 0xB7	; 183
    13fa:	d0 40       	sbci	r29, 0x00	; 0
    13fc:	c9 54       	subi	r28, 0x49	; 73
    13fe:	df 4f       	sbci	r29, 0xFF	; 255
    1400:	a8 81       	ld	r26, Y
    1402:	b9 81       	ldd	r27, Y+1	; 0x01
    1404:	c7 5b       	subi	r28, 0xB7	; 183
    1406:	d0 40       	sbci	r29, 0x00	; 0
    1408:	b8 ab       	std	Y+48, r27	; 0x30
    140a:	af a7       	std	Y+47, r26	; 0x2f

0000140c <.Loc.148>:
		while(__ticks)
    140c:	10 c0       	rjmp	.+32     	; 0x142e <.L43>

0000140e <.L44>:
    140e:	80 e9       	ldi	r24, 0x90	; 144
    1410:	91 e0       	ldi	r25, 0x01	; 1
    1412:	9a ab       	std	Y+50, r25	; 0x32
    1414:	89 ab       	std	Y+49, r24	; 0x31

00001416 <.LBB61>:
    1416:	89 a9       	ldd	r24, Y+49	; 0x31
    1418:	9a a9       	ldd	r25, Y+50	; 0x32

0000141a <.L1^B5>:
    141a:	01 97       	sbiw	r24, 0x01	; 1
    141c:	f1 f7       	brne	.-4      	; 0x141a <.L1^B5>
    141e:	9a ab       	std	Y+50, r25	; 0x32
    1420:	89 ab       	std	Y+49, r24	; 0x31

00001422 <.Loc.150>:
	...

00001424 <.LBE61>:
			__ticks --;
    1424:	8f a5       	ldd	r24, Y+47	; 0x2f
    1426:	98 a9       	ldd	r25, Y+48	; 0x30
    1428:	01 97       	sbiw	r24, 0x01	; 1
    142a:	98 ab       	std	Y+48, r25	; 0x30
    142c:	8f a7       	std	Y+47, r24	; 0x2f

0000142e <.L43>:
		while(__ticks)
    142e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1430:	98 a9       	ldd	r25, Y+48	; 0x30
    1432:	00 97       	sbiw	r24, 0x00	; 0
    1434:	61 f7       	brne	.-40     	; 0x140e <.L44>

00001436 <.Loc.153>:
		return;
    1436:	21 c0       	rjmp	.+66     	; 0x147a <.L45>

00001438 <.L94>:
		__ticks = (uint16_t)__tmp;
    1438:	6b a5       	ldd	r22, Y+43	; 0x2b
    143a:	7c a5       	ldd	r23, Y+44	; 0x2c
    143c:	8d a5       	ldd	r24, Y+45	; 0x2d
    143e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1440:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    1444:	c5 54       	subi	r28, 0x45	; 69
    1446:	df 4f       	sbci	r29, 0xFF	; 255
    1448:	68 83       	st	Y, r22
    144a:	79 83       	std	Y+1, r23	; 0x01
    144c:	8a 83       	std	Y+2, r24	; 0x02
    144e:	9b 83       	std	Y+3, r25	; 0x03
    1450:	cb 5b       	subi	r28, 0xBB	; 187
    1452:	d0 40       	sbci	r29, 0x00	; 0
    1454:	c5 54       	subi	r28, 0x45	; 69
    1456:	df 4f       	sbci	r29, 0xFF	; 255
    1458:	e8 81       	ld	r30, Y
    145a:	f9 81       	ldd	r31, Y+1	; 0x01
    145c:	cb 5b       	subi	r28, 0xBB	; 187
    145e:	d0 40       	sbci	r29, 0x00	; 0
    1460:	f8 ab       	std	Y+48, r31	; 0x30
    1462:	ef a7       	std	Y+47, r30	; 0x2f

00001464 <.L40>:
    1464:	8f a5       	ldd	r24, Y+47	; 0x2f
    1466:	98 a9       	ldd	r25, Y+48	; 0x30
    1468:	9c ab       	std	Y+52, r25	; 0x34
    146a:	8b ab       	std	Y+51, r24	; 0x33

0000146c <.LBB63>:
    146c:	8b a9       	ldd	r24, Y+51	; 0x33
    146e:	9c a9       	ldd	r25, Y+52	; 0x34

00001470 <.L1^B6>:
    1470:	01 97       	sbiw	r24, 0x01	; 1
    1472:	f1 f7       	brne	.-4      	; 0x1470 <.L1^B6>
    1474:	9c ab       	std	Y+52, r25	; 0x34
    1476:	8b ab       	std	Y+51, r24	; 0x33

00001478 <.Loc.156>:
	...

0000147a <.L45>:
                    _delay_ms(100);
    147a:	7f c3       	rjmp	.+1790   	; 0x1b7a <.L46>

0000147c <.L37>:
                } else if (!ir_left_detected_flag && ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go && button_already_pressed) {
    147c:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    1480:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

00001484 <.Loc.159>:
    1484:	00 97       	sbiw	r24, 0x00	; 0
    1486:	09 f0       	breq	.+2      	; 0x148a <.Loc.160>

00001488 <L0^A>:
    1488:	ee c0       	rjmp	.+476    	; 0x1666 <.L47>

0000148a <.Loc.160>:
    148a:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    148e:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>
    1492:	00 97       	sbiw	r24, 0x00	; 0
    1494:	09 f4       	brne	.+2      	; 0x1498 <.Loc.161>

00001496 <L0^A>:
    1496:	e7 c0       	rjmp	.+462    	; 0x1666 <.L47>

00001498 <.Loc.161>:
    1498:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

0000149c <.Loc.162>:
    149c:	88 23       	and	r24, r24
    149e:	09 f0       	breq	.+2      	; 0x14a2 <.Loc.163>

000014a0 <L0^A>:
    14a0:	e2 c0       	rjmp	.+452    	; 0x1666 <.L47>

000014a2 <.Loc.163>:
    14a2:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    14a6:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

000014aa <.Loc.164>:
    14aa:	00 97       	sbiw	r24, 0x00	; 0
    14ac:	09 f0       	breq	.+2      	; 0x14b0 <.Loc.165>

000014ae <L0^A>:
    14ae:	db c0       	rjmp	.+438    	; 0x1666 <.L47>

000014b0 <.Loc.165>:
    14b0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    14b4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    14b8:	00 97       	sbiw	r24, 0x00	; 0
    14ba:	09 f4       	brne	.+2      	; 0x14be <.Loc.166>

000014bc <L0^A>:
    14bc:	d4 c0       	rjmp	.+424    	; 0x1666 <.L47>

000014be <.Loc.166>:
    14be:	89 81       	ldd	r24, Y+1	; 0x01
    14c0:	9a 81       	ldd	r25, Y+2	; 0x02
    14c2:	00 97       	sbiw	r24, 0x00	; 0
    14c4:	09 f4       	brne	.+2      	; 0x14c8 <.Loc.167>

000014c6 <L0^A>:
    14c6:	cf c0       	rjmp	.+414    	; 0x1666 <.L47>

000014c8 <.Loc.167>:
                    agv_links_correctie(); // Correct to the left if right sensor sees the wall but left does not
    14c8:	0e 94 50 04 	call	0x8a0	; 0x8a0 <agv_links_correctie>
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	a8 ec       	ldi	r26, 0xC8	; 200
    14d2:	b2 e4       	ldi	r27, 0x42	; 66
    14d4:	8d ab       	std	Y+53, r24	; 0x35
    14d6:	9e ab       	std	Y+54, r25	; 0x36
    14d8:	af ab       	std	Y+55, r26	; 0x37
    14da:	b8 af       	std	Y+56, r27	; 0x38

000014dc <.LBB65>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    14dc:	20 e0       	ldi	r18, 0x00	; 0
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	4a e7       	ldi	r20, 0x7A	; 122
    14e2:	55 e4       	ldi	r21, 0x45	; 69
    14e4:	6d a9       	ldd	r22, Y+53	; 0x35
    14e6:	7e a9       	ldd	r23, Y+54	; 0x36
    14e8:	8f a9       	ldd	r24, Y+55	; 0x37
    14ea:	98 ad       	ldd	r25, Y+56	; 0x38
    14ec:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    14f0:	c1 54       	subi	r28, 0x41	; 65
    14f2:	df 4f       	sbci	r29, 0xFF	; 255
    14f4:	68 83       	st	Y, r22
    14f6:	79 83       	std	Y+1, r23	; 0x01
    14f8:	8a 83       	std	Y+2, r24	; 0x02
    14fa:	9b 83       	std	Y+3, r25	; 0x03
    14fc:	cf 5b       	subi	r28, 0xBF	; 191
    14fe:	d0 40       	sbci	r29, 0x00	; 0
    1500:	c1 54       	subi	r28, 0x41	; 65
    1502:	df 4f       	sbci	r29, 0xFF	; 255
    1504:	88 81       	ld	r24, Y
    1506:	99 81       	ldd	r25, Y+1	; 0x01
    1508:	aa 81       	ldd	r26, Y+2	; 0x02
    150a:	bb 81       	ldd	r27, Y+3	; 0x03
    150c:	cf 5b       	subi	r28, 0xBF	; 191
    150e:	d0 40       	sbci	r29, 0x00	; 0
    1510:	89 af       	std	Y+57, r24	; 0x39
    1512:	9a af       	std	Y+58, r25	; 0x3a
    1514:	ab af       	std	Y+59, r26	; 0x3b
    1516:	bc af       	std	Y+60, r27	; 0x3c

00001518 <.Loc.169>:
	if (__tmp < 1.0)
    1518:	20 e0       	ldi	r18, 0x00	; 0
    151a:	30 e0       	ldi	r19, 0x00	; 0
    151c:	40 e8       	ldi	r20, 0x80	; 128
    151e:	5f e3       	ldi	r21, 0x3F	; 63
    1520:	69 ad       	ldd	r22, Y+57	; 0x39
    1522:	7a ad       	ldd	r23, Y+58	; 0x3a
    1524:	8b ad       	ldd	r24, Y+59	; 0x3b
    1526:	9c ad       	ldd	r25, Y+60	; 0x3c
    1528:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    152c:	88 23       	and	r24, r24
    152e:	2c f4       	brge	.+10     	; 0x153a <.L95>

00001530 <.Loc.170>:
		__ticks = 1;
    1530:	81 e0       	ldi	r24, 0x01	; 1
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	9e af       	std	Y+62, r25	; 0x3e
    1536:	8d af       	std	Y+61, r24	; 0x3d
    1538:	7d c0       	rjmp	.+250    	; 0x1634 <.L50>

0000153a <.L95>:
	else if (__tmp > 65535)
    153a:	20 e0       	ldi	r18, 0x00	; 0
    153c:	3f ef       	ldi	r19, 0xFF	; 255
    153e:	4f e7       	ldi	r20, 0x7F	; 127
    1540:	57 e4       	ldi	r21, 0x47	; 71
    1542:	69 ad       	ldd	r22, Y+57	; 0x39
    1544:	7a ad       	ldd	r23, Y+58	; 0x3a
    1546:	8b ad       	ldd	r24, Y+59	; 0x3b
    1548:	9c ad       	ldd	r25, Y+60	; 0x3c
    154a:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    154e:	88 23       	and	r24, r24
    1550:	09 f0       	breq	.+2      	; 0x1554 <L0^A>

00001552 <L0^A>:
    1552:	0c f4       	brge	.+2      	; 0x1556 <.Loc.172>

00001554 <L0^A>:
    1554:	59 c0       	rjmp	.+178    	; 0x1608 <.L96>

00001556 <.Loc.172>:
		__ticks = (uint16_t) (__ms * 10.0);
    1556:	20 e0       	ldi	r18, 0x00	; 0
    1558:	30 e0       	ldi	r19, 0x00	; 0
    155a:	40 e2       	ldi	r20, 0x20	; 32
    155c:	51 e4       	ldi	r21, 0x41	; 65
    155e:	6d a9       	ldd	r22, Y+53	; 0x35
    1560:	7e a9       	ldd	r23, Y+54	; 0x36
    1562:	8f a9       	ldd	r24, Y+55	; 0x37
    1564:	98 ad       	ldd	r25, Y+56	; 0x38
    1566:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    156a:	cd 53       	subi	r28, 0x3D	; 61
    156c:	df 4f       	sbci	r29, 0xFF	; 255
    156e:	68 83       	st	Y, r22
    1570:	79 83       	std	Y+1, r23	; 0x01
    1572:	8a 83       	std	Y+2, r24	; 0x02
    1574:	9b 83       	std	Y+3, r25	; 0x03
    1576:	c3 5c       	subi	r28, 0xC3	; 195
    1578:	d0 40       	sbci	r29, 0x00	; 0
    157a:	cd 53       	subi	r28, 0x3D	; 61
    157c:	df 4f       	sbci	r29, 0xFF	; 255
    157e:	88 81       	ld	r24, Y
    1580:	99 81       	ldd	r25, Y+1	; 0x01
    1582:	aa 81       	ldd	r26, Y+2	; 0x02
    1584:	bb 81       	ldd	r27, Y+3	; 0x03
    1586:	c3 5c       	subi	r28, 0xC3	; 195
    1588:	d0 40       	sbci	r29, 0x00	; 0
    158a:	eb 96       	adiw	r28, 0x3b	; 59
    158c:	8c af       	std	Y+60, r24	; 0x3c
    158e:	9d af       	std	Y+61, r25	; 0x3d
    1590:	ae af       	std	Y+62, r26	; 0x3e
    1592:	bf af       	std	Y+63, r27	; 0x3f
    1594:	eb 97       	sbiw	r28, 0x3b	; 59

00001596 <.Loc.173>:
    1596:	eb 96       	adiw	r28, 0x3b	; 59
    1598:	6c ad       	ldd	r22, Y+60	; 0x3c
    159a:	7d ad       	ldd	r23, Y+61	; 0x3d
    159c:	8e ad       	ldd	r24, Y+62	; 0x3e
    159e:	9f ad       	ldd	r25, Y+63	; 0x3f
    15a0:	eb 97       	sbiw	r28, 0x3b	; 59
    15a2:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    15a6:	c9 53       	subi	r28, 0x39	; 57
    15a8:	df 4f       	sbci	r29, 0xFF	; 255
    15aa:	68 83       	st	Y, r22
    15ac:	79 83       	std	Y+1, r23	; 0x01
    15ae:	8a 83       	std	Y+2, r24	; 0x02
    15b0:	9b 83       	std	Y+3, r25	; 0x03
    15b2:	c7 5c       	subi	r28, 0xC7	; 199
    15b4:	d0 40       	sbci	r29, 0x00	; 0
    15b6:	c9 53       	subi	r28, 0x39	; 57
    15b8:	df 4f       	sbci	r29, 0xFF	; 255
    15ba:	a8 81       	ld	r26, Y
    15bc:	b9 81       	ldd	r27, Y+1	; 0x01
    15be:	c7 5c       	subi	r28, 0xC7	; 199
    15c0:	d0 40       	sbci	r29, 0x00	; 0
    15c2:	be af       	std	Y+62, r27	; 0x3e
    15c4:	ad af       	std	Y+61, r26	; 0x3d

000015c6 <.Loc.174>:
		while(__ticks)
    15c6:	1b c0       	rjmp	.+54     	; 0x15fe <.L53>

000015c8 <.L54>:
    15c8:	20 e9       	ldi	r18, 0x90	; 144
    15ca:	31 e0       	ldi	r19, 0x01	; 1
    15cc:	ce 01       	movw	r24, r28
    15ce:	cf 96       	adiw	r24, 0x3f	; 63
    15d0:	fc 01       	movw	r30, r24
    15d2:	31 83       	std	Z+1, r19	; 0x01
    15d4:	20 83       	st	Z, r18

000015d6 <.LBB67>:
    15d6:	ce 01       	movw	r24, r28
    15d8:	cf 96       	adiw	r24, 0x3f	; 63
    15da:	dc 01       	movw	r26, r24
    15dc:	8d 91       	ld	r24, X+
    15de:	9c 91       	ld	r25, X
    15e0:	11 97       	sbiw	r26, 0x01	; 1

000015e2 <.L1^B7>:
    15e2:	01 97       	sbiw	r24, 0x01	; 1
    15e4:	f1 f7       	brne	.-4      	; 0x15e2 <.L1^B7>
    15e6:	9e 01       	movw	r18, r28
    15e8:	21 5c       	subi	r18, 0xC1	; 193
    15ea:	3f 4f       	sbci	r19, 0xFF	; 255
    15ec:	f9 01       	movw	r30, r18
    15ee:	91 83       	std	Z+1, r25	; 0x01
    15f0:	80 83       	st	Z, r24

000015f2 <.Loc.176>:
	...

000015f4 <.LBE67>:
			__ticks --;
    15f4:	8d ad       	ldd	r24, Y+61	; 0x3d
    15f6:	9e ad       	ldd	r25, Y+62	; 0x3e
    15f8:	01 97       	sbiw	r24, 0x01	; 1
    15fa:	9e af       	std	Y+62, r25	; 0x3e
    15fc:	8d af       	std	Y+61, r24	; 0x3d

000015fe <.L53>:
		while(__ticks)
    15fe:	8d ad       	ldd	r24, Y+61	; 0x3d
    1600:	9e ad       	ldd	r25, Y+62	; 0x3e
    1602:	00 97       	sbiw	r24, 0x00	; 0
    1604:	09 f7       	brne	.-62     	; 0x15c8 <.L54>

00001606 <.Loc.179>:
		return;
    1606:	2e c0       	rjmp	.+92     	; 0x1664 <.L55>

00001608 <.L96>:
		__ticks = (uint16_t)__tmp;
    1608:	69 ad       	ldd	r22, Y+57	; 0x39
    160a:	7a ad       	ldd	r23, Y+58	; 0x3a
    160c:	8b ad       	ldd	r24, Y+59	; 0x3b
    160e:	9c ad       	ldd	r25, Y+60	; 0x3c
    1610:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    1614:	c5 53       	subi	r28, 0x35	; 53
    1616:	df 4f       	sbci	r29, 0xFF	; 255
    1618:	68 83       	st	Y, r22
    161a:	79 83       	std	Y+1, r23	; 0x01
    161c:	8a 83       	std	Y+2, r24	; 0x02
    161e:	9b 83       	std	Y+3, r25	; 0x03
    1620:	cb 5c       	subi	r28, 0xCB	; 203
    1622:	d0 40       	sbci	r29, 0x00	; 0
    1624:	c5 53       	subi	r28, 0x35	; 53
    1626:	df 4f       	sbci	r29, 0xFF	; 255
    1628:	88 81       	ld	r24, Y
    162a:	99 81       	ldd	r25, Y+1	; 0x01
    162c:	cb 5c       	subi	r28, 0xCB	; 203
    162e:	d0 40       	sbci	r29, 0x00	; 0
    1630:	9e af       	std	Y+62, r25	; 0x3e
    1632:	8d af       	std	Y+61, r24	; 0x3d

00001634 <.L50>:
    1634:	ce 01       	movw	r24, r28
    1636:	8f 5b       	subi	r24, 0xBF	; 191
    1638:	9f 4f       	sbci	r25, 0xFF	; 255
    163a:	2d ad       	ldd	r18, Y+61	; 0x3d
    163c:	3e ad       	ldd	r19, Y+62	; 0x3e
    163e:	dc 01       	movw	r26, r24
    1640:	2d 93       	st	X+, r18
    1642:	3c 93       	st	X, r19

00001644 <.LBB69>:
    1644:	ce 01       	movw	r24, r28
    1646:	8f 5b       	subi	r24, 0xBF	; 191
    1648:	9f 4f       	sbci	r25, 0xFF	; 255
    164a:	fc 01       	movw	r30, r24
    164c:	80 81       	ld	r24, Z
    164e:	91 81       	ldd	r25, Z+1	; 0x01

00001650 <.L1^B8>:
    1650:	01 97       	sbiw	r24, 0x01	; 1
    1652:	f1 f7       	brne	.-4      	; 0x1650 <.L1^B8>
    1654:	9e 01       	movw	r18, r28
    1656:	2f 5b       	subi	r18, 0xBF	; 191
    1658:	3f 4f       	sbci	r19, 0xFF	; 255
    165a:	d9 01       	movw	r26, r18
    165c:	11 96       	adiw	r26, 0x01	; 1
    165e:	9c 93       	st	X, r25
    1660:	8e 93       	st	-X, r24

00001662 <.Loc.182>:
	...

00001664 <.L55>:
                    _delay_ms(100);
    1664:	8a c2       	rjmp	.+1300   	; 0x1b7a <.L46>

00001666 <.L47>:
                } else if (ir_left_detected_flag && !ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go && button_already_pressed) {
    1666:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    166a:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

0000166e <.Loc.185>:
    166e:	00 97       	sbiw	r24, 0x00	; 0
    1670:	09 f4       	brne	.+2      	; 0x1674 <.Loc.186>

00001672 <L0^A>:
    1672:	2a c1       	rjmp	.+596    	; 0x18c8 <.L56>

00001674 <.Loc.186>:
    1674:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    1678:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>

0000167c <.Loc.187>:
    167c:	00 97       	sbiw	r24, 0x00	; 0
    167e:	09 f0       	breq	.+2      	; 0x1682 <.Loc.188>

00001680 <L0^A>:
    1680:	23 c1       	rjmp	.+582    	; 0x18c8 <.L56>

00001682 <.Loc.188>:
    1682:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

00001686 <.Loc.189>:
    1686:	88 23       	and	r24, r24
    1688:	09 f0       	breq	.+2      	; 0x168c <.Loc.190>

0000168a <L0^A>:
    168a:	1e c1       	rjmp	.+572    	; 0x18c8 <.L56>

0000168c <.Loc.190>:
    168c:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    1690:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

00001694 <.Loc.191>:
    1694:	00 97       	sbiw	r24, 0x00	; 0
    1696:	09 f0       	breq	.+2      	; 0x169a <.Loc.192>

00001698 <L0^A>:
    1698:	17 c1       	rjmp	.+558    	; 0x18c8 <.L56>

0000169a <.Loc.192>:
    169a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    169e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    16a2:	00 97       	sbiw	r24, 0x00	; 0
    16a4:	09 f4       	brne	.+2      	; 0x16a8 <.Loc.193>

000016a6 <L0^A>:
    16a6:	10 c1       	rjmp	.+544    	; 0x18c8 <.L56>

000016a8 <.Loc.193>:
    16a8:	89 81       	ldd	r24, Y+1	; 0x01
    16aa:	9a 81       	ldd	r25, Y+2	; 0x02
    16ac:	00 97       	sbiw	r24, 0x00	; 0
    16ae:	09 f4       	brne	.+2      	; 0x16b2 <.Loc.194>

000016b0 <L0^A>:
    16b0:	0b c1       	rjmp	.+534    	; 0x18c8 <.L56>

000016b2 <.Loc.194>:
                    agv_rechts_correctie(); // Correct to the right if left sensor sees the wall but right does not
    16b2:	0e 94 a5 03 	call	0x74a	; 0x74a <agv_rechts_correctie>
    16b6:	9e 01       	movw	r18, r28
    16b8:	2d 5b       	subi	r18, 0xBD	; 189
    16ba:	3f 4f       	sbci	r19, 0xFF	; 255
    16bc:	80 e0       	ldi	r24, 0x00	; 0
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	a8 ec       	ldi	r26, 0xC8	; 200
    16c2:	b2 e4       	ldi	r27, 0x42	; 66
    16c4:	f9 01       	movw	r30, r18
    16c6:	80 83       	st	Z, r24
    16c8:	91 83       	std	Z+1, r25	; 0x01
    16ca:	a2 83       	std	Z+2, r26	; 0x02
    16cc:	b3 83       	std	Z+3, r27	; 0x03

000016ce <.LBB71>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    16ce:	8e 01       	movw	r16, r28
    16d0:	09 5b       	subi	r16, 0xB9	; 185
    16d2:	1f 4f       	sbci	r17, 0xFF	; 255
    16d4:	ce 01       	movw	r24, r28
    16d6:	8d 5b       	subi	r24, 0xBD	; 189
    16d8:	9f 4f       	sbci	r25, 0xFF	; 255
    16da:	20 e0       	ldi	r18, 0x00	; 0
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	4a e7       	ldi	r20, 0x7A	; 122
    16e0:	55 e4       	ldi	r21, 0x45	; 69
    16e2:	dc 01       	movw	r26, r24
    16e4:	6d 91       	ld	r22, X+
    16e6:	7d 91       	ld	r23, X+
    16e8:	8d 91       	ld	r24, X+
    16ea:	9c 91       	ld	r25, X
    16ec:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    16f0:	c1 53       	subi	r28, 0x31	; 49
    16f2:	df 4f       	sbci	r29, 0xFF	; 255
    16f4:	68 83       	st	Y, r22
    16f6:	79 83       	std	Y+1, r23	; 0x01
    16f8:	8a 83       	std	Y+2, r24	; 0x02
    16fa:	9b 83       	std	Y+3, r25	; 0x03
    16fc:	cf 5c       	subi	r28, 0xCF	; 207
    16fe:	d0 40       	sbci	r29, 0x00	; 0
    1700:	c1 53       	subi	r28, 0x31	; 49
    1702:	df 4f       	sbci	r29, 0xFF	; 255
    1704:	88 81       	ld	r24, Y
    1706:	99 81       	ldd	r25, Y+1	; 0x01
    1708:	aa 81       	ldd	r26, Y+2	; 0x02
    170a:	bb 81       	ldd	r27, Y+3	; 0x03
    170c:	cf 5c       	subi	r28, 0xCF	; 207
    170e:	d0 40       	sbci	r29, 0x00	; 0
    1710:	f8 01       	movw	r30, r16
    1712:	80 83       	st	Z, r24
    1714:	91 83       	std	Z+1, r25	; 0x01
    1716:	a2 83       	std	Z+2, r26	; 0x02
    1718:	b3 83       	std	Z+3, r27	; 0x03

0000171a <.Loc.196>:
	if (__tmp < 1.0)
    171a:	ce 01       	movw	r24, r28
    171c:	89 5b       	subi	r24, 0xB9	; 185
    171e:	9f 4f       	sbci	r25, 0xFF	; 255
    1720:	20 e0       	ldi	r18, 0x00	; 0
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	40 e8       	ldi	r20, 0x80	; 128
    1726:	5f e3       	ldi	r21, 0x3F	; 63
    1728:	dc 01       	movw	r26, r24
    172a:	6d 91       	ld	r22, X+
    172c:	7d 91       	ld	r23, X+
    172e:	8d 91       	ld	r24, X+
    1730:	9c 91       	ld	r25, X
    1732:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    1736:	88 23       	and	r24, r24
    1738:	4c f4       	brge	.+18     	; 0x174c <.L97>

0000173a <.Loc.197>:
		__ticks = 1;
    173a:	ce 01       	movw	r24, r28
    173c:	85 5b       	subi	r24, 0xB5	; 181
    173e:	9f 4f       	sbci	r25, 0xFF	; 255
    1740:	21 e0       	ldi	r18, 0x01	; 1
    1742:	30 e0       	ldi	r19, 0x00	; 0
    1744:	fc 01       	movw	r30, r24
    1746:	31 83       	std	Z+1, r19	; 0x01
    1748:	20 83       	st	Z, r18
    174a:	a1 c0       	rjmp	.+322    	; 0x188e <.L59>

0000174c <.L97>:
	else if (__tmp > 65535)
    174c:	ce 01       	movw	r24, r28
    174e:	89 5b       	subi	r24, 0xB9	; 185
    1750:	9f 4f       	sbci	r25, 0xFF	; 255
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	3f ef       	ldi	r19, 0xFF	; 255
    1756:	4f e7       	ldi	r20, 0x7F	; 127
    1758:	57 e4       	ldi	r21, 0x47	; 71
    175a:	dc 01       	movw	r26, r24
    175c:	6d 91       	ld	r22, X+
    175e:	7d 91       	ld	r23, X+
    1760:	8d 91       	ld	r24, X+
    1762:	9c 91       	ld	r25, X
    1764:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    1768:	88 23       	and	r24, r24
    176a:	09 f0       	breq	.+2      	; 0x176e <L0^A>

0000176c <L0^A>:
    176c:	0c f4       	brge	.+2      	; 0x1770 <.Loc.199>

0000176e <L0^A>:
    176e:	71 c0       	rjmp	.+226    	; 0x1852 <.L98>

00001770 <.Loc.199>:
		__ticks = (uint16_t) (__ms * 10.0);
    1770:	ce 01       	movw	r24, r28
    1772:	8d 5b       	subi	r24, 0xBD	; 189
    1774:	9f 4f       	sbci	r25, 0xFF	; 255
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	40 e2       	ldi	r20, 0x20	; 32
    177c:	51 e4       	ldi	r21, 0x41	; 65
    177e:	fc 01       	movw	r30, r24
    1780:	60 81       	ld	r22, Z
    1782:	71 81       	ldd	r23, Z+1	; 0x01
    1784:	82 81       	ldd	r24, Z+2	; 0x02
    1786:	93 81       	ldd	r25, Z+3	; 0x03
    1788:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    178c:	cd 52       	subi	r28, 0x2D	; 45
    178e:	df 4f       	sbci	r29, 0xFF	; 255
    1790:	68 83       	st	Y, r22
    1792:	79 83       	std	Y+1, r23	; 0x01
    1794:	8a 83       	std	Y+2, r24	; 0x02
    1796:	9b 83       	std	Y+3, r25	; 0x03
    1798:	c3 5d       	subi	r28, 0xD3	; 211
    179a:	d0 40       	sbci	r29, 0x00	; 0
    179c:	cd 52       	subi	r28, 0x2D	; 45
    179e:	df 4f       	sbci	r29, 0xFF	; 255
    17a0:	88 81       	ld	r24, Y
    17a2:	99 81       	ldd	r25, Y+1	; 0x01
    17a4:	aa 81       	ldd	r26, Y+2	; 0x02
    17a6:	bb 81       	ldd	r27, Y+3	; 0x03
    17a8:	c3 5d       	subi	r28, 0xD3	; 211
    17aa:	d0 40       	sbci	r29, 0x00	; 0
    17ac:	ef 96       	adiw	r28, 0x3f	; 63
    17ae:	8c af       	std	Y+60, r24	; 0x3c
    17b0:	9d af       	std	Y+61, r25	; 0x3d
    17b2:	ae af       	std	Y+62, r26	; 0x3e
    17b4:	bf af       	std	Y+63, r27	; 0x3f
    17b6:	ef 97       	sbiw	r28, 0x3f	; 63

000017b8 <.Loc.200>:
    17b8:	8e 01       	movw	r16, r28
    17ba:	05 5b       	subi	r16, 0xB5	; 181
    17bc:	1f 4f       	sbci	r17, 0xFF	; 255
    17be:	ef 96       	adiw	r28, 0x3f	; 63
    17c0:	6c ad       	ldd	r22, Y+60	; 0x3c
    17c2:	7d ad       	ldd	r23, Y+61	; 0x3d
    17c4:	8e ad       	ldd	r24, Y+62	; 0x3e
    17c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    17c8:	ef 97       	sbiw	r28, 0x3f	; 63
    17ca:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    17ce:	c9 52       	subi	r28, 0x29	; 41
    17d0:	df 4f       	sbci	r29, 0xFF	; 255
    17d2:	68 83       	st	Y, r22
    17d4:	79 83       	std	Y+1, r23	; 0x01
    17d6:	8a 83       	std	Y+2, r24	; 0x02
    17d8:	9b 83       	std	Y+3, r25	; 0x03
    17da:	c7 5d       	subi	r28, 0xD7	; 215
    17dc:	d0 40       	sbci	r29, 0x00	; 0
    17de:	c9 52       	subi	r28, 0x29	; 41
    17e0:	df 4f       	sbci	r29, 0xFF	; 255
    17e2:	e8 81       	ld	r30, Y
    17e4:	f9 81       	ldd	r31, Y+1	; 0x01
    17e6:	c7 5d       	subi	r28, 0xD7	; 215
    17e8:	d0 40       	sbci	r29, 0x00	; 0
    17ea:	d8 01       	movw	r26, r16
    17ec:	11 96       	adiw	r26, 0x01	; 1
    17ee:	fc 93       	st	X, r31
    17f0:	ee 93       	st	-X, r30

000017f2 <.Loc.201>:
		while(__ticks)
    17f2:	26 c0       	rjmp	.+76     	; 0x1840 <.L62>

000017f4 <.L63>:
    17f4:	ce 01       	movw	r24, r28
    17f6:	83 5b       	subi	r24, 0xB3	; 179
    17f8:	9f 4f       	sbci	r25, 0xFF	; 255
    17fa:	20 e9       	ldi	r18, 0x90	; 144
    17fc:	31 e0       	ldi	r19, 0x01	; 1
    17fe:	dc 01       	movw	r26, r24
    1800:	2d 93       	st	X+, r18
    1802:	3c 93       	st	X, r19

00001804 <.LBB73>:
    1804:	ce 01       	movw	r24, r28
    1806:	83 5b       	subi	r24, 0xB3	; 179
    1808:	9f 4f       	sbci	r25, 0xFF	; 255
    180a:	fc 01       	movw	r30, r24
    180c:	80 81       	ld	r24, Z
    180e:	91 81       	ldd	r25, Z+1	; 0x01

00001810 <.L1^B9>:
    1810:	01 97       	sbiw	r24, 0x01	; 1
    1812:	f1 f7       	brne	.-4      	; 0x1810 <.L1^B9>
    1814:	9e 01       	movw	r18, r28
    1816:	23 5b       	subi	r18, 0xB3	; 179
    1818:	3f 4f       	sbci	r19, 0xFF	; 255
    181a:	d9 01       	movw	r26, r18
    181c:	8d 93       	st	X+, r24
    181e:	9c 93       	st	X, r25

00001820 <.Loc.203>:
	...

00001822 <.LBE73>:
			__ticks --;
    1822:	ce 01       	movw	r24, r28
    1824:	85 5b       	subi	r24, 0xB5	; 181
    1826:	9f 4f       	sbci	r25, 0xFF	; 255
    1828:	9e 01       	movw	r18, r28
    182a:	25 5b       	subi	r18, 0xB5	; 181
    182c:	3f 4f       	sbci	r19, 0xFF	; 255
    182e:	f9 01       	movw	r30, r18
    1830:	20 81       	ld	r18, Z
    1832:	31 81       	ldd	r19, Z+1	; 0x01
    1834:	21 50       	subi	r18, 0x01	; 1
    1836:	31 09       	sbc	r19, r1
    1838:	dc 01       	movw	r26, r24
    183a:	11 96       	adiw	r26, 0x01	; 1
    183c:	3c 93       	st	X, r19
    183e:	2e 93       	st	-X, r18

00001840 <.L62>:
		while(__ticks)
    1840:	ce 01       	movw	r24, r28
    1842:	85 5b       	subi	r24, 0xB5	; 181
    1844:	9f 4f       	sbci	r25, 0xFF	; 255
    1846:	fc 01       	movw	r30, r24
    1848:	80 81       	ld	r24, Z
    184a:	91 81       	ldd	r25, Z+1	; 0x01
    184c:	00 97       	sbiw	r24, 0x00	; 0
    184e:	91 f6       	brne	.-92     	; 0x17f4 <.L63>

00001850 <.Loc.206>:
		return;
    1850:	3a c0       	rjmp	.+116    	; 0x18c6 <.L64>

00001852 <.L98>:
		__ticks = (uint16_t)__tmp;
    1852:	8e 01       	movw	r16, r28
    1854:	05 5b       	subi	r16, 0xB5	; 181
    1856:	1f 4f       	sbci	r17, 0xFF	; 255
    1858:	ce 01       	movw	r24, r28
    185a:	89 5b       	subi	r24, 0xB9	; 185
    185c:	9f 4f       	sbci	r25, 0xFF	; 255
    185e:	dc 01       	movw	r26, r24
    1860:	6d 91       	ld	r22, X+
    1862:	7d 91       	ld	r23, X+
    1864:	8d 91       	ld	r24, X+
    1866:	9c 91       	ld	r25, X
    1868:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    186c:	c5 52       	subi	r28, 0x25	; 37
    186e:	df 4f       	sbci	r29, 0xFF	; 255
    1870:	68 83       	st	Y, r22
    1872:	79 83       	std	Y+1, r23	; 0x01
    1874:	8a 83       	std	Y+2, r24	; 0x02
    1876:	9b 83       	std	Y+3, r25	; 0x03
    1878:	cb 5d       	subi	r28, 0xDB	; 219
    187a:	d0 40       	sbci	r29, 0x00	; 0
    187c:	c5 52       	subi	r28, 0x25	; 37
    187e:	df 4f       	sbci	r29, 0xFF	; 255
    1880:	88 81       	ld	r24, Y
    1882:	99 81       	ldd	r25, Y+1	; 0x01
    1884:	cb 5d       	subi	r28, 0xDB	; 219
    1886:	d0 40       	sbci	r29, 0x00	; 0
    1888:	f8 01       	movw	r30, r16
    188a:	91 83       	std	Z+1, r25	; 0x01
    188c:	80 83       	st	Z, r24

0000188e <.L59>:
    188e:	ce 01       	movw	r24, r28
    1890:	81 5b       	subi	r24, 0xB1	; 177
    1892:	9f 4f       	sbci	r25, 0xFF	; 255
    1894:	9e 01       	movw	r18, r28
    1896:	25 5b       	subi	r18, 0xB5	; 181
    1898:	3f 4f       	sbci	r19, 0xFF	; 255
    189a:	d9 01       	movw	r26, r18
    189c:	2d 91       	ld	r18, X+
    189e:	3c 91       	ld	r19, X
    18a0:	fc 01       	movw	r30, r24
    18a2:	31 83       	std	Z+1, r19	; 0x01
    18a4:	20 83       	st	Z, r18

000018a6 <.LBB75>:
    18a6:	ce 01       	movw	r24, r28
    18a8:	81 5b       	subi	r24, 0xB1	; 177
    18aa:	9f 4f       	sbci	r25, 0xFF	; 255
    18ac:	dc 01       	movw	r26, r24
    18ae:	8d 91       	ld	r24, X+
    18b0:	9c 91       	ld	r25, X
    18b2:	11 97       	sbiw	r26, 0x01	; 1

000018b4 <.L1^B10>:
    18b4:	01 97       	sbiw	r24, 0x01	; 1
    18b6:	f1 f7       	brne	.-4      	; 0x18b4 <.L1^B10>
    18b8:	9e 01       	movw	r18, r28
    18ba:	21 5b       	subi	r18, 0xB1	; 177
    18bc:	3f 4f       	sbci	r19, 0xFF	; 255
    18be:	f9 01       	movw	r30, r18
    18c0:	91 83       	std	Z+1, r25	; 0x01
    18c2:	80 83       	st	Z, r24

000018c4 <.Loc.209>:
	...

000018c6 <.L64>:
                    _delay_ms(100);
    18c6:	59 c1       	rjmp	.+690    	; 0x1b7a <.L46>

000018c8 <.L56>:
                } else if (!ir_left_detected_flag && !ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go && button_already_pressed) {
    18c8:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    18cc:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

000018d0 <.Loc.212>:
    18d0:	00 97       	sbiw	r24, 0x00	; 0
    18d2:	09 f0       	breq	.+2      	; 0x18d6 <.Loc.213>

000018d4 <L0^A>:
    18d4:	91 ca       	rjmp	.-2782   	; 0xdf8 <.L75>

000018d6 <.Loc.213>:
    18d6:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    18da:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>

000018de <.Loc.214>:
    18de:	00 97       	sbiw	r24, 0x00	; 0
    18e0:	09 f0       	breq	.+2      	; 0x18e4 <.Loc.215>

000018e2 <L0^A>:
    18e2:	8a ca       	rjmp	.-2796   	; 0xdf8 <.L75>

000018e4 <.Loc.215>:
    18e4:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

000018e8 <.Loc.216>:
    18e8:	88 23       	and	r24, r24
    18ea:	09 f0       	breq	.+2      	; 0x18ee <.Loc.217>

000018ec <L0^A>:
    18ec:	85 ca       	rjmp	.-2806   	; 0xdf8 <.L75>

000018ee <.Loc.217>:
    18ee:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    18f2:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

000018f6 <.Loc.218>:
    18f6:	00 97       	sbiw	r24, 0x00	; 0
    18f8:	09 f0       	breq	.+2      	; 0x18fc <.Loc.219>

000018fa <L0^A>:
    18fa:	7e ca       	rjmp	.-2820   	; 0xdf8 <.L75>

000018fc <.Loc.219>:
    18fc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    1900:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    1904:	00 97       	sbiw	r24, 0x00	; 0
    1906:	09 f4       	brne	.+2      	; 0x190a <.Loc.220>

00001908 <L0^A>:
    1908:	77 ca       	rjmp	.-2834   	; 0xdf8 <.L75>

0000190a <.Loc.220>:
    190a:	89 81       	ldd	r24, Y+1	; 0x01
    190c:	9a 81       	ldd	r25, Y+2	; 0x02
    190e:	00 97       	sbiw	r24, 0x00	; 0
    1910:	09 f4       	brne	.+2      	; 0x1914 <.Loc.221>

00001912 <L0^A>:
    1912:	72 ca       	rjmp	.-2844   	; 0xdf8 <.L75>

00001914 <.Loc.221>:
                    if (!path_exit_flag) {
    1914:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <path_exit_flag>
    1918:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <path_exit_flag+0x1>

0000191c <.Loc.222>:
    191c:	00 97       	sbiw	r24, 0x00	; 0
    191e:	09 f0       	breq	.+2      	; 0x1922 <L0^A+0x2>

00001920 <L0^A>:
    1920:	6b ca       	rjmp	.-2858   	; 0xdf8 <.L75>
    1922:	9e 01       	movw	r18, r28
    1924:	2f 5a       	subi	r18, 0xAF	; 175
    1926:	3f 4f       	sbci	r19, 0xFF	; 255
    1928:	80 e0       	ldi	r24, 0x00	; 0
    192a:	90 e4       	ldi	r25, 0x40	; 64
    192c:	ac e9       	ldi	r26, 0x9C	; 156
    192e:	b4 e4       	ldi	r27, 0x44	; 68
    1930:	f9 01       	movw	r30, r18
    1932:	80 83       	st	Z, r24
    1934:	91 83       	std	Z+1, r25	; 0x01
    1936:	a2 83       	std	Z+2, r26	; 0x02
    1938:	b3 83       	std	Z+3, r27	; 0x03

0000193a <.LBB77>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    193a:	8e 01       	movw	r16, r28
    193c:	0b 5a       	subi	r16, 0xAB	; 171
    193e:	1f 4f       	sbci	r17, 0xFF	; 255
    1940:	ce 01       	movw	r24, r28
    1942:	8f 5a       	subi	r24, 0xAF	; 175
    1944:	9f 4f       	sbci	r25, 0xFF	; 255
    1946:	20 e0       	ldi	r18, 0x00	; 0
    1948:	30 e0       	ldi	r19, 0x00	; 0
    194a:	4a e7       	ldi	r20, 0x7A	; 122
    194c:	55 e4       	ldi	r21, 0x45	; 69
    194e:	dc 01       	movw	r26, r24
    1950:	6d 91       	ld	r22, X+
    1952:	7d 91       	ld	r23, X+
    1954:	8d 91       	ld	r24, X+
    1956:	9c 91       	ld	r25, X
    1958:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    195c:	c1 52       	subi	r28, 0x21	; 33
    195e:	df 4f       	sbci	r29, 0xFF	; 255
    1960:	68 83       	st	Y, r22
    1962:	79 83       	std	Y+1, r23	; 0x01
    1964:	8a 83       	std	Y+2, r24	; 0x02
    1966:	9b 83       	std	Y+3, r25	; 0x03
    1968:	cf 5d       	subi	r28, 0xDF	; 223
    196a:	d0 40       	sbci	r29, 0x00	; 0
    196c:	c1 52       	subi	r28, 0x21	; 33
    196e:	df 4f       	sbci	r29, 0xFF	; 255
    1970:	88 81       	ld	r24, Y
    1972:	99 81       	ldd	r25, Y+1	; 0x01
    1974:	aa 81       	ldd	r26, Y+2	; 0x02
    1976:	bb 81       	ldd	r27, Y+3	; 0x03
    1978:	cf 5d       	subi	r28, 0xDF	; 223
    197a:	d0 40       	sbci	r29, 0x00	; 0
    197c:	f8 01       	movw	r30, r16
    197e:	80 83       	st	Z, r24
    1980:	91 83       	std	Z+1, r25	; 0x01
    1982:	a2 83       	std	Z+2, r26	; 0x02
    1984:	b3 83       	std	Z+3, r27	; 0x03

00001986 <.Loc.224>:
	if (__tmp < 1.0)
    1986:	ce 01       	movw	r24, r28
    1988:	8b 5a       	subi	r24, 0xAB	; 171
    198a:	9f 4f       	sbci	r25, 0xFF	; 255
    198c:	20 e0       	ldi	r18, 0x00	; 0
    198e:	30 e0       	ldi	r19, 0x00	; 0
    1990:	40 e8       	ldi	r20, 0x80	; 128
    1992:	5f e3       	ldi	r21, 0x3F	; 63
    1994:	dc 01       	movw	r26, r24
    1996:	6d 91       	ld	r22, X+
    1998:	7d 91       	ld	r23, X+
    199a:	8d 91       	ld	r24, X+
    199c:	9c 91       	ld	r25, X
    199e:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    19a2:	88 23       	and	r24, r24
    19a4:	4c f4       	brge	.+18     	; 0x19b8 <.L99>

000019a6 <.Loc.225>:
		__ticks = 1;
    19a6:	ce 01       	movw	r24, r28
    19a8:	87 5a       	subi	r24, 0xA7	; 167
    19aa:	9f 4f       	sbci	r25, 0xFF	; 255
    19ac:	21 e0       	ldi	r18, 0x01	; 1
    19ae:	30 e0       	ldi	r19, 0x00	; 0
    19b0:	fc 01       	movw	r30, r24
    19b2:	31 83       	std	Z+1, r19	; 0x01
    19b4:	20 83       	st	Z, r18
    19b6:	a5 c0       	rjmp	.+330    	; 0x1b02 <.L67>

000019b8 <.L99>:
	else if (__tmp > 65535)
    19b8:	ce 01       	movw	r24, r28
    19ba:	8b 5a       	subi	r24, 0xAB	; 171
    19bc:	9f 4f       	sbci	r25, 0xFF	; 255
    19be:	20 e0       	ldi	r18, 0x00	; 0
    19c0:	3f ef       	ldi	r19, 0xFF	; 255
    19c2:	4f e7       	ldi	r20, 0x7F	; 127
    19c4:	57 e4       	ldi	r21, 0x47	; 71
    19c6:	dc 01       	movw	r26, r24
    19c8:	6d 91       	ld	r22, X+
    19ca:	7d 91       	ld	r23, X+
    19cc:	8d 91       	ld	r24, X+
    19ce:	9c 91       	ld	r25, X
    19d0:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    19d4:	88 23       	and	r24, r24
    19d6:	09 f0       	breq	.+2      	; 0x19da <L0^A>

000019d8 <L0^A>:
    19d8:	0c f4       	brge	.+2      	; 0x19dc <.Loc.227>

000019da <L0^A>:
    19da:	75 c0       	rjmp	.+234    	; 0x1ac6 <.L100>

000019dc <.Loc.227>:
		__ticks = (uint16_t) (__ms * 10.0);
    19dc:	ce 01       	movw	r24, r28
    19de:	8f 5a       	subi	r24, 0xAF	; 175
    19e0:	9f 4f       	sbci	r25, 0xFF	; 255
    19e2:	20 e0       	ldi	r18, 0x00	; 0
    19e4:	30 e0       	ldi	r19, 0x00	; 0
    19e6:	40 e2       	ldi	r20, 0x20	; 32
    19e8:	51 e4       	ldi	r21, 0x41	; 65
    19ea:	fc 01       	movw	r30, r24
    19ec:	60 81       	ld	r22, Z
    19ee:	71 81       	ldd	r23, Z+1	; 0x01
    19f0:	82 81       	ldd	r24, Z+2	; 0x02
    19f2:	93 81       	ldd	r25, Z+3	; 0x03
    19f4:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    19f8:	cd 51       	subi	r28, 0x1D	; 29
    19fa:	df 4f       	sbci	r29, 0xFF	; 255
    19fc:	68 83       	st	Y, r22
    19fe:	79 83       	std	Y+1, r23	; 0x01
    1a00:	8a 83       	std	Y+2, r24	; 0x02
    1a02:	9b 83       	std	Y+3, r25	; 0x03
    1a04:	c3 5e       	subi	r28, 0xE3	; 227
    1a06:	d0 40       	sbci	r29, 0x00	; 0
    1a08:	cd 51       	subi	r28, 0x1D	; 29
    1a0a:	df 4f       	sbci	r29, 0xFF	; 255
    1a0c:	88 81       	ld	r24, Y
    1a0e:	99 81       	ldd	r25, Y+1	; 0x01
    1a10:	aa 81       	ldd	r26, Y+2	; 0x02
    1a12:	bb 81       	ldd	r27, Y+3	; 0x03
    1a14:	c3 5e       	subi	r28, 0xE3	; 227
    1a16:	d0 40       	sbci	r29, 0x00	; 0
    1a18:	c1 58       	subi	r28, 0x81	; 129
    1a1a:	df 4f       	sbci	r29, 0xFF	; 255
    1a1c:	88 83       	st	Y, r24
    1a1e:	99 83       	std	Y+1, r25	; 0x01
    1a20:	aa 83       	std	Y+2, r26	; 0x02
    1a22:	bb 83       	std	Y+3, r27	; 0x03
    1a24:	cf 57       	subi	r28, 0x7F	; 127
    1a26:	d0 40       	sbci	r29, 0x00	; 0

00001a28 <.Loc.228>:
    1a28:	8e 01       	movw	r16, r28
    1a2a:	07 5a       	subi	r16, 0xA7	; 167
    1a2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a2e:	c1 58       	subi	r28, 0x81	; 129
    1a30:	df 4f       	sbci	r29, 0xFF	; 255
    1a32:	68 81       	ld	r22, Y
    1a34:	79 81       	ldd	r23, Y+1	; 0x01
    1a36:	8a 81       	ldd	r24, Y+2	; 0x02
    1a38:	9b 81       	ldd	r25, Y+3	; 0x03
    1a3a:	cf 57       	subi	r28, 0x7F	; 127
    1a3c:	d0 40       	sbci	r29, 0x00	; 0
    1a3e:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    1a42:	c9 51       	subi	r28, 0x19	; 25
    1a44:	df 4f       	sbci	r29, 0xFF	; 255
    1a46:	68 83       	st	Y, r22
    1a48:	79 83       	std	Y+1, r23	; 0x01
    1a4a:	8a 83       	std	Y+2, r24	; 0x02
    1a4c:	9b 83       	std	Y+3, r25	; 0x03
    1a4e:	c7 5e       	subi	r28, 0xE7	; 231
    1a50:	d0 40       	sbci	r29, 0x00	; 0
    1a52:	c9 51       	subi	r28, 0x19	; 25
    1a54:	df 4f       	sbci	r29, 0xFF	; 255
    1a56:	e8 81       	ld	r30, Y
    1a58:	f9 81       	ldd	r31, Y+1	; 0x01
    1a5a:	c7 5e       	subi	r28, 0xE7	; 231
    1a5c:	d0 40       	sbci	r29, 0x00	; 0
    1a5e:	d8 01       	movw	r26, r16
    1a60:	11 96       	adiw	r26, 0x01	; 1
    1a62:	fc 93       	st	X, r31
    1a64:	ee 93       	st	-X, r30

00001a66 <.Loc.229>:
		while(__ticks)
    1a66:	26 c0       	rjmp	.+76     	; 0x1ab4 <.L70>

00001a68 <.L71>:
    1a68:	ce 01       	movw	r24, r28
    1a6a:	85 5a       	subi	r24, 0xA5	; 165
    1a6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6e:	20 e9       	ldi	r18, 0x90	; 144
    1a70:	31 e0       	ldi	r19, 0x01	; 1
    1a72:	dc 01       	movw	r26, r24
    1a74:	2d 93       	st	X+, r18
    1a76:	3c 93       	st	X, r19

00001a78 <.LBB79>:
    1a78:	ce 01       	movw	r24, r28
    1a7a:	85 5a       	subi	r24, 0xA5	; 165
    1a7c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a7e:	fc 01       	movw	r30, r24
    1a80:	80 81       	ld	r24, Z
    1a82:	91 81       	ldd	r25, Z+1	; 0x01

00001a84 <.L1^B11>:
    1a84:	01 97       	sbiw	r24, 0x01	; 1
    1a86:	f1 f7       	brne	.-4      	; 0x1a84 <.L1^B11>
    1a88:	9e 01       	movw	r18, r28
    1a8a:	25 5a       	subi	r18, 0xA5	; 165
    1a8c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a8e:	d9 01       	movw	r26, r18
    1a90:	8d 93       	st	X+, r24
    1a92:	9c 93       	st	X, r25

00001a94 <.Loc.231>:
	...

00001a96 <.LBE79>:
			__ticks --;
    1a96:	ce 01       	movw	r24, r28
    1a98:	87 5a       	subi	r24, 0xA7	; 167
    1a9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a9c:	9e 01       	movw	r18, r28
    1a9e:	27 5a       	subi	r18, 0xA7	; 167
    1aa0:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa2:	f9 01       	movw	r30, r18
    1aa4:	20 81       	ld	r18, Z
    1aa6:	31 81       	ldd	r19, Z+1	; 0x01
    1aa8:	21 50       	subi	r18, 0x01	; 1
    1aaa:	31 09       	sbc	r19, r1
    1aac:	dc 01       	movw	r26, r24
    1aae:	11 96       	adiw	r26, 0x01	; 1
    1ab0:	3c 93       	st	X, r19
    1ab2:	2e 93       	st	-X, r18

00001ab4 <.L70>:
		while(__ticks)
    1ab4:	ce 01       	movw	r24, r28
    1ab6:	87 5a       	subi	r24, 0xA7	; 167
    1ab8:	9f 4f       	sbci	r25, 0xFF	; 255
    1aba:	fc 01       	movw	r30, r24
    1abc:	80 81       	ld	r24, Z
    1abe:	91 81       	ldd	r25, Z+1	; 0x01
    1ac0:	00 97       	sbiw	r24, 0x00	; 0
    1ac2:	91 f6       	brne	.-92     	; 0x1a68 <.L71>

00001ac4 <.Loc.234>:
		return;
    1ac4:	39 c0       	rjmp	.+114    	; 0x1b38 <.L72>

00001ac6 <.L100>:
		__ticks = (uint16_t)__tmp;
    1ac6:	8e 01       	movw	r16, r28
    1ac8:	07 5a       	subi	r16, 0xA7	; 167
    1aca:	1f 4f       	sbci	r17, 0xFF	; 255
    1acc:	ce 01       	movw	r24, r28
    1ace:	8b 5a       	subi	r24, 0xAB	; 171
    1ad0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad2:	dc 01       	movw	r26, r24
    1ad4:	6d 91       	ld	r22, X+
    1ad6:	7d 91       	ld	r23, X+
    1ad8:	8d 91       	ld	r24, X+
    1ada:	9c 91       	ld	r25, X
    1adc:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    1ae0:	c5 51       	subi	r28, 0x15	; 21
    1ae2:	df 4f       	sbci	r29, 0xFF	; 255
    1ae4:	68 83       	st	Y, r22
    1ae6:	79 83       	std	Y+1, r23	; 0x01
    1ae8:	8a 83       	std	Y+2, r24	; 0x02
    1aea:	9b 83       	std	Y+3, r25	; 0x03
    1aec:	cb 5e       	subi	r28, 0xEB	; 235
    1aee:	d0 40       	sbci	r29, 0x00	; 0
    1af0:	c5 51       	subi	r28, 0x15	; 21
    1af2:	df 4f       	sbci	r29, 0xFF	; 255
    1af4:	88 81       	ld	r24, Y
    1af6:	99 81       	ldd	r25, Y+1	; 0x01
    1af8:	cb 5e       	subi	r28, 0xEB	; 235
    1afa:	d0 40       	sbci	r29, 0x00	; 0
    1afc:	f8 01       	movw	r30, r16
    1afe:	91 83       	std	Z+1, r25	; 0x01
    1b00:	80 83       	st	Z, r24

00001b02 <.L67>:
    1b02:	ce 01       	movw	r24, r28
    1b04:	83 5a       	subi	r24, 0xA3	; 163
    1b06:	9f 4f       	sbci	r25, 0xFF	; 255
    1b08:	9e 01       	movw	r18, r28
    1b0a:	27 5a       	subi	r18, 0xA7	; 167
    1b0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b0e:	d9 01       	movw	r26, r18
    1b10:	2d 91       	ld	r18, X+
    1b12:	3c 91       	ld	r19, X
    1b14:	fc 01       	movw	r30, r24
    1b16:	31 83       	std	Z+1, r19	; 0x01
    1b18:	20 83       	st	Z, r18

00001b1a <.LBB81>:
    1b1a:	ce 01       	movw	r24, r28
    1b1c:	83 5a       	subi	r24, 0xA3	; 163
    1b1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b20:	dc 01       	movw	r26, r24
    1b22:	8d 91       	ld	r24, X+
    1b24:	9c 91       	ld	r25, X

00001b26 <.L1^B12>:
    1b26:	01 97       	sbiw	r24, 0x01	; 1
    1b28:	f1 f7       	brne	.-4      	; 0x1b26 <.L1^B12>
    1b2a:	9e 01       	movw	r18, r28
    1b2c:	23 5a       	subi	r18, 0xA3	; 163
    1b2e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b30:	f9 01       	movw	r30, r18
    1b32:	91 83       	std	Z+1, r25	; 0x01
    1b34:	80 83       	st	Z, r24

00001b36 <.Loc.237>:
	...

00001b38 <.L72>:
                        _delay_ms(1250);
                        agv_links_bocht();
    1b38:	0e 94 4f 02 	call	0x49e	; 0x49e <agv_links_bocht>

00001b3c <.Loc.239>:
                        path_exit_flag = 1; // Set flag to indicate AGV has exited the path
    1b3c:	81 e0       	ldi	r24, 0x01	; 1
    1b3e:	90 e0       	ldi	r25, 0x00	; 0
    1b40:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <path_exit_flag+0x1>
    1b44:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <path_exit_flag>

00001b48 <.Loc.240>:

                        if((ir_left_detected_flag || ir_right_detected_flag) && path_exit_flag)
    1b48:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    1b4c:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

00001b50 <.Loc.241>:
    1b50:	00 97       	sbiw	r24, 0x00	; 0
    1b52:	39 f4       	brne	.+14     	; 0x1b62 <.L73>

00001b54 <.Loc.242>:
    1b54:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    1b58:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>
    1b5c:	00 97       	sbiw	r24, 0x00	; 0
    1b5e:	09 f4       	brne	.+2      	; 0x1b62 <.L73>

00001b60 <L0^A>:
    1b60:	4b c9       	rjmp	.-3434   	; 0xdf8 <.L75>

00001b62 <.L73>:
    1b62:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <path_exit_flag>
    1b66:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <path_exit_flag+0x1>
    1b6a:	00 97       	sbiw	r24, 0x00	; 0
    1b6c:	09 f4       	brne	.+2      	; 0x1b70 <.Loc.244>

00001b6e <L0^A>:
    1b6e:	44 c9       	rjmp	.-3448   	; 0xdf8 <.L75>

00001b70 <.Loc.244>:
                        {
                            path_exit_flag = 0;
    1b70:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <path_exit_flag+0x1>
    1b74:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <path_exit_flag>

00001b78 <.Loc.245>:
                            break;
    1b78:	01 c0       	rjmp	.+2      	; 0x1b7c <.L101>

00001b7a <.L46>:
    while (1) {
    1b7a:	3e c9       	rjmp	.-3460   	; 0xdf8 <.L75>

00001b7c <.L101>:
                }

        }


    return 0;
    1b7c:	80 e0       	ldi	r24, 0x00	; 0
    1b7e:	90 e0       	ldi	r25, 0x00	; 0

00001b80 <.Loc.248>:
}
    1b80:	c2 51       	subi	r28, 0x12	; 18
    1b82:	df 4f       	sbci	r29, 0xFF	; 255
    1b84:	0f b6       	in	r0, 0x3f	; 63
    1b86:	f8 94       	cli
    1b88:	de bf       	out	0x3e, r29	; 62
    1b8a:	0f be       	out	0x3f, r0	; 63
    1b8c:	cd bf       	out	0x3d, r28	; 61
    1b8e:	df 91       	pop	r29
    1b90:	cf 91       	pop	r28
    1b92:	1f 91       	pop	r17
    1b94:	0f 91       	pop	r16
    1b96:	08 95       	ret

00001b98 <PIDController_Init>:
#include <avr/io.h>
#include "PID.h"

void PIDController_Init(PIDController* pid, float Kp, float Ki, float Kd, float output_min, float output_max) {
    1b98:	8f 92       	push	r8
    1b9a:	9f 92       	push	r9
    1b9c:	af 92       	push	r10
    1b9e:	bf 92       	push	r11
    1ba0:	cf 92       	push	r12
    1ba2:	df 92       	push	r13
    1ba4:	ef 92       	push	r14
    1ba6:	ff 92       	push	r15
    1ba8:	0f 93       	push	r16
    1baa:	1f 93       	push	r17
    1bac:	cf 93       	push	r28
    1bae:	df 93       	push	r29
    1bb0:	cd b7       	in	r28, 0x3d	; 61
    1bb2:	de b7       	in	r29, 0x3e	; 62
    1bb4:	62 97       	sbiw	r28, 0x12	; 18
    1bb6:	0f b6       	in	r0, 0x3f	; 63
    1bb8:	f8 94       	cli
    1bba:	de bf       	out	0x3e, r29	; 62
    1bbc:	0f be       	out	0x3f, r0	; 63
    1bbe:	cd bf       	out	0x3d, r28	; 61
    1bc0:	9a 83       	std	Y+2, r25	; 0x02
    1bc2:	89 83       	std	Y+1, r24	; 0x01
    1bc4:	4b 83       	std	Y+3, r20	; 0x03
    1bc6:	5c 83       	std	Y+4, r21	; 0x04
    1bc8:	6d 83       	std	Y+5, r22	; 0x05
    1bca:	7e 83       	std	Y+6, r23	; 0x06
    1bcc:	0f 83       	std	Y+7, r16	; 0x07
    1bce:	18 87       	std	Y+8, r17	; 0x08
    1bd0:	29 87       	std	Y+9, r18	; 0x09
    1bd2:	3a 87       	std	Y+10, r19	; 0x0a
    1bd4:	cb 86       	std	Y+11, r12	; 0x0b
    1bd6:	dc 86       	std	Y+12, r13	; 0x0c
    1bd8:	ed 86       	std	Y+13, r14	; 0x0d
    1bda:	fe 86       	std	Y+14, r15	; 0x0e
    1bdc:	8f 86       	std	Y+15, r8	; 0x0f
    1bde:	98 8a       	std	Y+16, r9	; 0x10
    1be0:	a9 8a       	std	Y+17, r10	; 0x11
    1be2:	ba 8a       	std	Y+18, r11	; 0x12

00001be4 <.Loc.1>:
    pid->Kp = Kp;
    1be4:	29 81       	ldd	r18, Y+1	; 0x01
    1be6:	3a 81       	ldd	r19, Y+2	; 0x02
    1be8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bea:	9c 81       	ldd	r25, Y+4	; 0x04
    1bec:	ad 81       	ldd	r26, Y+5	; 0x05
    1bee:	be 81       	ldd	r27, Y+6	; 0x06
    1bf0:	f9 01       	movw	r30, r18
    1bf2:	80 83       	st	Z, r24
    1bf4:	91 83       	std	Z+1, r25	; 0x01
    1bf6:	a2 83       	std	Z+2, r26	; 0x02
    1bf8:	b3 83       	std	Z+3, r27	; 0x03

00001bfa <.Loc.2>:
    pid->Ki = Ki;
    1bfa:	29 81       	ldd	r18, Y+1	; 0x01
    1bfc:	3a 81       	ldd	r19, Y+2	; 0x02
    1bfe:	8f 81       	ldd	r24, Y+7	; 0x07
    1c00:	98 85       	ldd	r25, Y+8	; 0x08
    1c02:	a9 85       	ldd	r26, Y+9	; 0x09
    1c04:	ba 85       	ldd	r27, Y+10	; 0x0a
    1c06:	f9 01       	movw	r30, r18
    1c08:	84 83       	std	Z+4, r24	; 0x04
    1c0a:	95 83       	std	Z+5, r25	; 0x05
    1c0c:	a6 83       	std	Z+6, r26	; 0x06
    1c0e:	b7 83       	std	Z+7, r27	; 0x07

00001c10 <.Loc.3>:
    pid->Kd = Kd;
    1c10:	29 81       	ldd	r18, Y+1	; 0x01
    1c12:	3a 81       	ldd	r19, Y+2	; 0x02
    1c14:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c16:	9c 85       	ldd	r25, Y+12	; 0x0c
    1c18:	ad 85       	ldd	r26, Y+13	; 0x0d
    1c1a:	be 85       	ldd	r27, Y+14	; 0x0e
    1c1c:	f9 01       	movw	r30, r18
    1c1e:	80 87       	std	Z+8, r24	; 0x08
    1c20:	91 87       	std	Z+9, r25	; 0x09
    1c22:	a2 87       	std	Z+10, r26	; 0x0a
    1c24:	b3 87       	std	Z+11, r27	; 0x0b

00001c26 <.Loc.4>:
    pid->previous_error = 0;
    1c26:	89 81       	ldd	r24, Y+1	; 0x01
    1c28:	9a 81       	ldd	r25, Y+2	; 0x02
    1c2a:	fc 01       	movw	r30, r24
    1c2c:	14 86       	std	Z+12, r1	; 0x0c
    1c2e:	15 86       	std	Z+13, r1	; 0x0d
    1c30:	16 86       	std	Z+14, r1	; 0x0e
    1c32:	17 86       	std	Z+15, r1	; 0x0f

00001c34 <.Loc.5>:
    pid->integral = 0;
    1c34:	89 81       	ldd	r24, Y+1	; 0x01
    1c36:	9a 81       	ldd	r25, Y+2	; 0x02
    1c38:	fc 01       	movw	r30, r24
    1c3a:	10 8a       	std	Z+16, r1	; 0x10
    1c3c:	11 8a       	std	Z+17, r1	; 0x11
    1c3e:	12 8a       	std	Z+18, r1	; 0x12
    1c40:	13 8a       	std	Z+19, r1	; 0x13

00001c42 <.Loc.6>:
    pid->setpoint = 0;
    1c42:	89 81       	ldd	r24, Y+1	; 0x01
    1c44:	9a 81       	ldd	r25, Y+2	; 0x02
    1c46:	fc 01       	movw	r30, r24
    1c48:	14 8a       	std	Z+20, r1	; 0x14
    1c4a:	15 8a       	std	Z+21, r1	; 0x15
    1c4c:	16 8a       	std	Z+22, r1	; 0x16
    1c4e:	17 8a       	std	Z+23, r1	; 0x17

00001c50 <.Loc.7>:
    pid->output_min = output_min;
    1c50:	29 81       	ldd	r18, Y+1	; 0x01
    1c52:	3a 81       	ldd	r19, Y+2	; 0x02
    1c54:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c56:	98 89       	ldd	r25, Y+16	; 0x10
    1c58:	a9 89       	ldd	r26, Y+17	; 0x11
    1c5a:	ba 89       	ldd	r27, Y+18	; 0x12
    1c5c:	f9 01       	movw	r30, r18
    1c5e:	84 8f       	std	Z+28, r24	; 0x1c
    1c60:	95 8f       	std	Z+29, r25	; 0x1d
    1c62:	a6 8f       	std	Z+30, r26	; 0x1e
    1c64:	b7 8f       	std	Z+31, r27	; 0x1f

00001c66 <.Loc.8>:
    pid->output_max = output_max;
    1c66:	29 81       	ldd	r18, Y+1	; 0x01
    1c68:	3a 81       	ldd	r19, Y+2	; 0x02
    1c6a:	8a a1       	ldd	r24, Y+34	; 0x22
    1c6c:	9b a1       	ldd	r25, Y+35	; 0x23
    1c6e:	ac a1       	ldd	r26, Y+36	; 0x24
    1c70:	bd a1       	ldd	r27, Y+37	; 0x25
    1c72:	f9 01       	movw	r30, r18
    1c74:	80 a3       	std	Z+32, r24	; 0x20
    1c76:	91 a3       	std	Z+33, r25	; 0x21
    1c78:	a2 a3       	std	Z+34, r26	; 0x22
    1c7a:	b3 a3       	std	Z+35, r27	; 0x23

00001c7c <.Loc.9>:
    pid->output = 0;
    1c7c:	89 81       	ldd	r24, Y+1	; 0x01
    1c7e:	9a 81       	ldd	r25, Y+2	; 0x02
    1c80:	fc 01       	movw	r30, r24
    1c82:	10 8e       	std	Z+24, r1	; 0x18
    1c84:	11 8e       	std	Z+25, r1	; 0x19
    1c86:	12 8e       	std	Z+26, r1	; 0x1a
    1c88:	13 8e       	std	Z+27, r1	; 0x1b

00001c8a <.Loc.10>:
}
    1c8a:	00 00       	nop
    1c8c:	62 96       	adiw	r28, 0x12	; 18
    1c8e:	0f b6       	in	r0, 0x3f	; 63
    1c90:	f8 94       	cli
    1c92:	de bf       	out	0x3e, r29	; 62
    1c94:	0f be       	out	0x3f, r0	; 63
    1c96:	cd bf       	out	0x3d, r28	; 61
    1c98:	df 91       	pop	r29
    1c9a:	cf 91       	pop	r28
    1c9c:	1f 91       	pop	r17
    1c9e:	0f 91       	pop	r16
    1ca0:	ff 90       	pop	r15
    1ca2:	ef 90       	pop	r14
    1ca4:	df 90       	pop	r13
    1ca6:	cf 90       	pop	r12
    1ca8:	bf 90       	pop	r11
    1caa:	af 90       	pop	r10
    1cac:	9f 90       	pop	r9
    1cae:	8f 90       	pop	r8
    1cb0:	08 95       	ret

00001cb2 <PIDController_Update>:

float PIDController_Update(PIDController* pid, float measured_value) {
    1cb2:	cf 93       	push	r28
    1cb4:	df 93       	push	r29
    1cb6:	cd b7       	in	r28, 0x3d	; 61
    1cb8:	de b7       	in	r29, 0x3e	; 62
    1cba:	c6 55       	subi	r28, 0x56	; 86
    1cbc:	d1 09       	sbc	r29, r1
    1cbe:	0f b6       	in	r0, 0x3f	; 63
    1cc0:	f8 94       	cli
    1cc2:	de bf       	out	0x3e, r29	; 62
    1cc4:	0f be       	out	0x3f, r0	; 63
    1cc6:	cd bf       	out	0x3d, r28	; 61
    1cc8:	9a 87       	std	Y+10, r25	; 0x0a
    1cca:	89 87       	std	Y+9, r24	; 0x09
    1ccc:	4b 87       	std	Y+11, r20	; 0x0b
    1cce:	5c 87       	std	Y+12, r21	; 0x0c
    1cd0:	6d 87       	std	Y+13, r22	; 0x0d
    1cd2:	7e 87       	std	Y+14, r23	; 0x0e

00001cd4 <.Loc.12>:
    float error = pid->setpoint - measured_value;
    1cd4:	89 85       	ldd	r24, Y+9	; 0x09
    1cd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cd8:	dc 01       	movw	r26, r24
    1cda:	54 96       	adiw	r26, 0x14	; 20
    1cdc:	2d 91       	ld	r18, X+
    1cde:	3d 91       	ld	r19, X+
    1ce0:	4d 91       	ld	r20, X+
    1ce2:	5c 91       	ld	r21, X
    1ce4:	57 97       	sbiw	r26, 0x17	; 23
    1ce6:	2f 87       	std	Y+15, r18	; 0x0f
    1ce8:	38 8b       	std	Y+16, r19	; 0x10
    1cea:	49 8b       	std	Y+17, r20	; 0x11
    1cec:	5a 8b       	std	Y+18, r21	; 0x12

00001cee <.Loc.13>:
    1cee:	2b 85       	ldd	r18, Y+11	; 0x0b
    1cf0:	3c 85       	ldd	r19, Y+12	; 0x0c
    1cf2:	4d 85       	ldd	r20, Y+13	; 0x0d
    1cf4:	5e 85       	ldd	r21, Y+14	; 0x0e
    1cf6:	6f 85       	ldd	r22, Y+15	; 0x0f
    1cf8:	78 89       	ldd	r23, Y+16	; 0x10
    1cfa:	89 89       	ldd	r24, Y+17	; 0x11
    1cfc:	9a 89       	ldd	r25, Y+18	; 0x12
    1cfe:	0e 94 58 16 	call	0x2cb0	; 0x2cb0 <__subsf3>
    1d02:	6f ab       	std	Y+55, r22	; 0x37
    1d04:	78 af       	std	Y+56, r23	; 0x38
    1d06:	89 af       	std	Y+57, r24	; 0x39
    1d08:	9a af       	std	Y+58, r25	; 0x3a
    1d0a:	2f a9       	ldd	r18, Y+55	; 0x37
    1d0c:	38 ad       	ldd	r19, Y+56	; 0x38
    1d0e:	49 ad       	ldd	r20, Y+57	; 0x39
    1d10:	5a ad       	ldd	r21, Y+58	; 0x3a
    1d12:	29 83       	std	Y+1, r18	; 0x01
    1d14:	3a 83       	std	Y+2, r19	; 0x02
    1d16:	4b 83       	std	Y+3, r20	; 0x03
    1d18:	5c 83       	std	Y+4, r21	; 0x04

00001d1a <.Loc.14>:
    pid->integral += error;
    1d1a:	89 85       	ldd	r24, Y+9	; 0x09
    1d1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d1e:	dc 01       	movw	r26, r24
    1d20:	50 96       	adiw	r26, 0x10	; 16
    1d22:	2d 91       	ld	r18, X+
    1d24:	3d 91       	ld	r19, X+
    1d26:	4d 91       	ld	r20, X+
    1d28:	5c 91       	ld	r21, X
    1d2a:	53 97       	sbiw	r26, 0x13	; 19
    1d2c:	2b 8b       	std	Y+19, r18	; 0x13
    1d2e:	3c 8b       	std	Y+20, r19	; 0x14
    1d30:	4d 8b       	std	Y+21, r20	; 0x15
    1d32:	5e 8b       	std	Y+22, r21	; 0x16

00001d34 <.Loc.15>:
    1d34:	29 81       	ldd	r18, Y+1	; 0x01
    1d36:	3a 81       	ldd	r19, Y+2	; 0x02
    1d38:	4b 81       	ldd	r20, Y+3	; 0x03
    1d3a:	5c 81       	ldd	r21, Y+4	; 0x04
    1d3c:	6b 89       	ldd	r22, Y+19	; 0x13
    1d3e:	7c 89       	ldd	r23, Y+20	; 0x14
    1d40:	8d 89       	ldd	r24, Y+21	; 0x15
    1d42:	9e 89       	ldd	r25, Y+22	; 0x16
    1d44:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__addsf3>
    1d48:	6b af       	std	Y+59, r22	; 0x3b
    1d4a:	7c af       	std	Y+60, r23	; 0x3c
    1d4c:	8d af       	std	Y+61, r24	; 0x3d
    1d4e:	9e af       	std	Y+62, r25	; 0x3e
    1d50:	8b ad       	ldd	r24, Y+59	; 0x3b
    1d52:	9c ad       	ldd	r25, Y+60	; 0x3c
    1d54:	ad ad       	ldd	r26, Y+61	; 0x3d
    1d56:	be ad       	ldd	r27, Y+62	; 0x3e
    1d58:	29 85       	ldd	r18, Y+9	; 0x09
    1d5a:	3a 85       	ldd	r19, Y+10	; 0x0a
    1d5c:	f9 01       	movw	r30, r18
    1d5e:	80 8b       	std	Z+16, r24	; 0x10
    1d60:	91 8b       	std	Z+17, r25	; 0x11
    1d62:	a2 8b       	std	Z+18, r26	; 0x12
    1d64:	b3 8b       	std	Z+19, r27	; 0x13

00001d66 <.Loc.16>:
    float derivative = error - pid->previous_error;
    1d66:	89 85       	ldd	r24, Y+9	; 0x09
    1d68:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d6a:	fc 01       	movw	r30, r24
    1d6c:	84 85       	ldd	r24, Z+12	; 0x0c
    1d6e:	95 85       	ldd	r25, Z+13	; 0x0d
    1d70:	a6 85       	ldd	r26, Z+14	; 0x0e
    1d72:	b7 85       	ldd	r27, Z+15	; 0x0f

00001d74 <.Loc.17>:
    1d74:	9c 01       	movw	r18, r24
    1d76:	ad 01       	movw	r20, r26
    1d78:	69 81       	ldd	r22, Y+1	; 0x01
    1d7a:	7a 81       	ldd	r23, Y+2	; 0x02
    1d7c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d7e:	9c 81       	ldd	r25, Y+4	; 0x04
    1d80:	0e 94 58 16 	call	0x2cb0	; 0x2cb0 <__subsf3>
    1d84:	23 96       	adiw	r28, 0x03	; 3
    1d86:	6c af       	std	Y+60, r22	; 0x3c
    1d88:	7d af       	std	Y+61, r23	; 0x3d
    1d8a:	8e af       	std	Y+62, r24	; 0x3e
    1d8c:	9f af       	std	Y+63, r25	; 0x3f
    1d8e:	23 97       	sbiw	r28, 0x03	; 3
    1d90:	23 96       	adiw	r28, 0x03	; 3
    1d92:	2c ad       	ldd	r18, Y+60	; 0x3c
    1d94:	3d ad       	ldd	r19, Y+61	; 0x3d
    1d96:	4e ad       	ldd	r20, Y+62	; 0x3e
    1d98:	5f ad       	ldd	r21, Y+63	; 0x3f
    1d9a:	23 97       	sbiw	r28, 0x03	; 3
    1d9c:	2d 83       	std	Y+5, r18	; 0x05
    1d9e:	3e 83       	std	Y+6, r19	; 0x06
    1da0:	4f 83       	std	Y+7, r20	; 0x07
    1da2:	58 87       	std	Y+8, r21	; 0x08

00001da4 <.Loc.18>:
    pid->output = (pid->Kp * error) + (pid->Ki * pid->integral) + (pid->Kd * derivative);
    1da4:	89 85       	ldd	r24, Y+9	; 0x09
    1da6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1da8:	dc 01       	movw	r26, r24
    1daa:	2d 91       	ld	r18, X+
    1dac:	3d 91       	ld	r19, X+
    1dae:	4d 91       	ld	r20, X+
    1db0:	5c 91       	ld	r21, X
    1db2:	2f 8b       	std	Y+23, r18	; 0x17
    1db4:	38 8f       	std	Y+24, r19	; 0x18
    1db6:	49 8f       	std	Y+25, r20	; 0x19
    1db8:	5a 8f       	std	Y+26, r21	; 0x1a

00001dba <.Loc.19>:
    1dba:	29 81       	ldd	r18, Y+1	; 0x01
    1dbc:	3a 81       	ldd	r19, Y+2	; 0x02
    1dbe:	4b 81       	ldd	r20, Y+3	; 0x03
    1dc0:	5c 81       	ldd	r21, Y+4	; 0x04
    1dc2:	6f 89       	ldd	r22, Y+23	; 0x17
    1dc4:	78 8d       	ldd	r23, Y+24	; 0x18
    1dc6:	89 8d       	ldd	r24, Y+25	; 0x19
    1dc8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1dca:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    1dce:	27 96       	adiw	r28, 0x07	; 7
    1dd0:	6c af       	std	Y+60, r22	; 0x3c
    1dd2:	7d af       	std	Y+61, r23	; 0x3d
    1dd4:	8e af       	std	Y+62, r24	; 0x3e
    1dd6:	9f af       	std	Y+63, r25	; 0x3f
    1dd8:	27 97       	sbiw	r28, 0x07	; 7
    1dda:	27 96       	adiw	r28, 0x07	; 7
    1ddc:	2c ad       	ldd	r18, Y+60	; 0x3c
    1dde:	3d ad       	ldd	r19, Y+61	; 0x3d
    1de0:	4e ad       	ldd	r20, Y+62	; 0x3e
    1de2:	5f ad       	ldd	r21, Y+63	; 0x3f
    1de4:	27 97       	sbiw	r28, 0x07	; 7
    1de6:	2b 8f       	std	Y+27, r18	; 0x1b
    1de8:	3c 8f       	std	Y+28, r19	; 0x1c
    1dea:	4d 8f       	std	Y+29, r20	; 0x1d
    1dec:	5e 8f       	std	Y+30, r21	; 0x1e

00001dee <.Loc.20>:
    1dee:	89 85       	ldd	r24, Y+9	; 0x09
    1df0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1df2:	dc 01       	movw	r26, r24
    1df4:	14 96       	adiw	r26, 0x04	; 4
    1df6:	2d 91       	ld	r18, X+
    1df8:	3d 91       	ld	r19, X+
    1dfa:	4d 91       	ld	r20, X+
    1dfc:	5c 91       	ld	r21, X
    1dfe:	17 97       	sbiw	r26, 0x07	; 7
    1e00:	2f 8f       	std	Y+31, r18	; 0x1f
    1e02:	38 a3       	std	Y+32, r19	; 0x20
    1e04:	49 a3       	std	Y+33, r20	; 0x21
    1e06:	5a a3       	std	Y+34, r21	; 0x22

00001e08 <.Loc.21>:
    1e08:	89 85       	ldd	r24, Y+9	; 0x09
    1e0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e0c:	fc 01       	movw	r30, r24
    1e0e:	80 89       	ldd	r24, Z+16	; 0x10
    1e10:	91 89       	ldd	r25, Z+17	; 0x11
    1e12:	a2 89       	ldd	r26, Z+18	; 0x12
    1e14:	b3 89       	ldd	r27, Z+19	; 0x13

00001e16 <.Loc.22>:
    1e16:	9c 01       	movw	r18, r24
    1e18:	ad 01       	movw	r20, r26
    1e1a:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1e1c:	78 a1       	ldd	r23, Y+32	; 0x20
    1e1e:	89 a1       	ldd	r24, Y+33	; 0x21
    1e20:	9a a1       	ldd	r25, Y+34	; 0x22
    1e22:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    1e26:	2b 96       	adiw	r28, 0x0b	; 11
    1e28:	6c af       	std	Y+60, r22	; 0x3c
    1e2a:	7d af       	std	Y+61, r23	; 0x3d
    1e2c:	8e af       	std	Y+62, r24	; 0x3e
    1e2e:	9f af       	std	Y+63, r25	; 0x3f
    1e30:	2b 97       	sbiw	r28, 0x0b	; 11
    1e32:	2b 96       	adiw	r28, 0x0b	; 11
    1e34:	8c ad       	ldd	r24, Y+60	; 0x3c
    1e36:	9d ad       	ldd	r25, Y+61	; 0x3d
    1e38:	ae ad       	ldd	r26, Y+62	; 0x3e
    1e3a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1e3c:	2b 97       	sbiw	r28, 0x0b	; 11

00001e3e <.Loc.23>:
    1e3e:	9c 01       	movw	r18, r24
    1e40:	ad 01       	movw	r20, r26
    1e42:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1e44:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1e46:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e48:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e4a:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__addsf3>
    1e4e:	2f 96       	adiw	r28, 0x0f	; 15
    1e50:	6c af       	std	Y+60, r22	; 0x3c
    1e52:	7d af       	std	Y+61, r23	; 0x3d
    1e54:	8e af       	std	Y+62, r24	; 0x3e
    1e56:	9f af       	std	Y+63, r25	; 0x3f
    1e58:	2f 97       	sbiw	r28, 0x0f	; 15
    1e5a:	2f 96       	adiw	r28, 0x0f	; 15
    1e5c:	2c ad       	ldd	r18, Y+60	; 0x3c
    1e5e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1e60:	4e ad       	ldd	r20, Y+62	; 0x3e
    1e62:	5f ad       	ldd	r21, Y+63	; 0x3f
    1e64:	2f 97       	sbiw	r28, 0x0f	; 15
    1e66:	2b a3       	std	Y+35, r18	; 0x23
    1e68:	3c a3       	std	Y+36, r19	; 0x24
    1e6a:	4d a3       	std	Y+37, r20	; 0x25
    1e6c:	5e a3       	std	Y+38, r21	; 0x26

00001e6e <.Loc.24>:
    1e6e:	89 85       	ldd	r24, Y+9	; 0x09
    1e70:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e72:	dc 01       	movw	r26, r24
    1e74:	18 96       	adiw	r26, 0x08	; 8
    1e76:	2d 91       	ld	r18, X+
    1e78:	3d 91       	ld	r19, X+
    1e7a:	4d 91       	ld	r20, X+
    1e7c:	5c 91       	ld	r21, X
    1e7e:	1b 97       	sbiw	r26, 0x0b	; 11
    1e80:	2f a3       	std	Y+39, r18	; 0x27
    1e82:	38 a7       	std	Y+40, r19	; 0x28
    1e84:	49 a7       	std	Y+41, r20	; 0x29
    1e86:	5a a7       	std	Y+42, r21	; 0x2a

00001e88 <.Loc.25>:
    1e88:	2d 81       	ldd	r18, Y+5	; 0x05
    1e8a:	3e 81       	ldd	r19, Y+6	; 0x06
    1e8c:	4f 81       	ldd	r20, Y+7	; 0x07
    1e8e:	58 85       	ldd	r21, Y+8	; 0x08
    1e90:	6f a1       	ldd	r22, Y+39	; 0x27
    1e92:	78 a5       	ldd	r23, Y+40	; 0x28
    1e94:	89 a5       	ldd	r24, Y+41	; 0x29
    1e96:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e98:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    1e9c:	63 96       	adiw	r28, 0x13	; 19
    1e9e:	6c af       	std	Y+60, r22	; 0x3c
    1ea0:	7d af       	std	Y+61, r23	; 0x3d
    1ea2:	8e af       	std	Y+62, r24	; 0x3e
    1ea4:	9f af       	std	Y+63, r25	; 0x3f
    1ea6:	63 97       	sbiw	r28, 0x13	; 19
    1ea8:	63 96       	adiw	r28, 0x13	; 19
    1eaa:	8c ad       	ldd	r24, Y+60	; 0x3c
    1eac:	9d ad       	ldd	r25, Y+61	; 0x3d
    1eae:	ae ad       	ldd	r26, Y+62	; 0x3e
    1eb0:	bf ad       	ldd	r27, Y+63	; 0x3f
    1eb2:	63 97       	sbiw	r28, 0x13	; 19

00001eb4 <.Loc.26>:
    1eb4:	9c 01       	movw	r18, r24
    1eb6:	ad 01       	movw	r20, r26
    1eb8:	6b a1       	ldd	r22, Y+35	; 0x23
    1eba:	7c a1       	ldd	r23, Y+36	; 0x24
    1ebc:	8d a1       	ldd	r24, Y+37	; 0x25
    1ebe:	9e a1       	ldd	r25, Y+38	; 0x26
    1ec0:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__addsf3>
    1ec4:	67 96       	adiw	r28, 0x17	; 23
    1ec6:	6c af       	std	Y+60, r22	; 0x3c
    1ec8:	7d af       	std	Y+61, r23	; 0x3d
    1eca:	8e af       	std	Y+62, r24	; 0x3e
    1ecc:	9f af       	std	Y+63, r25	; 0x3f
    1ece:	67 97       	sbiw	r28, 0x17	; 23
    1ed0:	67 96       	adiw	r28, 0x17	; 23
    1ed2:	8c ad       	ldd	r24, Y+60	; 0x3c
    1ed4:	9d ad       	ldd	r25, Y+61	; 0x3d
    1ed6:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ed8:	bf ad       	ldd	r27, Y+63	; 0x3f
    1eda:	67 97       	sbiw	r28, 0x17	; 23

00001edc <.Loc.27>:
    1edc:	29 85       	ldd	r18, Y+9	; 0x09
    1ede:	3a 85       	ldd	r19, Y+10	; 0x0a
    1ee0:	f9 01       	movw	r30, r18
    1ee2:	80 8f       	std	Z+24, r24	; 0x18
    1ee4:	91 8f       	std	Z+25, r25	; 0x19
    1ee6:	a2 8f       	std	Z+26, r26	; 0x1a
    1ee8:	b3 8f       	std	Z+27, r27	; 0x1b

00001eea <.Loc.28>:

    // Clamp output to min/max
    if (pid->output > pid->output_max) {
    1eea:	89 85       	ldd	r24, Y+9	; 0x09
    1eec:	9a 85       	ldd	r25, Y+10	; 0x0a
    1eee:	dc 01       	movw	r26, r24
    1ef0:	58 96       	adiw	r26, 0x18	; 24
    1ef2:	2d 91       	ld	r18, X+
    1ef4:	3d 91       	ld	r19, X+
    1ef6:	4d 91       	ld	r20, X+
    1ef8:	5c 91       	ld	r21, X
    1efa:	5b 97       	sbiw	r26, 0x1b	; 27
    1efc:	2b a7       	std	Y+43, r18	; 0x2b
    1efe:	3c a7       	std	Y+44, r19	; 0x2c
    1f00:	4d a7       	std	Y+45, r20	; 0x2d
    1f02:	5e a7       	std	Y+46, r21	; 0x2e

00001f04 <.Loc.29>:
    1f04:	89 85       	ldd	r24, Y+9	; 0x09
    1f06:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f08:	fc 01       	movw	r30, r24
    1f0a:	80 a1       	ldd	r24, Z+32	; 0x20
    1f0c:	91 a1       	ldd	r25, Z+33	; 0x21
    1f0e:	a2 a1       	ldd	r26, Z+34	; 0x22
    1f10:	b3 a1       	ldd	r27, Z+35	; 0x23

00001f12 <.Loc.30>:
    1f12:	9c 01       	movw	r18, r24
    1f14:	ad 01       	movw	r20, r26
    1f16:	6b a5       	ldd	r22, Y+43	; 0x2b
    1f18:	7c a5       	ldd	r23, Y+44	; 0x2c
    1f1a:	8d a5       	ldd	r24, Y+45	; 0x2d
    1f1c:	9e a5       	ldd	r25, Y+46	; 0x2e
    1f1e:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    1f22:	88 23       	and	r24, r24
    1f24:	81 f0       	breq	.+32     	; 0x1f46 <.L10>
    1f26:	7c f0       	brlt	.+30     	; 0x1f46 <.L10>

00001f28 <.Loc.31>:
        pid->output = pid->output_max;
    1f28:	89 85       	ldd	r24, Y+9	; 0x09
    1f2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f2c:	fc 01       	movw	r30, r24
    1f2e:	80 a1       	ldd	r24, Z+32	; 0x20
    1f30:	91 a1       	ldd	r25, Z+33	; 0x21
    1f32:	a2 a1       	ldd	r26, Z+34	; 0x22
    1f34:	b3 a1       	ldd	r27, Z+35	; 0x23

00001f36 <.Loc.32>:
    1f36:	29 85       	ldd	r18, Y+9	; 0x09
    1f38:	3a 85       	ldd	r19, Y+10	; 0x0a
    1f3a:	f9 01       	movw	r30, r18
    1f3c:	80 8f       	std	Z+24, r24	; 0x18
    1f3e:	91 8f       	std	Z+25, r25	; 0x19
    1f40:	a2 8f       	std	Z+26, r26	; 0x1a
    1f42:	b3 8f       	std	Z+27, r27	; 0x1b
    1f44:	2c c0       	rjmp	.+88     	; 0x1f9e <.L5>

00001f46 <.L10>:
    } else if (pid->output < pid->output_min) {
    1f46:	89 85       	ldd	r24, Y+9	; 0x09
    1f48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	58 96       	adiw	r26, 0x18	; 24
    1f4e:	2d 91       	ld	r18, X+
    1f50:	3d 91       	ld	r19, X+
    1f52:	4d 91       	ld	r20, X+
    1f54:	5c 91       	ld	r21, X
    1f56:	5b 97       	sbiw	r26, 0x1b	; 27
    1f58:	2f a7       	std	Y+47, r18	; 0x2f
    1f5a:	38 ab       	std	Y+48, r19	; 0x30
    1f5c:	49 ab       	std	Y+49, r20	; 0x31
    1f5e:	5a ab       	std	Y+50, r21	; 0x32

00001f60 <.Loc.34>:
    1f60:	89 85       	ldd	r24, Y+9	; 0x09
    1f62:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f64:	fc 01       	movw	r30, r24
    1f66:	84 8d       	ldd	r24, Z+28	; 0x1c
    1f68:	95 8d       	ldd	r25, Z+29	; 0x1d
    1f6a:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1f6c:	b7 8d       	ldd	r27, Z+31	; 0x1f

00001f6e <.Loc.35>:
    1f6e:	9c 01       	movw	r18, r24
    1f70:	ad 01       	movw	r20, r26
    1f72:	6f a5       	ldd	r22, Y+47	; 0x2f
    1f74:	78 a9       	ldd	r23, Y+48	; 0x30
    1f76:	89 a9       	ldd	r24, Y+49	; 0x31
    1f78:	9a a9       	ldd	r25, Y+50	; 0x32
    1f7a:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    1f7e:	88 23       	and	r24, r24
    1f80:	74 f4       	brge	.+28     	; 0x1f9e <.L5>

00001f82 <.Loc.36>:
        pid->output = pid->output_min;
    1f82:	89 85       	ldd	r24, Y+9	; 0x09
    1f84:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f86:	fc 01       	movw	r30, r24
    1f88:	84 8d       	ldd	r24, Z+28	; 0x1c
    1f8a:	95 8d       	ldd	r25, Z+29	; 0x1d
    1f8c:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1f8e:	b7 8d       	ldd	r27, Z+31	; 0x1f

00001f90 <.Loc.37>:
    1f90:	29 85       	ldd	r18, Y+9	; 0x09
    1f92:	3a 85       	ldd	r19, Y+10	; 0x0a
    1f94:	f9 01       	movw	r30, r18
    1f96:	80 8f       	std	Z+24, r24	; 0x18
    1f98:	91 8f       	std	Z+25, r25	; 0x19
    1f9a:	a2 8f       	std	Z+26, r26	; 0x1a
    1f9c:	b3 8f       	std	Z+27, r27	; 0x1b

00001f9e <.L5>:
    }

    pid->previous_error = error;
    1f9e:	29 85       	ldd	r18, Y+9	; 0x09
    1fa0:	3a 85       	ldd	r19, Y+10	; 0x0a
    1fa2:	89 81       	ldd	r24, Y+1	; 0x01
    1fa4:	9a 81       	ldd	r25, Y+2	; 0x02
    1fa6:	ab 81       	ldd	r26, Y+3	; 0x03
    1fa8:	bc 81       	ldd	r27, Y+4	; 0x04
    1faa:	f9 01       	movw	r30, r18
    1fac:	84 87       	std	Z+12, r24	; 0x0c
    1fae:	95 87       	std	Z+13, r25	; 0x0d
    1fb0:	a6 87       	std	Z+14, r26	; 0x0e
    1fb2:	b7 87       	std	Z+15, r27	; 0x0f

00001fb4 <.Loc.39>:

    return pid->output;
    1fb4:	89 85       	ldd	r24, Y+9	; 0x09
    1fb6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fb8:	fc 01       	movw	r30, r24
    1fba:	80 8d       	ldd	r24, Z+24	; 0x18
    1fbc:	91 8d       	ldd	r25, Z+25	; 0x19
    1fbe:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1fc0:	b3 8d       	ldd	r27, Z+27	; 0x1b
    1fc2:	8b ab       	std	Y+51, r24	; 0x33
    1fc4:	9c ab       	std	Y+52, r25	; 0x34
    1fc6:	ad ab       	std	Y+53, r26	; 0x35
    1fc8:	be ab       	std	Y+54, r27	; 0x36

00001fca <.Loc.40>:
}
    1fca:	6b a9       	ldd	r22, Y+51	; 0x33
    1fcc:	7c a9       	ldd	r23, Y+52	; 0x34
    1fce:	8d a9       	ldd	r24, Y+53	; 0x35
    1fd0:	9e a9       	ldd	r25, Y+54	; 0x36
    1fd2:	ca 5a       	subi	r28, 0xAA	; 170
    1fd4:	df 4f       	sbci	r29, 0xFF	; 255
    1fd6:	0f b6       	in	r0, 0x3f	; 63
    1fd8:	f8 94       	cli
    1fda:	de bf       	out	0x3e, r29	; 62
    1fdc:	0f be       	out	0x3f, r0	; 63
    1fde:	cd bf       	out	0x3d, r28	; 61
    1fe0:	df 91       	pop	r29
    1fe2:	cf 91       	pop	r28
    1fe4:	08 95       	ret

00001fe6 <init_ultrasonics>:
#include "ultrasone.h"
#include <avr/io.h>
#include <util/delay.h>

// Initialize all three ultrasonic sensors
void init_ultrasonics(void) {
    1fe6:	cf 93       	push	r28
    1fe8:	df 93       	push	r29
    1fea:	cd b7       	in	r28, 0x3d	; 61
    1fec:	de b7       	in	r29, 0x3e	; 62

00001fee <.Loc.1>:
    // Sensor 1
    DDRH |= (1 << US1_TRIG_PIN);  // Set trigger pin as output
    1fee:	81 e0       	ldi	r24, 0x01	; 1
    1ff0:	91 e0       	ldi	r25, 0x01	; 1
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	20 81       	ld	r18, Z
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	91 e0       	ldi	r25, 0x01	; 1

00001ffa <.Loc.2>:
    1ffa:	21 60       	ori	r18, 0x01	; 1
    1ffc:	fc 01       	movw	r30, r24
    1ffe:	20 83       	st	Z, r18

00002000 <.Loc.3>:
    DDRH &= ~(1 << US1_ECHO_PIN); // Set echo pin as input
    2000:	81 e0       	ldi	r24, 0x01	; 1
    2002:	91 e0       	ldi	r25, 0x01	; 1
    2004:	fc 01       	movw	r30, r24
    2006:	20 81       	ld	r18, Z

00002008 <.Loc.4>:
    2008:	81 e0       	ldi	r24, 0x01	; 1
    200a:	91 e0       	ldi	r25, 0x01	; 1

0000200c <.Loc.5>:
    200c:	2d 7f       	andi	r18, 0xFD	; 253
    200e:	fc 01       	movw	r30, r24
    2010:	20 83       	st	Z, r18

00002012 <.Loc.6>:
    PORTH &= ~(1 << US1_TRIG_PIN);
    2012:	82 e0       	ldi	r24, 0x02	; 2
    2014:	91 e0       	ldi	r25, 0x01	; 1
    2016:	fc 01       	movw	r30, r24
    2018:	20 81       	ld	r18, Z

0000201a <.Loc.7>:
    201a:	82 e0       	ldi	r24, 0x02	; 2
    201c:	91 e0       	ldi	r25, 0x01	; 1

0000201e <.Loc.8>:
    201e:	2e 7f       	andi	r18, 0xFE	; 254
    2020:	fc 01       	movw	r30, r24
    2022:	20 83       	st	Z, r18

00002024 <.Loc.9>:

    // Sensor 2
    DDRJ |= (1 << US2_TRIG_PIN);  // Set trigger pin as output
    2024:	84 e0       	ldi	r24, 0x04	; 4
    2026:	91 e0       	ldi	r25, 0x01	; 1
    2028:	fc 01       	movw	r30, r24
    202a:	20 81       	ld	r18, Z
    202c:	84 e0       	ldi	r24, 0x04	; 4
    202e:	91 e0       	ldi	r25, 0x01	; 1

00002030 <.Loc.10>:
    2030:	22 60       	ori	r18, 0x02	; 2
    2032:	fc 01       	movw	r30, r24
    2034:	20 83       	st	Z, r18

00002036 <.Loc.11>:
    DDRJ &= ~(1 << US2_ECHO_PIN); // Set echo pin as input
    2036:	84 e0       	ldi	r24, 0x04	; 4
    2038:	91 e0       	ldi	r25, 0x01	; 1
    203a:	fc 01       	movw	r30, r24
    203c:	20 81       	ld	r18, Z

0000203e <.Loc.12>:
    203e:	84 e0       	ldi	r24, 0x04	; 4
    2040:	91 e0       	ldi	r25, 0x01	; 1

00002042 <.Loc.13>:
    2042:	2e 7f       	andi	r18, 0xFE	; 254
    2044:	fc 01       	movw	r30, r24
    2046:	20 83       	st	Z, r18

00002048 <.Loc.14>:
    PORTJ &= ~(1 << US2_TRIG_PIN);
    2048:	85 e0       	ldi	r24, 0x05	; 5
    204a:	91 e0       	ldi	r25, 0x01	; 1
    204c:	fc 01       	movw	r30, r24
    204e:	20 81       	ld	r18, Z

00002050 <.Loc.15>:
    2050:	85 e0       	ldi	r24, 0x05	; 5
    2052:	91 e0       	ldi	r25, 0x01	; 1

00002054 <.Loc.16>:
    2054:	2d 7f       	andi	r18, 0xFD	; 253
    2056:	fc 01       	movw	r30, r24
    2058:	20 83       	st	Z, r18

0000205a <.Loc.17>:

    // Sensor 3
    DDRH |= (1 << US3_TRIG_PIN);  // Set trigger pin as output
    205a:	81 e0       	ldi	r24, 0x01	; 1
    205c:	91 e0       	ldi	r25, 0x01	; 1
    205e:	fc 01       	movw	r30, r24
    2060:	20 81       	ld	r18, Z
    2062:	81 e0       	ldi	r24, 0x01	; 1
    2064:	91 e0       	ldi	r25, 0x01	; 1

00002066 <.Loc.18>:
    2066:	20 61       	ori	r18, 0x10	; 16
    2068:	fc 01       	movw	r30, r24
    206a:	20 83       	st	Z, r18

0000206c <.Loc.19>:
    DDRH &= ~(1 << US3_ECHO_PIN); // Set echo pin as input
    206c:	81 e0       	ldi	r24, 0x01	; 1
    206e:	91 e0       	ldi	r25, 0x01	; 1
    2070:	fc 01       	movw	r30, r24
    2072:	20 81       	ld	r18, Z

00002074 <.Loc.20>:
    2074:	81 e0       	ldi	r24, 0x01	; 1
    2076:	91 e0       	ldi	r25, 0x01	; 1

00002078 <.Loc.21>:
    2078:	2f 7d       	andi	r18, 0xDF	; 223
    207a:	fc 01       	movw	r30, r24
    207c:	20 83       	st	Z, r18

0000207e <.Loc.22>:
    PORTH &= ~(1 << US3_TRIG_PIN);
    207e:	82 e0       	ldi	r24, 0x02	; 2
    2080:	91 e0       	ldi	r25, 0x01	; 1
    2082:	fc 01       	movw	r30, r24
    2084:	20 81       	ld	r18, Z

00002086 <.Loc.23>:
    2086:	82 e0       	ldi	r24, 0x02	; 2
    2088:	91 e0       	ldi	r25, 0x01	; 1

0000208a <.Loc.24>:
    208a:	2f 7e       	andi	r18, 0xEF	; 239
    208c:	fc 01       	movw	r30, r24
    208e:	20 83       	st	Z, r18

00002090 <.Loc.25>:
/*
       // Sensor 4
    DDRD |= (1 << US4_TRIG_PIN);  // Set trigger pin as output
    DDRD &= ~(1 << US4_ECHO_PIN); // Set echo pin as input
    PORTD &= ~(1 << US4_TRIG_PIN);*/
}
    2090:	00 00       	nop
    2092:	df 91       	pop	r29
    2094:	cf 91       	pop	r28
    2096:	08 95       	ret

00002098 <measure_distance1>:

// Measure distance with sensor 1
float measure_distance1(void) {
    2098:	cf 93       	push	r28
    209a:	df 93       	push	r29
    209c:	cd b7       	in	r28, 0x3d	; 61
    209e:	de b7       	in	r29, 0x3e	; 62
    20a0:	c6 56       	subi	r28, 0x66	; 102
    20a2:	d1 09       	sbc	r29, r1
    20a4:	0f b6       	in	r0, 0x3f	; 63
    20a6:	f8 94       	cli
    20a8:	de bf       	out	0x3e, r29	; 62
    20aa:	0f be       	out	0x3f, r0	; 63
    20ac:	cd bf       	out	0x3d, r28	; 61

000020ae <.Loc.27>:
    uint16_t duration;

    // Trigger pulse
    PORTH |= (1 << US1_TRIG_PIN);
    20ae:	82 e0       	ldi	r24, 0x02	; 2
    20b0:	91 e0       	ldi	r25, 0x01	; 1
    20b2:	dc 01       	movw	r26, r24
    20b4:	2c 91       	ld	r18, X
    20b6:	82 e0       	ldi	r24, 0x02	; 2
    20b8:	91 e0       	ldi	r25, 0x01	; 1

000020ba <.Loc.28>:
    20ba:	21 60       	ori	r18, 0x01	; 1
    20bc:	fc 01       	movw	r30, r24
    20be:	20 83       	st	Z, r18
    20c0:	80 e0       	ldi	r24, 0x00	; 0
    20c2:	90 e0       	ldi	r25, 0x00	; 0
    20c4:	a0 e2       	ldi	r26, 0x20	; 32
    20c6:	b1 e4       	ldi	r27, 0x41	; 65
    20c8:	8f 83       	std	Y+7, r24	; 0x07
    20ca:	98 87       	std	Y+8, r25	; 0x08
    20cc:	a9 87       	std	Y+9, r26	; 0x09
    20ce:	ba 87       	std	Y+10, r27	; 0x0a

000020d0 <.LBB56>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    20d0:	2b ea       	ldi	r18, 0xAB	; 171
    20d2:	3a ea       	ldi	r19, 0xAA	; 170
    20d4:	4a ea       	ldi	r20, 0xAA	; 170
    20d6:	50 e4       	ldi	r21, 0x40	; 64
    20d8:	6f 81       	ldd	r22, Y+7	; 0x07
    20da:	78 85       	ldd	r23, Y+8	; 0x08
    20dc:	89 85       	ldd	r24, Y+9	; 0x09
    20de:	9a 85       	ldd	r25, Y+10	; 0x0a
    20e0:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    20e4:	6f ab       	std	Y+55, r22	; 0x37
    20e6:	78 af       	std	Y+56, r23	; 0x38
    20e8:	89 af       	std	Y+57, r24	; 0x39
    20ea:	9a af       	std	Y+58, r25	; 0x3a
    20ec:	2f a9       	ldd	r18, Y+55	; 0x37
    20ee:	38 ad       	ldd	r19, Y+56	; 0x38
    20f0:	49 ad       	ldd	r20, Y+57	; 0x39
    20f2:	5a ad       	ldd	r21, Y+58	; 0x3a
    20f4:	2b 87       	std	Y+11, r18	; 0x0b
    20f6:	3c 87       	std	Y+12, r19	; 0x0c
    20f8:	4d 87       	std	Y+13, r20	; 0x0d
    20fa:	5e 87       	std	Y+14, r21	; 0x0e

000020fc <.Loc.30>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	30 e0       	ldi	r19, 0x00	; 0
    2100:	40 e8       	ldi	r20, 0x80	; 128
    2102:	50 e4       	ldi	r21, 0x40	; 64
    2104:	6f 81       	ldd	r22, Y+7	; 0x07
    2106:	78 85       	ldd	r23, Y+8	; 0x08
    2108:	89 85       	ldd	r24, Y+9	; 0x09
    210a:	9a 85       	ldd	r25, Y+10	; 0x0a
    210c:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    2110:	6b af       	std	Y+59, r22	; 0x3b
    2112:	7c af       	std	Y+60, r23	; 0x3c
    2114:	8d af       	std	Y+61, r24	; 0x3d
    2116:	9e af       	std	Y+62, r25	; 0x3e
    2118:	8b ad       	ldd	r24, Y+59	; 0x3b
    211a:	9c ad       	ldd	r25, Y+60	; 0x3c
    211c:	ad ad       	ldd	r26, Y+61	; 0x3d
    211e:	be ad       	ldd	r27, Y+62	; 0x3e
    2120:	8f 87       	std	Y+15, r24	; 0x0f
    2122:	98 8b       	std	Y+16, r25	; 0x10
    2124:	a9 8b       	std	Y+17, r26	; 0x11
    2126:	ba 8b       	std	Y+18, r27	; 0x12

00002128 <.Loc.31>:
	if (__tmp < 1.0)
    2128:	20 e0       	ldi	r18, 0x00	; 0
    212a:	30 e0       	ldi	r19, 0x00	; 0
    212c:	40 e8       	ldi	r20, 0x80	; 128
    212e:	5f e3       	ldi	r21, 0x3F	; 63
    2130:	6b 85       	ldd	r22, Y+11	; 0x0b
    2132:	7c 85       	ldd	r23, Y+12	; 0x0c
    2134:	8d 85       	ldd	r24, Y+13	; 0x0d
    2136:	9e 85       	ldd	r25, Y+14	; 0x0e
    2138:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    213c:	88 23       	and	r24, r24
    213e:	1c f4       	brge	.+6      	; 0x2146 <.L29>

00002140 <.Loc.32>:
		__ticks = 1;
    2140:	81 e0       	ldi	r24, 0x01	; 1
    2142:	8b 8b       	std	Y+19, r24	; 0x13
    2144:	fb c0       	rjmp	.+502    	; 0x233c <.L5>

00002146 <.L29>:
	else if (__tmp2 > 65535)
    2146:	20 e0       	ldi	r18, 0x00	; 0
    2148:	3f ef       	ldi	r19, 0xFF	; 255
    214a:	4f e7       	ldi	r20, 0x7F	; 127
    214c:	57 e4       	ldi	r21, 0x47	; 71
    214e:	6f 85       	ldd	r22, Y+15	; 0x0f
    2150:	78 89       	ldd	r23, Y+16	; 0x10
    2152:	89 89       	ldd	r24, Y+17	; 0x11
    2154:	9a 89       	ldd	r25, Y+18	; 0x12
    2156:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    215a:	88 23       	and	r24, r24
    215c:	09 f0       	breq	.+2      	; 0x2160 <L0^A>

0000215e <L0^A>:
    215e:	0c f4       	brge	.+2      	; 0x2162 <.Loc.34>

00002160 <L0^A>:
    2160:	b2 c0       	rjmp	.+356    	; 0x22c6 <.L30>

00002162 <.Loc.34>:
	{
		_delay_ms(__us / 1000.0);
    2162:	20 e0       	ldi	r18, 0x00	; 0
    2164:	30 e0       	ldi	r19, 0x00	; 0
    2166:	4a e7       	ldi	r20, 0x7A	; 122
    2168:	54 e4       	ldi	r21, 0x44	; 68
    216a:	6f 81       	ldd	r22, Y+7	; 0x07
    216c:	78 85       	ldd	r23, Y+8	; 0x08
    216e:	89 85       	ldd	r24, Y+9	; 0x09
    2170:	9a 85       	ldd	r25, Y+10	; 0x0a
    2172:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    2176:	23 96       	adiw	r28, 0x03	; 3
    2178:	6c af       	std	Y+60, r22	; 0x3c
    217a:	7d af       	std	Y+61, r23	; 0x3d
    217c:	8e af       	std	Y+62, r24	; 0x3e
    217e:	9f af       	std	Y+63, r25	; 0x3f
    2180:	23 97       	sbiw	r28, 0x03	; 3
    2182:	23 96       	adiw	r28, 0x03	; 3
    2184:	8c ad       	ldd	r24, Y+60	; 0x3c
    2186:	9d ad       	ldd	r25, Y+61	; 0x3d
    2188:	ae ad       	ldd	r26, Y+62	; 0x3e
    218a:	bf ad       	ldd	r27, Y+63	; 0x3f
    218c:	23 97       	sbiw	r28, 0x03	; 3
    218e:	8c 8b       	std	Y+20, r24	; 0x14
    2190:	9d 8b       	std	Y+21, r25	; 0x15
    2192:	ae 8b       	std	Y+22, r26	; 0x16
    2194:	bf 8b       	std	Y+23, r27	; 0x17

00002196 <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2196:	20 e0       	ldi	r18, 0x00	; 0
    2198:	30 e0       	ldi	r19, 0x00	; 0
    219a:	4a e7       	ldi	r20, 0x7A	; 122
    219c:	55 e4       	ldi	r21, 0x45	; 69
    219e:	6c 89       	ldd	r22, Y+20	; 0x14
    21a0:	7d 89       	ldd	r23, Y+21	; 0x15
    21a2:	8e 89       	ldd	r24, Y+22	; 0x16
    21a4:	9f 89       	ldd	r25, Y+23	; 0x17
    21a6:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    21aa:	27 96       	adiw	r28, 0x07	; 7
    21ac:	6c af       	std	Y+60, r22	; 0x3c
    21ae:	7d af       	std	Y+61, r23	; 0x3d
    21b0:	8e af       	std	Y+62, r24	; 0x3e
    21b2:	9f af       	std	Y+63, r25	; 0x3f
    21b4:	27 97       	sbiw	r28, 0x07	; 7
    21b6:	27 96       	adiw	r28, 0x07	; 7
    21b8:	2c ad       	ldd	r18, Y+60	; 0x3c
    21ba:	3d ad       	ldd	r19, Y+61	; 0x3d
    21bc:	4e ad       	ldd	r20, Y+62	; 0x3e
    21be:	5f ad       	ldd	r21, Y+63	; 0x3f
    21c0:	27 97       	sbiw	r28, 0x07	; 7
    21c2:	28 8f       	std	Y+24, r18	; 0x18
    21c4:	39 8f       	std	Y+25, r19	; 0x19
    21c6:	4a 8f       	std	Y+26, r20	; 0x1a
    21c8:	5b 8f       	std	Y+27, r21	; 0x1b

000021ca <.Loc.36>:
	if (__tmp < 1.0)
    21ca:	20 e0       	ldi	r18, 0x00	; 0
    21cc:	30 e0       	ldi	r19, 0x00	; 0
    21ce:	40 e8       	ldi	r20, 0x80	; 128
    21d0:	5f e3       	ldi	r21, 0x3F	; 63
    21d2:	68 8d       	ldd	r22, Y+24	; 0x18
    21d4:	79 8d       	ldd	r23, Y+25	; 0x19
    21d6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    21d8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    21da:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    21de:	88 23       	and	r24, r24
    21e0:	2c f4       	brge	.+10     	; 0x21ec <.L31>

000021e2 <.Loc.37>:
		__ticks = 1;
    21e2:	81 e0       	ldi	r24, 0x01	; 1
    21e4:	90 e0       	ldi	r25, 0x00	; 0
    21e6:	9d 8f       	std	Y+29, r25	; 0x1d
    21e8:	8c 8f       	std	Y+28, r24	; 0x1c
    21ea:	62 c0       	rjmp	.+196    	; 0x22b0 <.L10>

000021ec <.L31>:
	else if (__tmp > 65535)
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	3f ef       	ldi	r19, 0xFF	; 255
    21f0:	4f e7       	ldi	r20, 0x7F	; 127
    21f2:	57 e4       	ldi	r21, 0x47	; 71
    21f4:	68 8d       	ldd	r22, Y+24	; 0x18
    21f6:	79 8d       	ldd	r23, Y+25	; 0x19
    21f8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    21fa:	9b 8d       	ldd	r25, Y+27	; 0x1b
    21fc:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    2200:	88 23       	and	r24, r24
    2202:	09 f0       	breq	.+2      	; 0x2206 <L0^A>

00002204 <L0^A>:
    2204:	0c f4       	brge	.+2      	; 0x2208 <.Loc.39>

00002206 <L0^A>:
    2206:	42 c0       	rjmp	.+132    	; 0x228c <.L32>

00002208 <.Loc.39>:
		__ticks = (uint16_t) (__ms * 10.0);
    2208:	20 e0       	ldi	r18, 0x00	; 0
    220a:	30 e0       	ldi	r19, 0x00	; 0
    220c:	40 e2       	ldi	r20, 0x20	; 32
    220e:	51 e4       	ldi	r21, 0x41	; 65
    2210:	6c 89       	ldd	r22, Y+20	; 0x14
    2212:	7d 89       	ldd	r23, Y+21	; 0x15
    2214:	8e 89       	ldd	r24, Y+22	; 0x16
    2216:	9f 89       	ldd	r25, Y+23	; 0x17
    2218:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    221c:	2b 96       	adiw	r28, 0x0b	; 11
    221e:	6c af       	std	Y+60, r22	; 0x3c
    2220:	7d af       	std	Y+61, r23	; 0x3d
    2222:	8e af       	std	Y+62, r24	; 0x3e
    2224:	9f af       	std	Y+63, r25	; 0x3f
    2226:	2b 97       	sbiw	r28, 0x0b	; 11
    2228:	2b 96       	adiw	r28, 0x0b	; 11
    222a:	8c ad       	ldd	r24, Y+60	; 0x3c
    222c:	9d ad       	ldd	r25, Y+61	; 0x3d
    222e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2230:	bf ad       	ldd	r27, Y+63	; 0x3f
    2232:	2b 97       	sbiw	r28, 0x0b	; 11
    2234:	8f a7       	std	Y+47, r24	; 0x2f
    2236:	98 ab       	std	Y+48, r25	; 0x30
    2238:	a9 ab       	std	Y+49, r26	; 0x31
    223a:	ba ab       	std	Y+50, r27	; 0x32

0000223c <.Loc.40>:
    223c:	6f a5       	ldd	r22, Y+47	; 0x2f
    223e:	78 a9       	ldd	r23, Y+48	; 0x30
    2240:	89 a9       	ldd	r24, Y+49	; 0x31
    2242:	9a a9       	ldd	r25, Y+50	; 0x32
    2244:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2248:	2f 96       	adiw	r28, 0x0f	; 15
    224a:	6c af       	std	Y+60, r22	; 0x3c
    224c:	7d af       	std	Y+61, r23	; 0x3d
    224e:	8e af       	std	Y+62, r24	; 0x3e
    2250:	9f af       	std	Y+63, r25	; 0x3f
    2252:	2f 97       	sbiw	r28, 0x0f	; 15
    2254:	2d 96       	adiw	r28, 0x0d	; 13
    2256:	ae ad       	ldd	r26, Y+62	; 0x3e
    2258:	bf ad       	ldd	r27, Y+63	; 0x3f
    225a:	2d 97       	sbiw	r28, 0x0d	; 13
    225c:	bd 8f       	std	Y+29, r27	; 0x1d
    225e:	ac 8f       	std	Y+28, r26	; 0x1c

00002260 <.Loc.41>:
		while(__ticks)
    2260:	10 c0       	rjmp	.+32     	; 0x2282 <.L13>

00002262 <.L14>:
    2262:	80 e9       	ldi	r24, 0x90	; 144
    2264:	91 e0       	ldi	r25, 0x01	; 1
    2266:	9f 8f       	std	Y+31, r25	; 0x1f
    2268:	8e 8f       	std	Y+30, r24	; 0x1e

0000226a <.LBB60>:
    226a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    226c:	9f 8d       	ldd	r25, Y+31	; 0x1f

0000226e <.L1^B1>:
    226e:	01 97       	sbiw	r24, 0x01	; 1
    2270:	f1 f7       	brne	.-4      	; 0x226e <.L1^B1>
    2272:	9f 8f       	std	Y+31, r25	; 0x1f
    2274:	8e 8f       	std	Y+30, r24	; 0x1e

00002276 <.Loc.43>:
	...

00002278 <.LBE60>:
			__ticks --;
    2278:	8c 8d       	ldd	r24, Y+28	; 0x1c
    227a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    227c:	01 97       	sbiw	r24, 0x01	; 1
    227e:	9d 8f       	std	Y+29, r25	; 0x1d
    2280:	8c 8f       	std	Y+28, r24	; 0x1c

00002282 <.L13>:
		while(__ticks)
    2282:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2284:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2286:	00 97       	sbiw	r24, 0x00	; 0
    2288:	61 f7       	brne	.-40     	; 0x2262 <.L14>

0000228a <.Loc.46>:
		return;
    228a:	58 c0       	rjmp	.+176    	; 0x233c <.L5>

0000228c <.L32>:
		__ticks = (uint16_t)__tmp;
    228c:	68 8d       	ldd	r22, Y+24	; 0x18
    228e:	79 8d       	ldd	r23, Y+25	; 0x19
    2290:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2292:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2294:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2298:	63 96       	adiw	r28, 0x13	; 19
    229a:	6c af       	std	Y+60, r22	; 0x3c
    229c:	7d af       	std	Y+61, r23	; 0x3d
    229e:	8e af       	std	Y+62, r24	; 0x3e
    22a0:	9f af       	std	Y+63, r25	; 0x3f
    22a2:	63 97       	sbiw	r28, 0x13	; 19
    22a4:	61 96       	adiw	r28, 0x11	; 17
    22a6:	ee ad       	ldd	r30, Y+62	; 0x3e
    22a8:	ff ad       	ldd	r31, Y+63	; 0x3f
    22aa:	61 97       	sbiw	r28, 0x11	; 17
    22ac:	fd 8f       	std	Y+29, r31	; 0x1d
    22ae:	ec 8f       	std	Y+28, r30	; 0x1c

000022b0 <.L10>:
    22b0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    22b2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    22b4:	99 a3       	std	Y+33, r25	; 0x21
    22b6:	88 a3       	std	Y+32, r24	; 0x20

000022b8 <.LBB62>:
    22b8:	88 a1       	ldd	r24, Y+32	; 0x20
    22ba:	99 a1       	ldd	r25, Y+33	; 0x21

000022bc <.L1^B2>:
    22bc:	01 97       	sbiw	r24, 0x01	; 1
    22be:	f1 f7       	brne	.-4      	; 0x22bc <.L1^B2>
    22c0:	99 a3       	std	Y+33, r25	; 0x21
    22c2:	88 a3       	std	Y+32, r24	; 0x20

000022c4 <.Loc.49>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    22c4:	3b c0       	rjmp	.+118    	; 0x233c <.L5>

000022c6 <.L30>:
	}
	else if (__tmp > 255)
    22c6:	20 e0       	ldi	r18, 0x00	; 0
    22c8:	30 e0       	ldi	r19, 0x00	; 0
    22ca:	4f e7       	ldi	r20, 0x7F	; 127
    22cc:	53 e4       	ldi	r21, 0x43	; 67
    22ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    22d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    22d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    22d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    22d6:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    22da:	88 23       	and	r24, r24
    22dc:	f9 f0       	breq	.+62     	; 0x231c <.L33>
    22de:	f4 f0       	brlt	.+60     	; 0x231c <.L33>

000022e0 <.LBB64>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    22e0:	6f 85       	ldd	r22, Y+15	; 0x0f
    22e2:	78 89       	ldd	r23, Y+16	; 0x10
    22e4:	89 89       	ldd	r24, Y+17	; 0x11
    22e6:	9a 89       	ldd	r25, Y+18	; 0x12
    22e8:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    22ec:	67 96       	adiw	r28, 0x17	; 23
    22ee:	6c af       	std	Y+60, r22	; 0x3c
    22f0:	7d af       	std	Y+61, r23	; 0x3d
    22f2:	8e af       	std	Y+62, r24	; 0x3e
    22f4:	9f af       	std	Y+63, r25	; 0x3f
    22f6:	67 97       	sbiw	r28, 0x17	; 23
    22f8:	65 96       	adiw	r28, 0x15	; 21
    22fa:	2e ad       	ldd	r18, Y+62	; 0x3e
    22fc:	3f ad       	ldd	r19, Y+63	; 0x3f
    22fe:	65 97       	sbiw	r28, 0x15	; 21
    2300:	3b a3       	std	Y+35, r19	; 0x23
    2302:	2a a3       	std	Y+34, r18	; 0x22
    2304:	8a a1       	ldd	r24, Y+34	; 0x22
    2306:	9b a1       	ldd	r25, Y+35	; 0x23
    2308:	9d a3       	std	Y+37, r25	; 0x25
    230a:	8c a3       	std	Y+36, r24	; 0x24

0000230c <.LBB65>:
	__asm__ volatile (
    230c:	8c a1       	ldd	r24, Y+36	; 0x24
    230e:	9d a1       	ldd	r25, Y+37	; 0x25

00002310 <.L1^B3>:
    2310:	01 97       	sbiw	r24, 0x01	; 1
    2312:	f1 f7       	brne	.-4      	; 0x2310 <.L1^B3>
    2314:	9d a3       	std	Y+37, r25	; 0x25
    2316:	8c a3       	std	Y+36, r24	; 0x24

00002318 <.Loc.53>:
	...

0000231a <.LBE65>:
		_delay_loop_2(__ticks);
		return;
    231a:	17 c0       	rjmp	.+46     	; 0x234a <.L18>

0000231c <.L33>:
	}
	else
		__ticks = (uint8_t)__tmp;
    231c:	6b 85       	ldd	r22, Y+11	; 0x0b
    231e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2320:	8d 85       	ldd	r24, Y+13	; 0x0d
    2322:	9e 85       	ldd	r25, Y+14	; 0x0e
    2324:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2328:	6b 96       	adiw	r28, 0x1b	; 27
    232a:	6c af       	std	Y+60, r22	; 0x3c
    232c:	7d af       	std	Y+61, r23	; 0x3d
    232e:	8e af       	std	Y+62, r24	; 0x3e
    2330:	9f af       	std	Y+63, r25	; 0x3f
    2332:	6b 97       	sbiw	r28, 0x1b	; 27
    2334:	68 96       	adiw	r28, 0x18	; 24
    2336:	3f ad       	ldd	r19, Y+63	; 0x3f
    2338:	68 97       	sbiw	r28, 0x18	; 24
    233a:	3b 8b       	std	Y+19, r19	; 0x13

0000233c <.L5>:
    233c:	8b 89       	ldd	r24, Y+19	; 0x13
    233e:	8e a3       	std	Y+38, r24	; 0x26

00002340 <.LBB67>:
	__asm__ volatile (
    2340:	8e a1       	ldd	r24, Y+38	; 0x26

00002342 <.L1^B4>:
    2342:	8a 95       	dec	r24
    2344:	f1 f7       	brne	.-4      	; 0x2342 <.L1^B4>
    2346:	8e a3       	std	Y+38, r24	; 0x26

00002348 <.Loc.57>:
	...

0000234a <.L18>:
    _delay_us(10);
    PORTH &= ~(1 << US1_TRIG_PIN);
    234a:	82 e0       	ldi	r24, 0x02	; 2
    234c:	91 e0       	ldi	r25, 0x01	; 1
    234e:	dc 01       	movw	r26, r24
    2350:	2c 91       	ld	r18, X

00002352 <.Loc.59>:
    2352:	82 e0       	ldi	r24, 0x02	; 2
    2354:	91 e0       	ldi	r25, 0x01	; 1

00002356 <.Loc.60>:
    2356:	2e 7f       	andi	r18, 0xFE	; 254
    2358:	fc 01       	movw	r30, r24
    235a:	20 83       	st	Z, r18

0000235c <.Loc.61>:
	...

0000235e <.L19>:

    // Wait for echo pin to go high
    while (!(PINH & (1 << US1_ECHO_PIN)));
    235e:	80 e0       	ldi	r24, 0x00	; 0
    2360:	91 e0       	ldi	r25, 0x01	; 1
    2362:	dc 01       	movw	r26, r24
    2364:	8c 91       	ld	r24, X

00002366 <.Loc.63>:
    2366:	88 2f       	mov	r24, r24
    2368:	90 e0       	ldi	r25, 0x00	; 0
    236a:	82 70       	andi	r24, 0x02	; 2
    236c:	99 27       	eor	r25, r25

0000236e <.Loc.64>:
    236e:	00 97       	sbiw	r24, 0x00	; 0
    2370:	b1 f3       	breq	.-20     	; 0x235e <.L19>

00002372 <.Loc.65>:

    // Start timer
    TCNT1 = 0;
    2372:	84 e8       	ldi	r24, 0x84	; 132
    2374:	90 e0       	ldi	r25, 0x00	; 0

00002376 <.Loc.66>:
    2376:	fc 01       	movw	r30, r24
    2378:	11 82       	std	Z+1, r1	; 0x01
    237a:	10 82       	st	Z, r1

0000237c <.Loc.67>:
    TCCR1B |= (1 << CS11); // Prescaler of 8
    237c:	81 e8       	ldi	r24, 0x81	; 129
    237e:	90 e0       	ldi	r25, 0x00	; 0
    2380:	dc 01       	movw	r26, r24
    2382:	2c 91       	ld	r18, X
    2384:	81 e8       	ldi	r24, 0x81	; 129
    2386:	90 e0       	ldi	r25, 0x00	; 0

00002388 <.Loc.68>:
    2388:	22 60       	ori	r18, 0x02	; 2
    238a:	fc 01       	movw	r30, r24
    238c:	20 83       	st	Z, r18

0000238e <.Loc.69>:

    // Wait for echo pin to go low
    while (PINH & (1 << US1_ECHO_PIN)) {
    238e:	0b c0       	rjmp	.+22     	; 0x23a6 <.L20>

00002390 <.L22>:
        if (TCNT1 > 60000) {
    2390:	84 e8       	ldi	r24, 0x84	; 132
    2392:	90 e0       	ldi	r25, 0x00	; 0
    2394:	dc 01       	movw	r26, r24
    2396:	8d 91       	ld	r24, X+
    2398:	9c 91       	ld	r25, X
    239a:	11 97       	sbiw	r26, 0x01	; 1

0000239c <.Loc.71>:
    239c:	80 36       	cpi	r24, 0x60	; 96
    239e:	ba ee       	ldi	r27, 0xEA	; 234
    23a0:	9b 07       	cpc	r25, r27
    23a2:	09 f0       	breq	.+2      	; 0x23a6 <.L20>

000023a4 <L0^A>:
    23a4:	58 f4       	brcc	.+22     	; 0x23bc <.L34>

000023a6 <.L20>:
    while (PINH & (1 << US1_ECHO_PIN)) {
    23a6:	80 e0       	ldi	r24, 0x00	; 0
    23a8:	91 e0       	ldi	r25, 0x01	; 1
    23aa:	fc 01       	movw	r30, r24
    23ac:	80 81       	ld	r24, Z

000023ae <.Loc.73>:
    23ae:	88 2f       	mov	r24, r24
    23b0:	90 e0       	ldi	r25, 0x00	; 0
    23b2:	82 70       	andi	r24, 0x02	; 2
    23b4:	99 27       	eor	r25, r25

000023b6 <.Loc.74>:
    23b6:	00 97       	sbiw	r24, 0x00	; 0
    23b8:	59 f7       	brne	.-42     	; 0x2390 <.L22>
    23ba:	01 c0       	rjmp	.+2      	; 0x23be <.L21>

000023bc <.L34>:
	...

000023be <.L21>:
            break;
        }
    }

    // Stop timer
    TCCR1B &= ~(1 << CS11);
    23be:	81 e8       	ldi	r24, 0x81	; 129
    23c0:	90 e0       	ldi	r25, 0x00	; 0
    23c2:	dc 01       	movw	r26, r24
    23c4:	2c 91       	ld	r18, X

000023c6 <.Loc.77>:
    23c6:	81 e8       	ldi	r24, 0x81	; 129
    23c8:	90 e0       	ldi	r25, 0x00	; 0

000023ca <.Loc.78>:
    23ca:	2d 7f       	andi	r18, 0xFD	; 253
    23cc:	fc 01       	movw	r30, r24
    23ce:	20 83       	st	Z, r18

000023d0 <.Loc.79>:

    // Read timer value
    duration = TCNT1;
    23d0:	84 e8       	ldi	r24, 0x84	; 132
    23d2:	90 e0       	ldi	r25, 0x00	; 0

000023d4 <.Loc.80>:
    23d4:	dc 01       	movw	r26, r24
    23d6:	8d 91       	ld	r24, X+
    23d8:	9c 91       	ld	r25, X
    23da:	9a 83       	std	Y+2, r25	; 0x02
    23dc:	89 83       	std	Y+1, r24	; 0x01

000023de <.Loc.81>:

    // Convert duration to distance in cm
    float distance = duration / 58.0 / 2.0;
    23de:	89 81       	ldd	r24, Y+1	; 0x01
    23e0:	9a 81       	ldd	r25, Y+2	; 0x02
    23e2:	9c 01       	movw	r18, r24
    23e4:	40 e0       	ldi	r20, 0x00	; 0
    23e6:	50 e0       	ldi	r21, 0x00	; 0
    23e8:	6f 96       	adiw	r28, 0x1f	; 31
    23ea:	2c af       	std	Y+60, r18	; 0x3c
    23ec:	3d af       	std	Y+61, r19	; 0x3d
    23ee:	4e af       	std	Y+62, r20	; 0x3e
    23f0:	5f af       	std	Y+63, r21	; 0x3f
    23f2:	6f 97       	sbiw	r28, 0x1f	; 31
    23f4:	6f 96       	adiw	r28, 0x1f	; 31
    23f6:	6c ad       	ldd	r22, Y+60	; 0x3c
    23f8:	7d ad       	ldd	r23, Y+61	; 0x3d
    23fa:	8e ad       	ldd	r24, Y+62	; 0x3e
    23fc:	9f ad       	ldd	r25, Y+63	; 0x3f
    23fe:	6f 97       	sbiw	r28, 0x1f	; 31
    2400:	0e 94 6b 17 	call	0x2ed6	; 0x2ed6 <__floatunsisf>
    2404:	6f a3       	std	Y+39, r22	; 0x27
    2406:	78 a7       	std	Y+40, r23	; 0x28
    2408:	89 a7       	std	Y+41, r24	; 0x29
    240a:	9a a7       	std	Y+42, r25	; 0x2a
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	48 e6       	ldi	r20, 0x68	; 104
    2412:	52 e4       	ldi	r21, 0x42	; 66
    2414:	6f a1       	ldd	r22, Y+39	; 0x27
    2416:	78 a5       	ldd	r23, Y+40	; 0x28
    2418:	89 a5       	ldd	r24, Y+41	; 0x29
    241a:	9a a5       	ldd	r25, Y+42	; 0x2a
    241c:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    2420:	a3 96       	adiw	r28, 0x23	; 35
    2422:	6c af       	std	Y+60, r22	; 0x3c
    2424:	7d af       	std	Y+61, r23	; 0x3d
    2426:	8e af       	std	Y+62, r24	; 0x3e
    2428:	9f af       	std	Y+63, r25	; 0x3f
    242a:	a3 97       	sbiw	r28, 0x23	; 35
    242c:	a3 96       	adiw	r28, 0x23	; 35
    242e:	8c ad       	ldd	r24, Y+60	; 0x3c
    2430:	9d ad       	ldd	r25, Y+61	; 0x3d
    2432:	ae ad       	ldd	r26, Y+62	; 0x3e
    2434:	bf ad       	ldd	r27, Y+63	; 0x3f
    2436:	a3 97       	sbiw	r28, 0x23	; 35
    2438:	8b a7       	std	Y+43, r24	; 0x2b
    243a:	9c a7       	std	Y+44, r25	; 0x2c
    243c:	ad a7       	std	Y+45, r26	; 0x2d
    243e:	be a7       	std	Y+46, r27	; 0x2e

00002440 <.Loc.82>:
    2440:	20 e0       	ldi	r18, 0x00	; 0
    2442:	30 e0       	ldi	r19, 0x00	; 0
    2444:	40 e0       	ldi	r20, 0x00	; 0
    2446:	50 e4       	ldi	r21, 0x40	; 64
    2448:	6b a5       	ldd	r22, Y+43	; 0x2b
    244a:	7c a5       	ldd	r23, Y+44	; 0x2c
    244c:	8d a5       	ldd	r24, Y+45	; 0x2d
    244e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2450:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    2454:	a7 96       	adiw	r28, 0x27	; 39
    2456:	6c af       	std	Y+60, r22	; 0x3c
    2458:	7d af       	std	Y+61, r23	; 0x3d
    245a:	8e af       	std	Y+62, r24	; 0x3e
    245c:	9f af       	std	Y+63, r25	; 0x3f
    245e:	a7 97       	sbiw	r28, 0x27	; 39
    2460:	a7 96       	adiw	r28, 0x27	; 39
    2462:	2c ad       	ldd	r18, Y+60	; 0x3c
    2464:	3d ad       	ldd	r19, Y+61	; 0x3d
    2466:	4e ad       	ldd	r20, Y+62	; 0x3e
    2468:	5f ad       	ldd	r21, Y+63	; 0x3f
    246a:	a7 97       	sbiw	r28, 0x27	; 39
    246c:	2b 83       	std	Y+3, r18	; 0x03
    246e:	3c 83       	std	Y+4, r19	; 0x04
    2470:	4d 83       	std	Y+5, r20	; 0x05
    2472:	5e 83       	std	Y+6, r21	; 0x06

00002474 <.Loc.83>:

    return distance;
    2474:	8b 81       	ldd	r24, Y+3	; 0x03
    2476:	9c 81       	ldd	r25, Y+4	; 0x04
    2478:	ad 81       	ldd	r26, Y+5	; 0x05
    247a:	be 81       	ldd	r27, Y+6	; 0x06
    247c:	8b ab       	std	Y+51, r24	; 0x33
    247e:	9c ab       	std	Y+52, r25	; 0x34
    2480:	ad ab       	std	Y+53, r26	; 0x35
    2482:	be ab       	std	Y+54, r27	; 0x36

00002484 <.Loc.84>:
}
    2484:	6b a9       	ldd	r22, Y+51	; 0x33
    2486:	7c a9       	ldd	r23, Y+52	; 0x34
    2488:	8d a9       	ldd	r24, Y+53	; 0x35
    248a:	9e a9       	ldd	r25, Y+54	; 0x36
    248c:	ca 59       	subi	r28, 0x9A	; 154
    248e:	df 4f       	sbci	r29, 0xFF	; 255
    2490:	0f b6       	in	r0, 0x3f	; 63
    2492:	f8 94       	cli
    2494:	de bf       	out	0x3e, r29	; 62
    2496:	0f be       	out	0x3f, r0	; 63
    2498:	cd bf       	out	0x3d, r28	; 61
    249a:	df 91       	pop	r29
    249c:	cf 91       	pop	r28
    249e:	08 95       	ret

000024a0 <measure_distance2>:

// Measure distance with sensor 2
float measure_distance2(void) {
    24a0:	cf 93       	push	r28
    24a2:	df 93       	push	r29
    24a4:	cd b7       	in	r28, 0x3d	; 61
    24a6:	de b7       	in	r29, 0x3e	; 62
    24a8:	c6 56       	subi	r28, 0x66	; 102
    24aa:	d1 09       	sbc	r29, r1
    24ac:	0f b6       	in	r0, 0x3f	; 63
    24ae:	f8 94       	cli
    24b0:	de bf       	out	0x3e, r29	; 62
    24b2:	0f be       	out	0x3f, r0	; 63
    24b4:	cd bf       	out	0x3d, r28	; 61

000024b6 <.Loc.86>:
    uint16_t duration;

    // Trigger pulse
    PORTJ |= (1 << US2_TRIG_PIN);
    24b6:	85 e0       	ldi	r24, 0x05	; 5
    24b8:	91 e0       	ldi	r25, 0x01	; 1
    24ba:	dc 01       	movw	r26, r24
    24bc:	2c 91       	ld	r18, X
    24be:	85 e0       	ldi	r24, 0x05	; 5
    24c0:	91 e0       	ldi	r25, 0x01	; 1

000024c2 <.Loc.87>:
    24c2:	22 60       	ori	r18, 0x02	; 2
    24c4:	fc 01       	movw	r30, r24
    24c6:	20 83       	st	Z, r18
    24c8:	80 e0       	ldi	r24, 0x00	; 0
    24ca:	90 e0       	ldi	r25, 0x00	; 0
    24cc:	a0 e2       	ldi	r26, 0x20	; 32
    24ce:	b1 e4       	ldi	r27, 0x41	; 65
    24d0:	8f 83       	std	Y+7, r24	; 0x07
    24d2:	98 87       	std	Y+8, r25	; 0x08
    24d4:	a9 87       	std	Y+9, r26	; 0x09
    24d6:	ba 87       	std	Y+10, r27	; 0x0a

000024d8 <.LBB69>:
	__tmp = ((F_CPU) / 3e6) * __us;
    24d8:	2b ea       	ldi	r18, 0xAB	; 171
    24da:	3a ea       	ldi	r19, 0xAA	; 170
    24dc:	4a ea       	ldi	r20, 0xAA	; 170
    24de:	50 e4       	ldi	r21, 0x40	; 64
    24e0:	6f 81       	ldd	r22, Y+7	; 0x07
    24e2:	78 85       	ldd	r23, Y+8	; 0x08
    24e4:	89 85       	ldd	r24, Y+9	; 0x09
    24e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    24e8:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    24ec:	6f ab       	std	Y+55, r22	; 0x37
    24ee:	78 af       	std	Y+56, r23	; 0x38
    24f0:	89 af       	std	Y+57, r24	; 0x39
    24f2:	9a af       	std	Y+58, r25	; 0x3a
    24f4:	2f a9       	ldd	r18, Y+55	; 0x37
    24f6:	38 ad       	ldd	r19, Y+56	; 0x38
    24f8:	49 ad       	ldd	r20, Y+57	; 0x39
    24fa:	5a ad       	ldd	r21, Y+58	; 0x3a
    24fc:	2b 87       	std	Y+11, r18	; 0x0b
    24fe:	3c 87       	std	Y+12, r19	; 0x0c
    2500:	4d 87       	std	Y+13, r20	; 0x0d
    2502:	5e 87       	std	Y+14, r21	; 0x0e

00002504 <.Loc.89>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    2504:	20 e0       	ldi	r18, 0x00	; 0
    2506:	30 e0       	ldi	r19, 0x00	; 0
    2508:	40 e8       	ldi	r20, 0x80	; 128
    250a:	50 e4       	ldi	r21, 0x40	; 64
    250c:	6f 81       	ldd	r22, Y+7	; 0x07
    250e:	78 85       	ldd	r23, Y+8	; 0x08
    2510:	89 85       	ldd	r24, Y+9	; 0x09
    2512:	9a 85       	ldd	r25, Y+10	; 0x0a
    2514:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    2518:	6b af       	std	Y+59, r22	; 0x3b
    251a:	7c af       	std	Y+60, r23	; 0x3c
    251c:	8d af       	std	Y+61, r24	; 0x3d
    251e:	9e af       	std	Y+62, r25	; 0x3e
    2520:	8b ad       	ldd	r24, Y+59	; 0x3b
    2522:	9c ad       	ldd	r25, Y+60	; 0x3c
    2524:	ad ad       	ldd	r26, Y+61	; 0x3d
    2526:	be ad       	ldd	r27, Y+62	; 0x3e
    2528:	8f 87       	std	Y+15, r24	; 0x0f
    252a:	98 8b       	std	Y+16, r25	; 0x10
    252c:	a9 8b       	std	Y+17, r26	; 0x11
    252e:	ba 8b       	std	Y+18, r27	; 0x12

00002530 <.Loc.90>:
	if (__tmp < 1.0)
    2530:	20 e0       	ldi	r18, 0x00	; 0
    2532:	30 e0       	ldi	r19, 0x00	; 0
    2534:	40 e8       	ldi	r20, 0x80	; 128
    2536:	5f e3       	ldi	r21, 0x3F	; 63
    2538:	6b 85       	ldd	r22, Y+11	; 0x0b
    253a:	7c 85       	ldd	r23, Y+12	; 0x0c
    253c:	8d 85       	ldd	r24, Y+13	; 0x0d
    253e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2540:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    2544:	88 23       	and	r24, r24
    2546:	1c f4       	brge	.+6      	; 0x254e <.L62>

00002548 <.Loc.91>:
		__ticks = 1;
    2548:	81 e0       	ldi	r24, 0x01	; 1
    254a:	8b 8b       	std	Y+19, r24	; 0x13
    254c:	fb c0       	rjmp	.+502    	; 0x2744 <.L38>

0000254e <.L62>:
	else if (__tmp2 > 65535)
    254e:	20 e0       	ldi	r18, 0x00	; 0
    2550:	3f ef       	ldi	r19, 0xFF	; 255
    2552:	4f e7       	ldi	r20, 0x7F	; 127
    2554:	57 e4       	ldi	r21, 0x47	; 71
    2556:	6f 85       	ldd	r22, Y+15	; 0x0f
    2558:	78 89       	ldd	r23, Y+16	; 0x10
    255a:	89 89       	ldd	r24, Y+17	; 0x11
    255c:	9a 89       	ldd	r25, Y+18	; 0x12
    255e:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    2562:	88 23       	and	r24, r24
    2564:	09 f0       	breq	.+2      	; 0x2568 <L0^A>

00002566 <L0^A>:
    2566:	0c f4       	brge	.+2      	; 0x256a <.Loc.93>

00002568 <L0^A>:
    2568:	b2 c0       	rjmp	.+356    	; 0x26ce <.L63>

0000256a <.Loc.93>:
		_delay_ms(__us / 1000.0);
    256a:	20 e0       	ldi	r18, 0x00	; 0
    256c:	30 e0       	ldi	r19, 0x00	; 0
    256e:	4a e7       	ldi	r20, 0x7A	; 122
    2570:	54 e4       	ldi	r21, 0x44	; 68
    2572:	6f 81       	ldd	r22, Y+7	; 0x07
    2574:	78 85       	ldd	r23, Y+8	; 0x08
    2576:	89 85       	ldd	r24, Y+9	; 0x09
    2578:	9a 85       	ldd	r25, Y+10	; 0x0a
    257a:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    257e:	23 96       	adiw	r28, 0x03	; 3
    2580:	6c af       	std	Y+60, r22	; 0x3c
    2582:	7d af       	std	Y+61, r23	; 0x3d
    2584:	8e af       	std	Y+62, r24	; 0x3e
    2586:	9f af       	std	Y+63, r25	; 0x3f
    2588:	23 97       	sbiw	r28, 0x03	; 3
    258a:	23 96       	adiw	r28, 0x03	; 3
    258c:	8c ad       	ldd	r24, Y+60	; 0x3c
    258e:	9d ad       	ldd	r25, Y+61	; 0x3d
    2590:	ae ad       	ldd	r26, Y+62	; 0x3e
    2592:	bf ad       	ldd	r27, Y+63	; 0x3f
    2594:	23 97       	sbiw	r28, 0x03	; 3
    2596:	8c 8b       	std	Y+20, r24	; 0x14
    2598:	9d 8b       	std	Y+21, r25	; 0x15
    259a:	ae 8b       	std	Y+22, r26	; 0x16
    259c:	bf 8b       	std	Y+23, r27	; 0x17

0000259e <.LBB71>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    259e:	20 e0       	ldi	r18, 0x00	; 0
    25a0:	30 e0       	ldi	r19, 0x00	; 0
    25a2:	4a e7       	ldi	r20, 0x7A	; 122
    25a4:	55 e4       	ldi	r21, 0x45	; 69
    25a6:	6c 89       	ldd	r22, Y+20	; 0x14
    25a8:	7d 89       	ldd	r23, Y+21	; 0x15
    25aa:	8e 89       	ldd	r24, Y+22	; 0x16
    25ac:	9f 89       	ldd	r25, Y+23	; 0x17
    25ae:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    25b2:	27 96       	adiw	r28, 0x07	; 7
    25b4:	6c af       	std	Y+60, r22	; 0x3c
    25b6:	7d af       	std	Y+61, r23	; 0x3d
    25b8:	8e af       	std	Y+62, r24	; 0x3e
    25ba:	9f af       	std	Y+63, r25	; 0x3f
    25bc:	27 97       	sbiw	r28, 0x07	; 7
    25be:	27 96       	adiw	r28, 0x07	; 7
    25c0:	2c ad       	ldd	r18, Y+60	; 0x3c
    25c2:	3d ad       	ldd	r19, Y+61	; 0x3d
    25c4:	4e ad       	ldd	r20, Y+62	; 0x3e
    25c6:	5f ad       	ldd	r21, Y+63	; 0x3f
    25c8:	27 97       	sbiw	r28, 0x07	; 7
    25ca:	28 8f       	std	Y+24, r18	; 0x18
    25cc:	39 8f       	std	Y+25, r19	; 0x19
    25ce:	4a 8f       	std	Y+26, r20	; 0x1a
    25d0:	5b 8f       	std	Y+27, r21	; 0x1b

000025d2 <.Loc.95>:
	if (__tmp < 1.0)
    25d2:	20 e0       	ldi	r18, 0x00	; 0
    25d4:	30 e0       	ldi	r19, 0x00	; 0
    25d6:	40 e8       	ldi	r20, 0x80	; 128
    25d8:	5f e3       	ldi	r21, 0x3F	; 63
    25da:	68 8d       	ldd	r22, Y+24	; 0x18
    25dc:	79 8d       	ldd	r23, Y+25	; 0x19
    25de:	8a 8d       	ldd	r24, Y+26	; 0x1a
    25e0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    25e2:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    25e6:	88 23       	and	r24, r24
    25e8:	2c f4       	brge	.+10     	; 0x25f4 <.L64>

000025ea <.Loc.96>:
		__ticks = 1;
    25ea:	81 e0       	ldi	r24, 0x01	; 1
    25ec:	90 e0       	ldi	r25, 0x00	; 0
    25ee:	9d 8f       	std	Y+29, r25	; 0x1d
    25f0:	8c 8f       	std	Y+28, r24	; 0x1c
    25f2:	62 c0       	rjmp	.+196    	; 0x26b8 <.L43>

000025f4 <.L64>:
	else if (__tmp > 65535)
    25f4:	20 e0       	ldi	r18, 0x00	; 0
    25f6:	3f ef       	ldi	r19, 0xFF	; 255
    25f8:	4f e7       	ldi	r20, 0x7F	; 127
    25fa:	57 e4       	ldi	r21, 0x47	; 71
    25fc:	68 8d       	ldd	r22, Y+24	; 0x18
    25fe:	79 8d       	ldd	r23, Y+25	; 0x19
    2600:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2602:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2604:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    2608:	88 23       	and	r24, r24
    260a:	09 f0       	breq	.+2      	; 0x260e <L0^A>

0000260c <L0^A>:
    260c:	0c f4       	brge	.+2      	; 0x2610 <.Loc.98>

0000260e <L0^A>:
    260e:	42 c0       	rjmp	.+132    	; 0x2694 <.L65>

00002610 <.Loc.98>:
		__ticks = (uint16_t) (__ms * 10.0);
    2610:	20 e0       	ldi	r18, 0x00	; 0
    2612:	30 e0       	ldi	r19, 0x00	; 0
    2614:	40 e2       	ldi	r20, 0x20	; 32
    2616:	51 e4       	ldi	r21, 0x41	; 65
    2618:	6c 89       	ldd	r22, Y+20	; 0x14
    261a:	7d 89       	ldd	r23, Y+21	; 0x15
    261c:	8e 89       	ldd	r24, Y+22	; 0x16
    261e:	9f 89       	ldd	r25, Y+23	; 0x17
    2620:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    2624:	2b 96       	adiw	r28, 0x0b	; 11
    2626:	6c af       	std	Y+60, r22	; 0x3c
    2628:	7d af       	std	Y+61, r23	; 0x3d
    262a:	8e af       	std	Y+62, r24	; 0x3e
    262c:	9f af       	std	Y+63, r25	; 0x3f
    262e:	2b 97       	sbiw	r28, 0x0b	; 11
    2630:	2b 96       	adiw	r28, 0x0b	; 11
    2632:	8c ad       	ldd	r24, Y+60	; 0x3c
    2634:	9d ad       	ldd	r25, Y+61	; 0x3d
    2636:	ae ad       	ldd	r26, Y+62	; 0x3e
    2638:	bf ad       	ldd	r27, Y+63	; 0x3f
    263a:	2b 97       	sbiw	r28, 0x0b	; 11
    263c:	8f a7       	std	Y+47, r24	; 0x2f
    263e:	98 ab       	std	Y+48, r25	; 0x30
    2640:	a9 ab       	std	Y+49, r26	; 0x31
    2642:	ba ab       	std	Y+50, r27	; 0x32

00002644 <.Loc.99>:
    2644:	6f a5       	ldd	r22, Y+47	; 0x2f
    2646:	78 a9       	ldd	r23, Y+48	; 0x30
    2648:	89 a9       	ldd	r24, Y+49	; 0x31
    264a:	9a a9       	ldd	r25, Y+50	; 0x32
    264c:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2650:	2f 96       	adiw	r28, 0x0f	; 15
    2652:	6c af       	std	Y+60, r22	; 0x3c
    2654:	7d af       	std	Y+61, r23	; 0x3d
    2656:	8e af       	std	Y+62, r24	; 0x3e
    2658:	9f af       	std	Y+63, r25	; 0x3f
    265a:	2f 97       	sbiw	r28, 0x0f	; 15
    265c:	2d 96       	adiw	r28, 0x0d	; 13
    265e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2660:	bf ad       	ldd	r27, Y+63	; 0x3f
    2662:	2d 97       	sbiw	r28, 0x0d	; 13
    2664:	bd 8f       	std	Y+29, r27	; 0x1d
    2666:	ac 8f       	std	Y+28, r26	; 0x1c

00002668 <.Loc.100>:
		while(__ticks)
    2668:	10 c0       	rjmp	.+32     	; 0x268a <.L46>

0000266a <.L47>:
    266a:	80 e9       	ldi	r24, 0x90	; 144
    266c:	91 e0       	ldi	r25, 0x01	; 1
    266e:	9f 8f       	std	Y+31, r25	; 0x1f
    2670:	8e 8f       	std	Y+30, r24	; 0x1e

00002672 <.LBB73>:
	__asm__ volatile (
    2672:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2674:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002676 <.L1^B5>:
    2676:	01 97       	sbiw	r24, 0x01	; 1
    2678:	f1 f7       	brne	.-4      	; 0x2676 <.L1^B5>
    267a:	9f 8f       	std	Y+31, r25	; 0x1f
    267c:	8e 8f       	std	Y+30, r24	; 0x1e

0000267e <.Loc.102>:
	...

00002680 <.LBE73>:
			__ticks --;
    2680:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2682:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2684:	01 97       	sbiw	r24, 0x01	; 1
    2686:	9d 8f       	std	Y+29, r25	; 0x1d
    2688:	8c 8f       	std	Y+28, r24	; 0x1c

0000268a <.L46>:
		while(__ticks)
    268a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    268c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    268e:	00 97       	sbiw	r24, 0x00	; 0
    2690:	61 f7       	brne	.-40     	; 0x266a <.L47>

00002692 <.Loc.105>:
		return;
    2692:	58 c0       	rjmp	.+176    	; 0x2744 <.L38>

00002694 <.L65>:
		__ticks = (uint16_t)__tmp;
    2694:	68 8d       	ldd	r22, Y+24	; 0x18
    2696:	79 8d       	ldd	r23, Y+25	; 0x19
    2698:	8a 8d       	ldd	r24, Y+26	; 0x1a
    269a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    269c:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    26a0:	63 96       	adiw	r28, 0x13	; 19
    26a2:	6c af       	std	Y+60, r22	; 0x3c
    26a4:	7d af       	std	Y+61, r23	; 0x3d
    26a6:	8e af       	std	Y+62, r24	; 0x3e
    26a8:	9f af       	std	Y+63, r25	; 0x3f
    26aa:	63 97       	sbiw	r28, 0x13	; 19
    26ac:	61 96       	adiw	r28, 0x11	; 17
    26ae:	ee ad       	ldd	r30, Y+62	; 0x3e
    26b0:	ff ad       	ldd	r31, Y+63	; 0x3f
    26b2:	61 97       	sbiw	r28, 0x11	; 17
    26b4:	fd 8f       	std	Y+29, r31	; 0x1d
    26b6:	ec 8f       	std	Y+28, r30	; 0x1c

000026b8 <.L43>:
    26b8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    26ba:	9d 8d       	ldd	r25, Y+29	; 0x1d
    26bc:	99 a3       	std	Y+33, r25	; 0x21
    26be:	88 a3       	std	Y+32, r24	; 0x20

000026c0 <.LBB75>:
    26c0:	88 a1       	ldd	r24, Y+32	; 0x20
    26c2:	99 a1       	ldd	r25, Y+33	; 0x21

000026c4 <.L1^B6>:
    26c4:	01 97       	sbiw	r24, 0x01	; 1
    26c6:	f1 f7       	brne	.-4      	; 0x26c4 <.L1^B6>
    26c8:	99 a3       	std	Y+33, r25	; 0x21
    26ca:	88 a3       	std	Y+32, r24	; 0x20

000026cc <.Loc.108>:
}
    26cc:	3b c0       	rjmp	.+118    	; 0x2744 <.L38>

000026ce <.L63>:
	else if (__tmp > 255)
    26ce:	20 e0       	ldi	r18, 0x00	; 0
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	4f e7       	ldi	r20, 0x7F	; 127
    26d4:	53 e4       	ldi	r21, 0x43	; 67
    26d6:	6b 85       	ldd	r22, Y+11	; 0x0b
    26d8:	7c 85       	ldd	r23, Y+12	; 0x0c
    26da:	8d 85       	ldd	r24, Y+13	; 0x0d
    26dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    26de:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    26e2:	88 23       	and	r24, r24
    26e4:	f9 f0       	breq	.+62     	; 0x2724 <.L66>
    26e6:	f4 f0       	brlt	.+60     	; 0x2724 <.L66>

000026e8 <.LBB77>:
		uint16_t __ticks=(uint16_t)__tmp2;
    26e8:	6f 85       	ldd	r22, Y+15	; 0x0f
    26ea:	78 89       	ldd	r23, Y+16	; 0x10
    26ec:	89 89       	ldd	r24, Y+17	; 0x11
    26ee:	9a 89       	ldd	r25, Y+18	; 0x12
    26f0:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    26f4:	67 96       	adiw	r28, 0x17	; 23
    26f6:	6c af       	std	Y+60, r22	; 0x3c
    26f8:	7d af       	std	Y+61, r23	; 0x3d
    26fa:	8e af       	std	Y+62, r24	; 0x3e
    26fc:	9f af       	std	Y+63, r25	; 0x3f
    26fe:	67 97       	sbiw	r28, 0x17	; 23
    2700:	65 96       	adiw	r28, 0x15	; 21
    2702:	2e ad       	ldd	r18, Y+62	; 0x3e
    2704:	3f ad       	ldd	r19, Y+63	; 0x3f
    2706:	65 97       	sbiw	r28, 0x15	; 21
    2708:	3b a3       	std	Y+35, r19	; 0x23
    270a:	2a a3       	std	Y+34, r18	; 0x22
    270c:	8a a1       	ldd	r24, Y+34	; 0x22
    270e:	9b a1       	ldd	r25, Y+35	; 0x23
    2710:	9d a3       	std	Y+37, r25	; 0x25
    2712:	8c a3       	std	Y+36, r24	; 0x24

00002714 <.LBB78>:
	__asm__ volatile (
    2714:	8c a1       	ldd	r24, Y+36	; 0x24
    2716:	9d a1       	ldd	r25, Y+37	; 0x25

00002718 <.L1^B7>:
    2718:	01 97       	sbiw	r24, 0x01	; 1
    271a:	f1 f7       	brne	.-4      	; 0x2718 <.L1^B7>
    271c:	9d a3       	std	Y+37, r25	; 0x25
    271e:	8c a3       	std	Y+36, r24	; 0x24

00002720 <.Loc.112>:
	...

00002722 <.LBE78>:
		return;
    2722:	17 c0       	rjmp	.+46     	; 0x2752 <.L51>

00002724 <.L66>:
		__ticks = (uint8_t)__tmp;
    2724:	6b 85       	ldd	r22, Y+11	; 0x0b
    2726:	7c 85       	ldd	r23, Y+12	; 0x0c
    2728:	8d 85       	ldd	r24, Y+13	; 0x0d
    272a:	9e 85       	ldd	r25, Y+14	; 0x0e
    272c:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2730:	6b 96       	adiw	r28, 0x1b	; 27
    2732:	6c af       	std	Y+60, r22	; 0x3c
    2734:	7d af       	std	Y+61, r23	; 0x3d
    2736:	8e af       	std	Y+62, r24	; 0x3e
    2738:	9f af       	std	Y+63, r25	; 0x3f
    273a:	6b 97       	sbiw	r28, 0x1b	; 27
    273c:	68 96       	adiw	r28, 0x18	; 24
    273e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2740:	68 97       	sbiw	r28, 0x18	; 24
    2742:	3b 8b       	std	Y+19, r19	; 0x13

00002744 <.L38>:
    2744:	8b 89       	ldd	r24, Y+19	; 0x13
    2746:	8e a3       	std	Y+38, r24	; 0x26

00002748 <.LBB80>:
	__asm__ volatile (
    2748:	8e a1       	ldd	r24, Y+38	; 0x26

0000274a <.L1^B8>:
    274a:	8a 95       	dec	r24
    274c:	f1 f7       	brne	.-4      	; 0x274a <.L1^B8>
    274e:	8e a3       	std	Y+38, r24	; 0x26

00002750 <.Loc.116>:
	...

00002752 <.L51>:
    _delay_us(10);
    PORTJ &= ~(1 << US2_TRIG_PIN);
    2752:	85 e0       	ldi	r24, 0x05	; 5
    2754:	91 e0       	ldi	r25, 0x01	; 1
    2756:	dc 01       	movw	r26, r24
    2758:	2c 91       	ld	r18, X

0000275a <.Loc.118>:
    275a:	85 e0       	ldi	r24, 0x05	; 5
    275c:	91 e0       	ldi	r25, 0x01	; 1

0000275e <.Loc.119>:
    275e:	2d 7f       	andi	r18, 0xFD	; 253
    2760:	fc 01       	movw	r30, r24
    2762:	20 83       	st	Z, r18

00002764 <.Loc.120>:
	...

00002766 <.L52>:

    // Wait for echo pin to go high
    while (!(PINJ & (1 << US2_ECHO_PIN)));
    2766:	83 e0       	ldi	r24, 0x03	; 3
    2768:	91 e0       	ldi	r25, 0x01	; 1
    276a:	dc 01       	movw	r26, r24
    276c:	8c 91       	ld	r24, X

0000276e <.Loc.122>:
    276e:	88 2f       	mov	r24, r24
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	81 70       	andi	r24, 0x01	; 1
    2774:	99 27       	eor	r25, r25

00002776 <.Loc.123>:
    2776:	00 97       	sbiw	r24, 0x00	; 0
    2778:	b1 f3       	breq	.-20     	; 0x2766 <.L52>

0000277a <.Loc.124>:

    // Start timer
    TCNT1 = 0;
    277a:	84 e8       	ldi	r24, 0x84	; 132
    277c:	90 e0       	ldi	r25, 0x00	; 0

0000277e <.Loc.125>:
    277e:	fc 01       	movw	r30, r24
    2780:	11 82       	std	Z+1, r1	; 0x01
    2782:	10 82       	st	Z, r1

00002784 <.Loc.126>:
    TCCR1B |= (1 << CS11); // Prescaler of 8
    2784:	81 e8       	ldi	r24, 0x81	; 129
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	dc 01       	movw	r26, r24
    278a:	2c 91       	ld	r18, X
    278c:	81 e8       	ldi	r24, 0x81	; 129
    278e:	90 e0       	ldi	r25, 0x00	; 0

00002790 <.Loc.127>:
    2790:	22 60       	ori	r18, 0x02	; 2
    2792:	fc 01       	movw	r30, r24
    2794:	20 83       	st	Z, r18

00002796 <.Loc.128>:

    // Wait for echo pin to go low
    while (PINJ & (1 << US2_ECHO_PIN)) {
    2796:	0b c0       	rjmp	.+22     	; 0x27ae <.L53>

00002798 <.L55>:
        if (TCNT1 > 60000) {
    2798:	84 e8       	ldi	r24, 0x84	; 132
    279a:	90 e0       	ldi	r25, 0x00	; 0
    279c:	dc 01       	movw	r26, r24
    279e:	8d 91       	ld	r24, X+
    27a0:	9c 91       	ld	r25, X
    27a2:	11 97       	sbiw	r26, 0x01	; 1

000027a4 <.Loc.130>:
    27a4:	80 36       	cpi	r24, 0x60	; 96
    27a6:	ba ee       	ldi	r27, 0xEA	; 234
    27a8:	9b 07       	cpc	r25, r27
    27aa:	09 f0       	breq	.+2      	; 0x27ae <.L53>

000027ac <L0^A>:
    27ac:	58 f4       	brcc	.+22     	; 0x27c4 <.L67>

000027ae <.L53>:
    while (PINJ & (1 << US2_ECHO_PIN)) {
    27ae:	83 e0       	ldi	r24, 0x03	; 3
    27b0:	91 e0       	ldi	r25, 0x01	; 1
    27b2:	fc 01       	movw	r30, r24
    27b4:	80 81       	ld	r24, Z

000027b6 <.Loc.132>:
    27b6:	88 2f       	mov	r24, r24
    27b8:	90 e0       	ldi	r25, 0x00	; 0
    27ba:	81 70       	andi	r24, 0x01	; 1
    27bc:	99 27       	eor	r25, r25

000027be <.Loc.133>:
    27be:	00 97       	sbiw	r24, 0x00	; 0
    27c0:	59 f7       	brne	.-42     	; 0x2798 <.L55>
    27c2:	01 c0       	rjmp	.+2      	; 0x27c6 <.L54>

000027c4 <.L67>:
	...

000027c6 <.L54>:
            break;
        }
    }

    // Stop timer
    TCCR1B &= ~(1 << CS11);
    27c6:	81 e8       	ldi	r24, 0x81	; 129
    27c8:	90 e0       	ldi	r25, 0x00	; 0
    27ca:	dc 01       	movw	r26, r24
    27cc:	2c 91       	ld	r18, X

000027ce <.Loc.136>:
    27ce:	81 e8       	ldi	r24, 0x81	; 129
    27d0:	90 e0       	ldi	r25, 0x00	; 0

000027d2 <.Loc.137>:
    27d2:	2d 7f       	andi	r18, 0xFD	; 253
    27d4:	fc 01       	movw	r30, r24
    27d6:	20 83       	st	Z, r18

000027d8 <.Loc.138>:

    // Read timer value
    duration = TCNT1;
    27d8:	84 e8       	ldi	r24, 0x84	; 132
    27da:	90 e0       	ldi	r25, 0x00	; 0

000027dc <.Loc.139>:
    27dc:	dc 01       	movw	r26, r24
    27de:	8d 91       	ld	r24, X+
    27e0:	9c 91       	ld	r25, X
    27e2:	9a 83       	std	Y+2, r25	; 0x02
    27e4:	89 83       	std	Y+1, r24	; 0x01

000027e6 <.Loc.140>:

    // Convert duration to distance in cm
    float distance = duration / 58.0 / 2.0;
    27e6:	89 81       	ldd	r24, Y+1	; 0x01
    27e8:	9a 81       	ldd	r25, Y+2	; 0x02
    27ea:	9c 01       	movw	r18, r24
    27ec:	40 e0       	ldi	r20, 0x00	; 0
    27ee:	50 e0       	ldi	r21, 0x00	; 0
    27f0:	6f 96       	adiw	r28, 0x1f	; 31
    27f2:	2c af       	std	Y+60, r18	; 0x3c
    27f4:	3d af       	std	Y+61, r19	; 0x3d
    27f6:	4e af       	std	Y+62, r20	; 0x3e
    27f8:	5f af       	std	Y+63, r21	; 0x3f
    27fa:	6f 97       	sbiw	r28, 0x1f	; 31
    27fc:	6f 96       	adiw	r28, 0x1f	; 31
    27fe:	6c ad       	ldd	r22, Y+60	; 0x3c
    2800:	7d ad       	ldd	r23, Y+61	; 0x3d
    2802:	8e ad       	ldd	r24, Y+62	; 0x3e
    2804:	9f ad       	ldd	r25, Y+63	; 0x3f
    2806:	6f 97       	sbiw	r28, 0x1f	; 31
    2808:	0e 94 6b 17 	call	0x2ed6	; 0x2ed6 <__floatunsisf>
    280c:	6f a3       	std	Y+39, r22	; 0x27
    280e:	78 a7       	std	Y+40, r23	; 0x28
    2810:	89 a7       	std	Y+41, r24	; 0x29
    2812:	9a a7       	std	Y+42, r25	; 0x2a
    2814:	20 e0       	ldi	r18, 0x00	; 0
    2816:	30 e0       	ldi	r19, 0x00	; 0
    2818:	48 e6       	ldi	r20, 0x68	; 104
    281a:	52 e4       	ldi	r21, 0x42	; 66
    281c:	6f a1       	ldd	r22, Y+39	; 0x27
    281e:	78 a5       	ldd	r23, Y+40	; 0x28
    2820:	89 a5       	ldd	r24, Y+41	; 0x29
    2822:	9a a5       	ldd	r25, Y+42	; 0x2a
    2824:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    2828:	a3 96       	adiw	r28, 0x23	; 35
    282a:	6c af       	std	Y+60, r22	; 0x3c
    282c:	7d af       	std	Y+61, r23	; 0x3d
    282e:	8e af       	std	Y+62, r24	; 0x3e
    2830:	9f af       	std	Y+63, r25	; 0x3f
    2832:	a3 97       	sbiw	r28, 0x23	; 35
    2834:	a3 96       	adiw	r28, 0x23	; 35
    2836:	8c ad       	ldd	r24, Y+60	; 0x3c
    2838:	9d ad       	ldd	r25, Y+61	; 0x3d
    283a:	ae ad       	ldd	r26, Y+62	; 0x3e
    283c:	bf ad       	ldd	r27, Y+63	; 0x3f
    283e:	a3 97       	sbiw	r28, 0x23	; 35
    2840:	8b a7       	std	Y+43, r24	; 0x2b
    2842:	9c a7       	std	Y+44, r25	; 0x2c
    2844:	ad a7       	std	Y+45, r26	; 0x2d
    2846:	be a7       	std	Y+46, r27	; 0x2e

00002848 <.Loc.141>:
    2848:	20 e0       	ldi	r18, 0x00	; 0
    284a:	30 e0       	ldi	r19, 0x00	; 0
    284c:	40 e0       	ldi	r20, 0x00	; 0
    284e:	50 e4       	ldi	r21, 0x40	; 64
    2850:	6b a5       	ldd	r22, Y+43	; 0x2b
    2852:	7c a5       	ldd	r23, Y+44	; 0x2c
    2854:	8d a5       	ldd	r24, Y+45	; 0x2d
    2856:	9e a5       	ldd	r25, Y+46	; 0x2e
    2858:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    285c:	a7 96       	adiw	r28, 0x27	; 39
    285e:	6c af       	std	Y+60, r22	; 0x3c
    2860:	7d af       	std	Y+61, r23	; 0x3d
    2862:	8e af       	std	Y+62, r24	; 0x3e
    2864:	9f af       	std	Y+63, r25	; 0x3f
    2866:	a7 97       	sbiw	r28, 0x27	; 39
    2868:	a7 96       	adiw	r28, 0x27	; 39
    286a:	2c ad       	ldd	r18, Y+60	; 0x3c
    286c:	3d ad       	ldd	r19, Y+61	; 0x3d
    286e:	4e ad       	ldd	r20, Y+62	; 0x3e
    2870:	5f ad       	ldd	r21, Y+63	; 0x3f
    2872:	a7 97       	sbiw	r28, 0x27	; 39
    2874:	2b 83       	std	Y+3, r18	; 0x03
    2876:	3c 83       	std	Y+4, r19	; 0x04
    2878:	4d 83       	std	Y+5, r20	; 0x05
    287a:	5e 83       	std	Y+6, r21	; 0x06

0000287c <.Loc.142>:

    return distance;
    287c:	8b 81       	ldd	r24, Y+3	; 0x03
    287e:	9c 81       	ldd	r25, Y+4	; 0x04
    2880:	ad 81       	ldd	r26, Y+5	; 0x05
    2882:	be 81       	ldd	r27, Y+6	; 0x06
    2884:	8b ab       	std	Y+51, r24	; 0x33
    2886:	9c ab       	std	Y+52, r25	; 0x34
    2888:	ad ab       	std	Y+53, r26	; 0x35
    288a:	be ab       	std	Y+54, r27	; 0x36

0000288c <.Loc.143>:
}
    288c:	6b a9       	ldd	r22, Y+51	; 0x33
    288e:	7c a9       	ldd	r23, Y+52	; 0x34
    2890:	8d a9       	ldd	r24, Y+53	; 0x35
    2892:	9e a9       	ldd	r25, Y+54	; 0x36
    2894:	ca 59       	subi	r28, 0x9A	; 154
    2896:	df 4f       	sbci	r29, 0xFF	; 255
    2898:	0f b6       	in	r0, 0x3f	; 63
    289a:	f8 94       	cli
    289c:	de bf       	out	0x3e, r29	; 62
    289e:	0f be       	out	0x3f, r0	; 63
    28a0:	cd bf       	out	0x3d, r28	; 61
    28a2:	df 91       	pop	r29
    28a4:	cf 91       	pop	r28
    28a6:	08 95       	ret

000028a8 <measure_distance3>:

// Measure distance with sensor 3
float measure_distance3(void) {
    28a8:	cf 93       	push	r28
    28aa:	df 93       	push	r29
    28ac:	cd b7       	in	r28, 0x3d	; 61
    28ae:	de b7       	in	r29, 0x3e	; 62
    28b0:	c6 56       	subi	r28, 0x66	; 102
    28b2:	d1 09       	sbc	r29, r1
    28b4:	0f b6       	in	r0, 0x3f	; 63
    28b6:	f8 94       	cli
    28b8:	de bf       	out	0x3e, r29	; 62
    28ba:	0f be       	out	0x3f, r0	; 63
    28bc:	cd bf       	out	0x3d, r28	; 61

000028be <.Loc.145>:
    uint16_t duration;

    // Trigger pulse
    PORTH |= (1 << US3_TRIG_PIN);
    28be:	82 e0       	ldi	r24, 0x02	; 2
    28c0:	91 e0       	ldi	r25, 0x01	; 1
    28c2:	dc 01       	movw	r26, r24
    28c4:	2c 91       	ld	r18, X
    28c6:	82 e0       	ldi	r24, 0x02	; 2
    28c8:	91 e0       	ldi	r25, 0x01	; 1

000028ca <.Loc.146>:
    28ca:	20 61       	ori	r18, 0x10	; 16
    28cc:	fc 01       	movw	r30, r24
    28ce:	20 83       	st	Z, r18
    28d0:	80 e0       	ldi	r24, 0x00	; 0
    28d2:	90 e0       	ldi	r25, 0x00	; 0
    28d4:	a0 e2       	ldi	r26, 0x20	; 32
    28d6:	b1 e4       	ldi	r27, 0x41	; 65
    28d8:	8f 83       	std	Y+7, r24	; 0x07
    28da:	98 87       	std	Y+8, r25	; 0x08
    28dc:	a9 87       	std	Y+9, r26	; 0x09
    28de:	ba 87       	std	Y+10, r27	; 0x0a

000028e0 <.LBB82>:
	__tmp = ((F_CPU) / 3e6) * __us;
    28e0:	2b ea       	ldi	r18, 0xAB	; 171
    28e2:	3a ea       	ldi	r19, 0xAA	; 170
    28e4:	4a ea       	ldi	r20, 0xAA	; 170
    28e6:	50 e4       	ldi	r21, 0x40	; 64
    28e8:	6f 81       	ldd	r22, Y+7	; 0x07
    28ea:	78 85       	ldd	r23, Y+8	; 0x08
    28ec:	89 85       	ldd	r24, Y+9	; 0x09
    28ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    28f0:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    28f4:	6f ab       	std	Y+55, r22	; 0x37
    28f6:	78 af       	std	Y+56, r23	; 0x38
    28f8:	89 af       	std	Y+57, r24	; 0x39
    28fa:	9a af       	std	Y+58, r25	; 0x3a
    28fc:	2f a9       	ldd	r18, Y+55	; 0x37
    28fe:	38 ad       	ldd	r19, Y+56	; 0x38
    2900:	49 ad       	ldd	r20, Y+57	; 0x39
    2902:	5a ad       	ldd	r21, Y+58	; 0x3a
    2904:	2b 87       	std	Y+11, r18	; 0x0b
    2906:	3c 87       	std	Y+12, r19	; 0x0c
    2908:	4d 87       	std	Y+13, r20	; 0x0d
    290a:	5e 87       	std	Y+14, r21	; 0x0e

0000290c <.Loc.148>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    290c:	20 e0       	ldi	r18, 0x00	; 0
    290e:	30 e0       	ldi	r19, 0x00	; 0
    2910:	40 e8       	ldi	r20, 0x80	; 128
    2912:	50 e4       	ldi	r21, 0x40	; 64
    2914:	6f 81       	ldd	r22, Y+7	; 0x07
    2916:	78 85       	ldd	r23, Y+8	; 0x08
    2918:	89 85       	ldd	r24, Y+9	; 0x09
    291a:	9a 85       	ldd	r25, Y+10	; 0x0a
    291c:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    2920:	6b af       	std	Y+59, r22	; 0x3b
    2922:	7c af       	std	Y+60, r23	; 0x3c
    2924:	8d af       	std	Y+61, r24	; 0x3d
    2926:	9e af       	std	Y+62, r25	; 0x3e
    2928:	8b ad       	ldd	r24, Y+59	; 0x3b
    292a:	9c ad       	ldd	r25, Y+60	; 0x3c
    292c:	ad ad       	ldd	r26, Y+61	; 0x3d
    292e:	be ad       	ldd	r27, Y+62	; 0x3e
    2930:	8f 87       	std	Y+15, r24	; 0x0f
    2932:	98 8b       	std	Y+16, r25	; 0x10
    2934:	a9 8b       	std	Y+17, r26	; 0x11
    2936:	ba 8b       	std	Y+18, r27	; 0x12

00002938 <.Loc.149>:
	if (__tmp < 1.0)
    2938:	20 e0       	ldi	r18, 0x00	; 0
    293a:	30 e0       	ldi	r19, 0x00	; 0
    293c:	40 e8       	ldi	r20, 0x80	; 128
    293e:	5f e3       	ldi	r21, 0x3F	; 63
    2940:	6b 85       	ldd	r22, Y+11	; 0x0b
    2942:	7c 85       	ldd	r23, Y+12	; 0x0c
    2944:	8d 85       	ldd	r24, Y+13	; 0x0d
    2946:	9e 85       	ldd	r25, Y+14	; 0x0e
    2948:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    294c:	88 23       	and	r24, r24
    294e:	1c f4       	brge	.+6      	; 0x2956 <.L95>

00002950 <.Loc.150>:
		__ticks = 1;
    2950:	81 e0       	ldi	r24, 0x01	; 1
    2952:	8b 8b       	std	Y+19, r24	; 0x13
    2954:	fb c0       	rjmp	.+502    	; 0x2b4c <.L71>

00002956 <.L95>:
	else if (__tmp2 > 65535)
    2956:	20 e0       	ldi	r18, 0x00	; 0
    2958:	3f ef       	ldi	r19, 0xFF	; 255
    295a:	4f e7       	ldi	r20, 0x7F	; 127
    295c:	57 e4       	ldi	r21, 0x47	; 71
    295e:	6f 85       	ldd	r22, Y+15	; 0x0f
    2960:	78 89       	ldd	r23, Y+16	; 0x10
    2962:	89 89       	ldd	r24, Y+17	; 0x11
    2964:	9a 89       	ldd	r25, Y+18	; 0x12
    2966:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    296a:	88 23       	and	r24, r24
    296c:	09 f0       	breq	.+2      	; 0x2970 <L0^A>

0000296e <L0^A>:
    296e:	0c f4       	brge	.+2      	; 0x2972 <.Loc.152>

00002970 <L0^A>:
    2970:	b2 c0       	rjmp	.+356    	; 0x2ad6 <.L96>

00002972 <.Loc.152>:
		_delay_ms(__us / 1000.0);
    2972:	20 e0       	ldi	r18, 0x00	; 0
    2974:	30 e0       	ldi	r19, 0x00	; 0
    2976:	4a e7       	ldi	r20, 0x7A	; 122
    2978:	54 e4       	ldi	r21, 0x44	; 68
    297a:	6f 81       	ldd	r22, Y+7	; 0x07
    297c:	78 85       	ldd	r23, Y+8	; 0x08
    297e:	89 85       	ldd	r24, Y+9	; 0x09
    2980:	9a 85       	ldd	r25, Y+10	; 0x0a
    2982:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    2986:	23 96       	adiw	r28, 0x03	; 3
    2988:	6c af       	std	Y+60, r22	; 0x3c
    298a:	7d af       	std	Y+61, r23	; 0x3d
    298c:	8e af       	std	Y+62, r24	; 0x3e
    298e:	9f af       	std	Y+63, r25	; 0x3f
    2990:	23 97       	sbiw	r28, 0x03	; 3
    2992:	23 96       	adiw	r28, 0x03	; 3
    2994:	8c ad       	ldd	r24, Y+60	; 0x3c
    2996:	9d ad       	ldd	r25, Y+61	; 0x3d
    2998:	ae ad       	ldd	r26, Y+62	; 0x3e
    299a:	bf ad       	ldd	r27, Y+63	; 0x3f
    299c:	23 97       	sbiw	r28, 0x03	; 3
    299e:	8c 8b       	std	Y+20, r24	; 0x14
    29a0:	9d 8b       	std	Y+21, r25	; 0x15
    29a2:	ae 8b       	std	Y+22, r26	; 0x16
    29a4:	bf 8b       	std	Y+23, r27	; 0x17

000029a6 <.LBB84>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    29a6:	20 e0       	ldi	r18, 0x00	; 0
    29a8:	30 e0       	ldi	r19, 0x00	; 0
    29aa:	4a e7       	ldi	r20, 0x7A	; 122
    29ac:	55 e4       	ldi	r21, 0x45	; 69
    29ae:	6c 89       	ldd	r22, Y+20	; 0x14
    29b0:	7d 89       	ldd	r23, Y+21	; 0x15
    29b2:	8e 89       	ldd	r24, Y+22	; 0x16
    29b4:	9f 89       	ldd	r25, Y+23	; 0x17
    29b6:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    29ba:	27 96       	adiw	r28, 0x07	; 7
    29bc:	6c af       	std	Y+60, r22	; 0x3c
    29be:	7d af       	std	Y+61, r23	; 0x3d
    29c0:	8e af       	std	Y+62, r24	; 0x3e
    29c2:	9f af       	std	Y+63, r25	; 0x3f
    29c4:	27 97       	sbiw	r28, 0x07	; 7
    29c6:	27 96       	adiw	r28, 0x07	; 7
    29c8:	2c ad       	ldd	r18, Y+60	; 0x3c
    29ca:	3d ad       	ldd	r19, Y+61	; 0x3d
    29cc:	4e ad       	ldd	r20, Y+62	; 0x3e
    29ce:	5f ad       	ldd	r21, Y+63	; 0x3f
    29d0:	27 97       	sbiw	r28, 0x07	; 7
    29d2:	28 8f       	std	Y+24, r18	; 0x18
    29d4:	39 8f       	std	Y+25, r19	; 0x19
    29d6:	4a 8f       	std	Y+26, r20	; 0x1a
    29d8:	5b 8f       	std	Y+27, r21	; 0x1b

000029da <.Loc.154>:
	if (__tmp < 1.0)
    29da:	20 e0       	ldi	r18, 0x00	; 0
    29dc:	30 e0       	ldi	r19, 0x00	; 0
    29de:	40 e8       	ldi	r20, 0x80	; 128
    29e0:	5f e3       	ldi	r21, 0x3F	; 63
    29e2:	68 8d       	ldd	r22, Y+24	; 0x18
    29e4:	79 8d       	ldd	r23, Y+25	; 0x19
    29e6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    29e8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    29ea:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <__cmpsf2>
    29ee:	88 23       	and	r24, r24
    29f0:	2c f4       	brge	.+10     	; 0x29fc <.L97>

000029f2 <.Loc.155>:
		__ticks = 1;
    29f2:	81 e0       	ldi	r24, 0x01	; 1
    29f4:	90 e0       	ldi	r25, 0x00	; 0
    29f6:	9d 8f       	std	Y+29, r25	; 0x1d
    29f8:	8c 8f       	std	Y+28, r24	; 0x1c
    29fa:	62 c0       	rjmp	.+196    	; 0x2ac0 <.L76>

000029fc <.L97>:
	else if (__tmp > 65535)
    29fc:	20 e0       	ldi	r18, 0x00	; 0
    29fe:	3f ef       	ldi	r19, 0xFF	; 255
    2a00:	4f e7       	ldi	r20, 0x7F	; 127
    2a02:	57 e4       	ldi	r21, 0x47	; 71
    2a04:	68 8d       	ldd	r22, Y+24	; 0x18
    2a06:	79 8d       	ldd	r23, Y+25	; 0x19
    2a08:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2a0a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2a0c:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    2a10:	88 23       	and	r24, r24
    2a12:	09 f0       	breq	.+2      	; 0x2a16 <L0^A>

00002a14 <L0^A>:
    2a14:	0c f4       	brge	.+2      	; 0x2a18 <.Loc.157>

00002a16 <L0^A>:
    2a16:	42 c0       	rjmp	.+132    	; 0x2a9c <.L98>

00002a18 <.Loc.157>:
		__ticks = (uint16_t) (__ms * 10.0);
    2a18:	20 e0       	ldi	r18, 0x00	; 0
    2a1a:	30 e0       	ldi	r19, 0x00	; 0
    2a1c:	40 e2       	ldi	r20, 0x20	; 32
    2a1e:	51 e4       	ldi	r21, 0x41	; 65
    2a20:	6c 89       	ldd	r22, Y+20	; 0x14
    2a22:	7d 89       	ldd	r23, Y+21	; 0x15
    2a24:	8e 89       	ldd	r24, Y+22	; 0x16
    2a26:	9f 89       	ldd	r25, Y+23	; 0x17
    2a28:	0e 94 22 18 	call	0x3044	; 0x3044 <__mulsf3>
    2a2c:	2b 96       	adiw	r28, 0x0b	; 11
    2a2e:	6c af       	std	Y+60, r22	; 0x3c
    2a30:	7d af       	std	Y+61, r23	; 0x3d
    2a32:	8e af       	std	Y+62, r24	; 0x3e
    2a34:	9f af       	std	Y+63, r25	; 0x3f
    2a36:	2b 97       	sbiw	r28, 0x0b	; 11
    2a38:	2b 96       	adiw	r28, 0x0b	; 11
    2a3a:	8c ad       	ldd	r24, Y+60	; 0x3c
    2a3c:	9d ad       	ldd	r25, Y+61	; 0x3d
    2a3e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2a40:	bf ad       	ldd	r27, Y+63	; 0x3f
    2a42:	2b 97       	sbiw	r28, 0x0b	; 11
    2a44:	8f a7       	std	Y+47, r24	; 0x2f
    2a46:	98 ab       	std	Y+48, r25	; 0x30
    2a48:	a9 ab       	std	Y+49, r26	; 0x31
    2a4a:	ba ab       	std	Y+50, r27	; 0x32

00002a4c <.Loc.158>:
    2a4c:	6f a5       	ldd	r22, Y+47	; 0x2f
    2a4e:	78 a9       	ldd	r23, Y+48	; 0x30
    2a50:	89 a9       	ldd	r24, Y+49	; 0x31
    2a52:	9a a9       	ldd	r25, Y+50	; 0x32
    2a54:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2a58:	2f 96       	adiw	r28, 0x0f	; 15
    2a5a:	6c af       	std	Y+60, r22	; 0x3c
    2a5c:	7d af       	std	Y+61, r23	; 0x3d
    2a5e:	8e af       	std	Y+62, r24	; 0x3e
    2a60:	9f af       	std	Y+63, r25	; 0x3f
    2a62:	2f 97       	sbiw	r28, 0x0f	; 15
    2a64:	2d 96       	adiw	r28, 0x0d	; 13
    2a66:	ae ad       	ldd	r26, Y+62	; 0x3e
    2a68:	bf ad       	ldd	r27, Y+63	; 0x3f
    2a6a:	2d 97       	sbiw	r28, 0x0d	; 13
    2a6c:	bd 8f       	std	Y+29, r27	; 0x1d
    2a6e:	ac 8f       	std	Y+28, r26	; 0x1c

00002a70 <.Loc.159>:
		while(__ticks)
    2a70:	10 c0       	rjmp	.+32     	; 0x2a92 <.L79>

00002a72 <.L80>:
    2a72:	80 e9       	ldi	r24, 0x90	; 144
    2a74:	91 e0       	ldi	r25, 0x01	; 1
    2a76:	9f 8f       	std	Y+31, r25	; 0x1f
    2a78:	8e 8f       	std	Y+30, r24	; 0x1e

00002a7a <.LBB86>:
	__asm__ volatile (
    2a7a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2a7c:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002a7e <.L1^B9>:
    2a7e:	01 97       	sbiw	r24, 0x01	; 1
    2a80:	f1 f7       	brne	.-4      	; 0x2a7e <.L1^B9>
    2a82:	9f 8f       	std	Y+31, r25	; 0x1f
    2a84:	8e 8f       	std	Y+30, r24	; 0x1e

00002a86 <.Loc.161>:
	...

00002a88 <.LBE86>:
			__ticks --;
    2a88:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a8a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a8c:	01 97       	sbiw	r24, 0x01	; 1
    2a8e:	9d 8f       	std	Y+29, r25	; 0x1d
    2a90:	8c 8f       	std	Y+28, r24	; 0x1c

00002a92 <.L79>:
		while(__ticks)
    2a92:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2a94:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2a96:	00 97       	sbiw	r24, 0x00	; 0
    2a98:	61 f7       	brne	.-40     	; 0x2a72 <.L80>

00002a9a <.Loc.164>:
		return;
    2a9a:	58 c0       	rjmp	.+176    	; 0x2b4c <.L71>

00002a9c <.L98>:
		__ticks = (uint16_t)__tmp;
    2a9c:	68 8d       	ldd	r22, Y+24	; 0x18
    2a9e:	79 8d       	ldd	r23, Y+25	; 0x19
    2aa0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2aa2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2aa4:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2aa8:	63 96       	adiw	r28, 0x13	; 19
    2aaa:	6c af       	std	Y+60, r22	; 0x3c
    2aac:	7d af       	std	Y+61, r23	; 0x3d
    2aae:	8e af       	std	Y+62, r24	; 0x3e
    2ab0:	9f af       	std	Y+63, r25	; 0x3f
    2ab2:	63 97       	sbiw	r28, 0x13	; 19
    2ab4:	61 96       	adiw	r28, 0x11	; 17
    2ab6:	ee ad       	ldd	r30, Y+62	; 0x3e
    2ab8:	ff ad       	ldd	r31, Y+63	; 0x3f
    2aba:	61 97       	sbiw	r28, 0x11	; 17
    2abc:	fd 8f       	std	Y+29, r31	; 0x1d
    2abe:	ec 8f       	std	Y+28, r30	; 0x1c

00002ac0 <.L76>:
    2ac0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2ac2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2ac4:	99 a3       	std	Y+33, r25	; 0x21
    2ac6:	88 a3       	std	Y+32, r24	; 0x20

00002ac8 <.LBB88>:
    2ac8:	88 a1       	ldd	r24, Y+32	; 0x20
    2aca:	99 a1       	ldd	r25, Y+33	; 0x21

00002acc <.L1^B10>:
    2acc:	01 97       	sbiw	r24, 0x01	; 1
    2ace:	f1 f7       	brne	.-4      	; 0x2acc <.L1^B10>
    2ad0:	99 a3       	std	Y+33, r25	; 0x21
    2ad2:	88 a3       	std	Y+32, r24	; 0x20

00002ad4 <.Loc.167>:
}
    2ad4:	3b c0       	rjmp	.+118    	; 0x2b4c <.L71>

00002ad6 <.L96>:
	else if (__tmp > 255)
    2ad6:	20 e0       	ldi	r18, 0x00	; 0
    2ad8:	30 e0       	ldi	r19, 0x00	; 0
    2ada:	4f e7       	ldi	r20, 0x7F	; 127
    2adc:	53 e4       	ldi	r21, 0x43	; 67
    2ade:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ae0:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ae2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ae4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ae6:	0e 94 1d 18 	call	0x303a	; 0x303a <__gesf2>
    2aea:	88 23       	and	r24, r24
    2aec:	f9 f0       	breq	.+62     	; 0x2b2c <.L99>
    2aee:	f4 f0       	brlt	.+60     	; 0x2b2c <.L99>

00002af0 <.LBB90>:
		uint16_t __ticks=(uint16_t)__tmp2;
    2af0:	6f 85       	ldd	r22, Y+15	; 0x0f
    2af2:	78 89       	ldd	r23, Y+16	; 0x10
    2af4:	89 89       	ldd	r24, Y+17	; 0x11
    2af6:	9a 89       	ldd	r25, Y+18	; 0x12
    2af8:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2afc:	67 96       	adiw	r28, 0x17	; 23
    2afe:	6c af       	std	Y+60, r22	; 0x3c
    2b00:	7d af       	std	Y+61, r23	; 0x3d
    2b02:	8e af       	std	Y+62, r24	; 0x3e
    2b04:	9f af       	std	Y+63, r25	; 0x3f
    2b06:	67 97       	sbiw	r28, 0x17	; 23
    2b08:	65 96       	adiw	r28, 0x15	; 21
    2b0a:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b0c:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b0e:	65 97       	sbiw	r28, 0x15	; 21
    2b10:	3b a3       	std	Y+35, r19	; 0x23
    2b12:	2a a3       	std	Y+34, r18	; 0x22
    2b14:	8a a1       	ldd	r24, Y+34	; 0x22
    2b16:	9b a1       	ldd	r25, Y+35	; 0x23
    2b18:	9d a3       	std	Y+37, r25	; 0x25
    2b1a:	8c a3       	std	Y+36, r24	; 0x24

00002b1c <.LBB91>:
	__asm__ volatile (
    2b1c:	8c a1       	ldd	r24, Y+36	; 0x24
    2b1e:	9d a1       	ldd	r25, Y+37	; 0x25

00002b20 <.L1^B11>:
    2b20:	01 97       	sbiw	r24, 0x01	; 1
    2b22:	f1 f7       	brne	.-4      	; 0x2b20 <.L1^B11>
    2b24:	9d a3       	std	Y+37, r25	; 0x25
    2b26:	8c a3       	std	Y+36, r24	; 0x24

00002b28 <.Loc.171>:
	...

00002b2a <.LBE91>:
		return;
    2b2a:	17 c0       	rjmp	.+46     	; 0x2b5a <.L84>

00002b2c <.L99>:
		__ticks = (uint8_t)__tmp;
    2b2c:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b2e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b30:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b32:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b34:	0e 94 3c 17 	call	0x2e78	; 0x2e78 <__fixunssfsi>
    2b38:	6b 96       	adiw	r28, 0x1b	; 27
    2b3a:	6c af       	std	Y+60, r22	; 0x3c
    2b3c:	7d af       	std	Y+61, r23	; 0x3d
    2b3e:	8e af       	std	Y+62, r24	; 0x3e
    2b40:	9f af       	std	Y+63, r25	; 0x3f
    2b42:	6b 97       	sbiw	r28, 0x1b	; 27
    2b44:	68 96       	adiw	r28, 0x18	; 24
    2b46:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b48:	68 97       	sbiw	r28, 0x18	; 24
    2b4a:	3b 8b       	std	Y+19, r19	; 0x13

00002b4c <.L71>:
    2b4c:	8b 89       	ldd	r24, Y+19	; 0x13
    2b4e:	8e a3       	std	Y+38, r24	; 0x26

00002b50 <.LBB93>:
	__asm__ volatile (
    2b50:	8e a1       	ldd	r24, Y+38	; 0x26

00002b52 <.L1^B12>:
    2b52:	8a 95       	dec	r24
    2b54:	f1 f7       	brne	.-4      	; 0x2b52 <.L1^B12>
    2b56:	8e a3       	std	Y+38, r24	; 0x26

00002b58 <.Loc.175>:
	...

00002b5a <.L84>:
    _delay_us(10);
    PORTH &= ~(1 << US3_TRIG_PIN);
    2b5a:	82 e0       	ldi	r24, 0x02	; 2
    2b5c:	91 e0       	ldi	r25, 0x01	; 1
    2b5e:	dc 01       	movw	r26, r24
    2b60:	2c 91       	ld	r18, X

00002b62 <.Loc.177>:
    2b62:	82 e0       	ldi	r24, 0x02	; 2
    2b64:	91 e0       	ldi	r25, 0x01	; 1

00002b66 <.Loc.178>:
    2b66:	2f 7e       	andi	r18, 0xEF	; 239
    2b68:	fc 01       	movw	r30, r24
    2b6a:	20 83       	st	Z, r18

00002b6c <.Loc.179>:
	...

00002b6e <.L85>:

    // Wait for echo pin to go high
    while (!(PINH & (1 << US3_ECHO_PIN)));
    2b6e:	80 e0       	ldi	r24, 0x00	; 0
    2b70:	91 e0       	ldi	r25, 0x01	; 1
    2b72:	dc 01       	movw	r26, r24
    2b74:	8c 91       	ld	r24, X

00002b76 <.Loc.181>:
    2b76:	88 2f       	mov	r24, r24
    2b78:	90 e0       	ldi	r25, 0x00	; 0
    2b7a:	80 72       	andi	r24, 0x20	; 32
    2b7c:	99 27       	eor	r25, r25

00002b7e <.Loc.182>:
    2b7e:	00 97       	sbiw	r24, 0x00	; 0
    2b80:	b1 f3       	breq	.-20     	; 0x2b6e <.L85>

00002b82 <.Loc.183>:

    // Start timer
    TCNT1 = 0;
    2b82:	84 e8       	ldi	r24, 0x84	; 132
    2b84:	90 e0       	ldi	r25, 0x00	; 0

00002b86 <.Loc.184>:
    2b86:	fc 01       	movw	r30, r24
    2b88:	11 82       	std	Z+1, r1	; 0x01
    2b8a:	10 82       	st	Z, r1

00002b8c <.Loc.185>:
    TCCR1B |= (1 << CS11); // Prescaler of 8
    2b8c:	81 e8       	ldi	r24, 0x81	; 129
    2b8e:	90 e0       	ldi	r25, 0x00	; 0
    2b90:	dc 01       	movw	r26, r24
    2b92:	2c 91       	ld	r18, X
    2b94:	81 e8       	ldi	r24, 0x81	; 129
    2b96:	90 e0       	ldi	r25, 0x00	; 0

00002b98 <.Loc.186>:
    2b98:	22 60       	ori	r18, 0x02	; 2
    2b9a:	fc 01       	movw	r30, r24
    2b9c:	20 83       	st	Z, r18

00002b9e <.Loc.187>:

    // Wait for echo pin to go low
    while (PINH & (1 << US3_ECHO_PIN)) {
    2b9e:	0b c0       	rjmp	.+22     	; 0x2bb6 <.L86>

00002ba0 <.L88>:
        if (TCNT1 > 60000) {
    2ba0:	84 e8       	ldi	r24, 0x84	; 132
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	dc 01       	movw	r26, r24
    2ba6:	8d 91       	ld	r24, X+
    2ba8:	9c 91       	ld	r25, X
    2baa:	11 97       	sbiw	r26, 0x01	; 1

00002bac <.Loc.189>:
    2bac:	80 36       	cpi	r24, 0x60	; 96
    2bae:	ba ee       	ldi	r27, 0xEA	; 234
    2bb0:	9b 07       	cpc	r25, r27
    2bb2:	09 f0       	breq	.+2      	; 0x2bb6 <.L86>

00002bb4 <L0^A>:
    2bb4:	58 f4       	brcc	.+22     	; 0x2bcc <.L100>

00002bb6 <.L86>:
    while (PINH & (1 << US3_ECHO_PIN)) {
    2bb6:	80 e0       	ldi	r24, 0x00	; 0
    2bb8:	91 e0       	ldi	r25, 0x01	; 1
    2bba:	fc 01       	movw	r30, r24
    2bbc:	80 81       	ld	r24, Z

00002bbe <.Loc.191>:
    2bbe:	88 2f       	mov	r24, r24
    2bc0:	90 e0       	ldi	r25, 0x00	; 0
    2bc2:	80 72       	andi	r24, 0x20	; 32
    2bc4:	99 27       	eor	r25, r25

00002bc6 <.Loc.192>:
    2bc6:	00 97       	sbiw	r24, 0x00	; 0
    2bc8:	59 f7       	brne	.-42     	; 0x2ba0 <.L88>
    2bca:	01 c0       	rjmp	.+2      	; 0x2bce <.L87>

00002bcc <.L100>:
	...

00002bce <.L87>:
            break;
        }
    }

    // Stop timer
    TCCR1B &= ~(1 << CS11);
    2bce:	81 e8       	ldi	r24, 0x81	; 129
    2bd0:	90 e0       	ldi	r25, 0x00	; 0
    2bd2:	dc 01       	movw	r26, r24
    2bd4:	2c 91       	ld	r18, X

00002bd6 <.Loc.195>:
    2bd6:	81 e8       	ldi	r24, 0x81	; 129
    2bd8:	90 e0       	ldi	r25, 0x00	; 0

00002bda <.Loc.196>:
    2bda:	2d 7f       	andi	r18, 0xFD	; 253
    2bdc:	fc 01       	movw	r30, r24
    2bde:	20 83       	st	Z, r18

00002be0 <.Loc.197>:

    // Read timer value
    duration = TCNT1;
    2be0:	84 e8       	ldi	r24, 0x84	; 132
    2be2:	90 e0       	ldi	r25, 0x00	; 0

00002be4 <.Loc.198>:
    2be4:	dc 01       	movw	r26, r24
    2be6:	8d 91       	ld	r24, X+
    2be8:	9c 91       	ld	r25, X
    2bea:	9a 83       	std	Y+2, r25	; 0x02
    2bec:	89 83       	std	Y+1, r24	; 0x01

00002bee <.Loc.199>:

    // Convert duration to distance in cm
    float distance = duration / 58.0 / 2.0;
    2bee:	89 81       	ldd	r24, Y+1	; 0x01
    2bf0:	9a 81       	ldd	r25, Y+2	; 0x02
    2bf2:	9c 01       	movw	r18, r24
    2bf4:	40 e0       	ldi	r20, 0x00	; 0
    2bf6:	50 e0       	ldi	r21, 0x00	; 0
    2bf8:	6f 96       	adiw	r28, 0x1f	; 31
    2bfa:	2c af       	std	Y+60, r18	; 0x3c
    2bfc:	3d af       	std	Y+61, r19	; 0x3d
    2bfe:	4e af       	std	Y+62, r20	; 0x3e
    2c00:	5f af       	std	Y+63, r21	; 0x3f
    2c02:	6f 97       	sbiw	r28, 0x1f	; 31
    2c04:	6f 96       	adiw	r28, 0x1f	; 31
    2c06:	6c ad       	ldd	r22, Y+60	; 0x3c
    2c08:	7d ad       	ldd	r23, Y+61	; 0x3d
    2c0a:	8e ad       	ldd	r24, Y+62	; 0x3e
    2c0c:	9f ad       	ldd	r25, Y+63	; 0x3f
    2c0e:	6f 97       	sbiw	r28, 0x1f	; 31
    2c10:	0e 94 6b 17 	call	0x2ed6	; 0x2ed6 <__floatunsisf>
    2c14:	6f a3       	std	Y+39, r22	; 0x27
    2c16:	78 a7       	std	Y+40, r23	; 0x28
    2c18:	89 a7       	std	Y+41, r24	; 0x29
    2c1a:	9a a7       	std	Y+42, r25	; 0x2a
    2c1c:	20 e0       	ldi	r18, 0x00	; 0
    2c1e:	30 e0       	ldi	r19, 0x00	; 0
    2c20:	48 e6       	ldi	r20, 0x68	; 104
    2c22:	52 e4       	ldi	r21, 0x42	; 66
    2c24:	6f a1       	ldd	r22, Y+39	; 0x27
    2c26:	78 a5       	ldd	r23, Y+40	; 0x28
    2c28:	89 a5       	ldd	r24, Y+41	; 0x29
    2c2a:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c2c:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    2c30:	a3 96       	adiw	r28, 0x23	; 35
    2c32:	6c af       	std	Y+60, r22	; 0x3c
    2c34:	7d af       	std	Y+61, r23	; 0x3d
    2c36:	8e af       	std	Y+62, r24	; 0x3e
    2c38:	9f af       	std	Y+63, r25	; 0x3f
    2c3a:	a3 97       	sbiw	r28, 0x23	; 35
    2c3c:	a3 96       	adiw	r28, 0x23	; 35
    2c3e:	8c ad       	ldd	r24, Y+60	; 0x3c
    2c40:	9d ad       	ldd	r25, Y+61	; 0x3d
    2c42:	ae ad       	ldd	r26, Y+62	; 0x3e
    2c44:	bf ad       	ldd	r27, Y+63	; 0x3f
    2c46:	a3 97       	sbiw	r28, 0x23	; 35
    2c48:	8b a7       	std	Y+43, r24	; 0x2b
    2c4a:	9c a7       	std	Y+44, r25	; 0x2c
    2c4c:	ad a7       	std	Y+45, r26	; 0x2d
    2c4e:	be a7       	std	Y+46, r27	; 0x2e

00002c50 <.Loc.200>:
    2c50:	20 e0       	ldi	r18, 0x00	; 0
    2c52:	30 e0       	ldi	r19, 0x00	; 0
    2c54:	40 e0       	ldi	r20, 0x00	; 0
    2c56:	50 e4       	ldi	r21, 0x40	; 64
    2c58:	6b a5       	ldd	r22, Y+43	; 0x2b
    2c5a:	7c a5       	ldd	r23, Y+44	; 0x2c
    2c5c:	8d a5       	ldd	r24, Y+45	; 0x2d
    2c5e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2c60:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__divsf3>
    2c64:	a7 96       	adiw	r28, 0x27	; 39
    2c66:	6c af       	std	Y+60, r22	; 0x3c
    2c68:	7d af       	std	Y+61, r23	; 0x3d
    2c6a:	8e af       	std	Y+62, r24	; 0x3e
    2c6c:	9f af       	std	Y+63, r25	; 0x3f
    2c6e:	a7 97       	sbiw	r28, 0x27	; 39
    2c70:	a7 96       	adiw	r28, 0x27	; 39
    2c72:	2c ad       	ldd	r18, Y+60	; 0x3c
    2c74:	3d ad       	ldd	r19, Y+61	; 0x3d
    2c76:	4e ad       	ldd	r20, Y+62	; 0x3e
    2c78:	5f ad       	ldd	r21, Y+63	; 0x3f
    2c7a:	a7 97       	sbiw	r28, 0x27	; 39
    2c7c:	2b 83       	std	Y+3, r18	; 0x03
    2c7e:	3c 83       	std	Y+4, r19	; 0x04
    2c80:	4d 83       	std	Y+5, r20	; 0x05
    2c82:	5e 83       	std	Y+6, r21	; 0x06

00002c84 <.Loc.201>:

    return distance;
    2c84:	8b 81       	ldd	r24, Y+3	; 0x03
    2c86:	9c 81       	ldd	r25, Y+4	; 0x04
    2c88:	ad 81       	ldd	r26, Y+5	; 0x05
    2c8a:	be 81       	ldd	r27, Y+6	; 0x06
    2c8c:	8b ab       	std	Y+51, r24	; 0x33
    2c8e:	9c ab       	std	Y+52, r25	; 0x34
    2c90:	ad ab       	std	Y+53, r26	; 0x35
    2c92:	be ab       	std	Y+54, r27	; 0x36

00002c94 <.Loc.202>:
}
    2c94:	6b a9       	ldd	r22, Y+51	; 0x33
    2c96:	7c a9       	ldd	r23, Y+52	; 0x34
    2c98:	8d a9       	ldd	r24, Y+53	; 0x35
    2c9a:	9e a9       	ldd	r25, Y+54	; 0x36
    2c9c:	ca 59       	subi	r28, 0x9A	; 154
    2c9e:	df 4f       	sbci	r29, 0xFF	; 255
    2ca0:	0f b6       	in	r0, 0x3f	; 63
    2ca2:	f8 94       	cli
    2ca4:	de bf       	out	0x3e, r29	; 62
    2ca6:	0f be       	out	0x3f, r0	; 63
    2ca8:	cd bf       	out	0x3d, r28	; 61
    2caa:	df 91       	pop	r29
    2cac:	cf 91       	pop	r28
    2cae:	08 95       	ret

00002cb0 <__subsf3>:
    2cb0:	50 58       	subi	r21, 0x80	; 128

00002cb2 <__addsf3>:
    2cb2:	bb 27       	eor	r27, r27
    2cb4:	aa 27       	eor	r26, r26
    2cb6:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__addsf3x>
    2cba:	0c 94 e3 17 	jmp	0x2fc6	; 0x2fc6 <__fp_round>

00002cbe <.L^B1>:
    2cbe:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__fp_pscA>
    2cc2:	38 f0       	brcs	.+14     	; 0x2cd2 <.L_nan>
    2cc4:	0e 94 dc 17 	call	0x2fb8	; 0x2fb8 <__fp_pscB>
    2cc8:	20 f0       	brcs	.+8      	; 0x2cd2 <.L_nan>
    2cca:	39 f4       	brne	.+14     	; 0x2cda <.L_inf>
    2ccc:	9f 3f       	cpi	r25, 0xFF	; 255
    2cce:	19 f4       	brne	.+6      	; 0x2cd6 <.L_infB>
    2cd0:	26 f4       	brtc	.+8      	; 0x2cda <.L_inf>

00002cd2 <.L_nan>:
    2cd2:	0c 94 d2 17 	jmp	0x2fa4	; 0x2fa4 <__fp_nan>

00002cd6 <.L_infB>:
    2cd6:	0e f4       	brtc	.+2      	; 0x2cda <.L_inf>
    2cd8:	e0 95       	com	r30

00002cda <.L_inf>:
    2cda:	e7 fb       	bst	r30, 7
    2cdc:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_inf>

00002ce0 <__addsf3x>:
    2ce0:	e9 2f       	mov	r30, r25
    2ce2:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <__fp_split3>
    2ce6:	58 f3       	brcs	.-42     	; 0x2cbe <.L^B1>
    2ce8:	ba 17       	cp	r27, r26
    2cea:	62 07       	cpc	r22, r18
    2cec:	73 07       	cpc	r23, r19
    2cee:	84 07       	cpc	r24, r20
    2cf0:	95 07       	cpc	r25, r21
    2cf2:	20 f0       	brcs	.+8      	; 0x2cfc <.L2^B1>
    2cf4:	79 f4       	brne	.+30     	; 0x2d14 <.L4^B1>
    2cf6:	a6 f5       	brtc	.+104    	; 0x2d60 <.L_add>
    2cf8:	0c 94 16 18 	jmp	0x302c	; 0x302c <__fp_zero>

00002cfc <.L2^B1>:
    2cfc:	0e f4       	brtc	.+2      	; 0x2d00 <.L3^B1>
    2cfe:	e0 95       	com	r30

00002d00 <.L3^B1>:
    2d00:	0b 2e       	mov	r0, r27
    2d02:	ba 2f       	mov	r27, r26
    2d04:	a0 2d       	mov	r26, r0
    2d06:	0b 01       	movw	r0, r22
    2d08:	b9 01       	movw	r22, r18
    2d0a:	90 01       	movw	r18, r0
    2d0c:	0c 01       	movw	r0, r24
    2d0e:	ca 01       	movw	r24, r20
    2d10:	a0 01       	movw	r20, r0
    2d12:	11 24       	eor	r1, r1

00002d14 <.L4^B1>:
    2d14:	ff 27       	eor	r31, r31
    2d16:	59 1b       	sub	r21, r25

00002d18 <.L5^B1>:
    2d18:	99 f0       	breq	.+38     	; 0x2d40 <.L7^B1>
    2d1a:	59 3f       	cpi	r21, 0xF9	; 249
    2d1c:	50 f4       	brcc	.+20     	; 0x2d32 <.L6^B1>
    2d1e:	50 3e       	cpi	r21, 0xE0	; 224
    2d20:	68 f1       	brcs	.+90     	; 0x2d7c <.L_ret>
    2d22:	1a 16       	cp	r1, r26
    2d24:	f0 40       	sbci	r31, 0x00	; 0
    2d26:	a2 2f       	mov	r26, r18
    2d28:	23 2f       	mov	r18, r19
    2d2a:	34 2f       	mov	r19, r20
    2d2c:	44 27       	eor	r20, r20
    2d2e:	58 5f       	subi	r21, 0xF8	; 248
    2d30:	f3 cf       	rjmp	.-26     	; 0x2d18 <.L5^B1>

00002d32 <.L6^B1>:
    2d32:	46 95       	lsr	r20
    2d34:	37 95       	ror	r19
    2d36:	27 95       	ror	r18
    2d38:	a7 95       	ror	r26
    2d3a:	f0 40       	sbci	r31, 0x00	; 0
    2d3c:	53 95       	inc	r21
    2d3e:	c9 f7       	brne	.-14     	; 0x2d32 <.L6^B1>

00002d40 <.L7^B1>:
    2d40:	7e f4       	brtc	.+30     	; 0x2d60 <.L_add>
    2d42:	1f 16       	cp	r1, r31
    2d44:	ba 0b       	sbc	r27, r26
    2d46:	62 0b       	sbc	r22, r18
    2d48:	73 0b       	sbc	r23, r19
    2d4a:	84 0b       	sbc	r24, r20
    2d4c:	ba f0       	brmi	.+46     	; 0x2d7c <.L_ret>

00002d4e <.L8^B1>:
    2d4e:	91 50       	subi	r25, 0x01	; 1
    2d50:	a1 f0       	breq	.+40     	; 0x2d7a <.L9^B1>
    2d52:	ff 0f       	add	r31, r31
    2d54:	bb 1f       	adc	r27, r27
    2d56:	66 1f       	adc	r22, r22
    2d58:	77 1f       	adc	r23, r23
    2d5a:	88 1f       	adc	r24, r24
    2d5c:	c2 f7       	brpl	.-16     	; 0x2d4e <.L8^B1>
    2d5e:	0e c0       	rjmp	.+28     	; 0x2d7c <.L_ret>

00002d60 <.L_add>:
    2d60:	ba 0f       	add	r27, r26
    2d62:	62 1f       	adc	r22, r18
    2d64:	73 1f       	adc	r23, r19
    2d66:	84 1f       	adc	r24, r20
    2d68:	48 f4       	brcc	.+18     	; 0x2d7c <.L_ret>
    2d6a:	87 95       	ror	r24
    2d6c:	77 95       	ror	r23
    2d6e:	67 95       	ror	r22
    2d70:	b7 95       	ror	r27
    2d72:	f7 95       	ror	r31
    2d74:	9e 3f       	cpi	r25, 0xFE	; 254
    2d76:	08 f0       	brcs	.+2      	; 0x2d7a <.L9^B1>
    2d78:	b0 cf       	rjmp	.-160    	; 0x2cda <.L_inf>

00002d7a <.L9^B1>:
    2d7a:	93 95       	inc	r25

00002d7c <.L_ret>:
    2d7c:	88 0f       	add	r24, r24
    2d7e:	08 f0       	brcs	.+2      	; 0x2d82 <.L1^B1>
    2d80:	99 27       	eor	r25, r25

00002d82 <.L1^B1>:
    2d82:	ee 0f       	add	r30, r30
    2d84:	97 95       	ror	r25
    2d86:	87 95       	ror	r24
    2d88:	08 95       	ret

00002d8a <__cmpsf2>:
    2d8a:	0e 94 a8 17 	call	0x2f50	; 0x2f50 <__fp_cmp>
    2d8e:	08 f4       	brcc	.+2      	; 0x2d92 <.L1^B1>
    2d90:	81 e0       	ldi	r24, 0x01	; 1

00002d92 <.L1^B1>:
    2d92:	08 95       	ret

00002d94 <__divsf3>:
    2d94:	0e 94 de 16 	call	0x2dbc	; 0x2dbc <__divsf3x>
    2d98:	0c 94 e3 17 	jmp	0x2fc6	; 0x2fc6 <__fp_round>

00002d9c <.L^B1>:
    2d9c:	0e 94 dc 17 	call	0x2fb8	; 0x2fb8 <__fp_pscB>
    2da0:	58 f0       	brcs	.+22     	; 0x2db8 <.L_nan>
    2da2:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__fp_pscA>
    2da6:	40 f0       	brcs	.+16     	; 0x2db8 <.L_nan>
    2da8:	29 f4       	brne	.+10     	; 0x2db4 <.L_zr>
    2daa:	5f 3f       	cpi	r21, 0xFF	; 255
    2dac:	29 f0       	breq	.+10     	; 0x2db8 <.L_nan>

00002dae <.L_inf>:
    2dae:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_inf>

00002db2 <.L1^B1>:
    2db2:	51 11       	cpse	r21, r1

00002db4 <.L_zr>:
    2db4:	0c 94 17 18 	jmp	0x302e	; 0x302e <__fp_szero>

00002db8 <.L_nan>:
    2db8:	0c 94 d2 17 	jmp	0x2fa4	; 0x2fa4 <__fp_nan>

00002dbc <__divsf3x>:
    2dbc:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <__fp_split3>
    2dc0:	68 f3       	brcs	.-38     	; 0x2d9c <.L^B1>

00002dc2 <__divsf3_pse>:
    2dc2:	99 23       	and	r25, r25
    2dc4:	b1 f3       	breq	.-20     	; 0x2db2 <.L1^B1>
    2dc6:	55 23       	and	r21, r21
    2dc8:	91 f3       	breq	.-28     	; 0x2dae <.L_inf>
    2dca:	95 1b       	sub	r25, r21
    2dcc:	55 0b       	sbc	r21, r21
    2dce:	bb 27       	eor	r27, r27
    2dd0:	aa 27       	eor	r26, r26

00002dd2 <.L2^B1>:
    2dd2:	62 17       	cp	r22, r18
    2dd4:	73 07       	cpc	r23, r19
    2dd6:	84 07       	cpc	r24, r20
    2dd8:	38 f0       	brcs	.+14     	; 0x2de8 <.L3^B1>
    2dda:	9f 5f       	subi	r25, 0xFF	; 255
    2ddc:	5f 4f       	sbci	r21, 0xFF	; 255
    2dde:	22 0f       	add	r18, r18
    2de0:	33 1f       	adc	r19, r19
    2de2:	44 1f       	adc	r20, r20
    2de4:	aa 1f       	adc	r26, r26
    2de6:	a9 f3       	breq	.-22     	; 0x2dd2 <.L2^B1>

00002de8 <.L3^B1>:
    2de8:	35 d0       	rcall	.+106    	; 0x2e54 <.L_div>
    2dea:	0e 2e       	mov	r0, r30
    2dec:	3a f0       	brmi	.+14     	; 0x2dfc <.L5^B1>

00002dee <.L4^B1>:
    2dee:	e0 e8       	ldi	r30, 0x80	; 128
    2df0:	32 d0       	rcall	.+100    	; 0x2e56 <.L_div1>
    2df2:	91 50       	subi	r25, 0x01	; 1
    2df4:	50 40       	sbci	r21, 0x00	; 0
    2df6:	e6 95       	lsr	r30
    2df8:	00 1c       	adc	r0, r0
    2dfa:	ca f7       	brpl	.-14     	; 0x2dee <.L4^B1>

00002dfc <.L5^B1>:
    2dfc:	2b d0       	rcall	.+86     	; 0x2e54 <.L_div>
    2dfe:	fe 2f       	mov	r31, r30
    2e00:	29 d0       	rcall	.+82     	; 0x2e54 <.L_div>
    2e02:	66 0f       	add	r22, r22
    2e04:	77 1f       	adc	r23, r23
    2e06:	88 1f       	adc	r24, r24
    2e08:	bb 1f       	adc	r27, r27
    2e0a:	26 17       	cp	r18, r22
    2e0c:	37 07       	cpc	r19, r23
    2e0e:	48 07       	cpc	r20, r24
    2e10:	ab 07       	cpc	r26, r27
    2e12:	b0 e8       	ldi	r27, 0x80	; 128
    2e14:	09 f0       	breq	.+2      	; 0x2e18 <.L4^B2>
    2e16:	bb 0b       	sbc	r27, r27

00002e18 <.L4^B2>:
    2e18:	80 2d       	mov	r24, r0
    2e1a:	bf 01       	movw	r22, r30
    2e1c:	ff 27       	eor	r31, r31
    2e1e:	93 58       	subi	r25, 0x83	; 131
    2e20:	5f 4f       	sbci	r21, 0xFF	; 255
    2e22:	3a f0       	brmi	.+14     	; 0x2e32 <.L13^B1>
    2e24:	9e 3f       	cpi	r25, 0xFE	; 254
    2e26:	51 05       	cpc	r21, r1
    2e28:	78 f0       	brcs	.+30     	; 0x2e48 <.L15^B1>
    2e2a:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_inf>

00002e2e <.L12^B1>:
    2e2e:	0c 94 17 18 	jmp	0x302e	; 0x302e <__fp_szero>

00002e32 <.L13^B1>:
    2e32:	5f 3f       	cpi	r21, 0xFF	; 255
    2e34:	e4 f3       	brlt	.-8      	; 0x2e2e <.L12^B1>
    2e36:	98 3e       	cpi	r25, 0xE8	; 232
    2e38:	d4 f3       	brlt	.-12     	; 0x2e2e <.L12^B1>

00002e3a <.L14^B1>:
    2e3a:	86 95       	lsr	r24
    2e3c:	77 95       	ror	r23
    2e3e:	67 95       	ror	r22
    2e40:	b7 95       	ror	r27
    2e42:	f7 95       	ror	r31
    2e44:	9f 5f       	subi	r25, 0xFF	; 255
    2e46:	c9 f7       	brne	.-14     	; 0x2e3a <.L14^B1>

00002e48 <.L15^B1>:
    2e48:	88 0f       	add	r24, r24
    2e4a:	91 1d       	adc	r25, r1
    2e4c:	96 95       	lsr	r25
    2e4e:	87 95       	ror	r24
    2e50:	97 f9       	bld	r25, 7
    2e52:	08 95       	ret

00002e54 <.L_div>:
    2e54:	e1 e0       	ldi	r30, 0x01	; 1

00002e56 <.L_div1>:
    2e56:	66 0f       	add	r22, r22
    2e58:	77 1f       	adc	r23, r23
    2e5a:	88 1f       	adc	r24, r24
    2e5c:	bb 1f       	adc	r27, r27
    2e5e:	62 17       	cp	r22, r18
    2e60:	73 07       	cpc	r23, r19
    2e62:	84 07       	cpc	r24, r20
    2e64:	ba 07       	cpc	r27, r26
    2e66:	20 f0       	brcs	.+8      	; 0x2e70 <.L2^B2>
    2e68:	62 1b       	sub	r22, r18
    2e6a:	73 0b       	sbc	r23, r19
    2e6c:	84 0b       	sbc	r24, r20
    2e6e:	ba 0b       	sbc	r27, r26

00002e70 <.L2^B2>:
    2e70:	ee 1f       	adc	r30, r30
    2e72:	88 f7       	brcc	.-30     	; 0x2e56 <.L_div1>
    2e74:	e0 95       	com	r30
    2e76:	08 95       	ret

00002e78 <__fixunssfsi>:
    2e78:	0e 94 fc 17 	call	0x2ff8	; 0x2ff8 <__fp_splitA>
    2e7c:	88 f0       	brcs	.+34     	; 0x2ea0 <.L_err>
    2e7e:	9f 57       	subi	r25, 0x7F	; 127
    2e80:	98 f0       	brcs	.+38     	; 0x2ea8 <.L_zr>
    2e82:	b9 2f       	mov	r27, r25
    2e84:	99 27       	eor	r25, r25
    2e86:	b7 51       	subi	r27, 0x17	; 23
    2e88:	b0 f0       	brcs	.+44     	; 0x2eb6 <.L4^B1>
    2e8a:	e1 f0       	breq	.+56     	; 0x2ec4 <.L_sign>

00002e8c <.L1^B1>:
    2e8c:	66 0f       	add	r22, r22
    2e8e:	77 1f       	adc	r23, r23
    2e90:	88 1f       	adc	r24, r24
    2e92:	99 1f       	adc	r25, r25
    2e94:	1a f0       	brmi	.+6      	; 0x2e9c <.L2^B1>
    2e96:	ba 95       	dec	r27
    2e98:	c9 f7       	brne	.-14     	; 0x2e8c <.L1^B1>
    2e9a:	14 c0       	rjmp	.+40     	; 0x2ec4 <.L_sign>

00002e9c <.L2^B1>:
    2e9c:	b1 30       	cpi	r27, 0x01	; 1
    2e9e:	91 f0       	breq	.+36     	; 0x2ec4 <.L_sign>

00002ea0 <.L_err>:
    2ea0:	0e 94 16 18 	call	0x302c	; 0x302c <__fp_zero>
    2ea4:	b1 e0       	ldi	r27, 0x01	; 1
    2ea6:	08 95       	ret

00002ea8 <.L_zr>:
    2ea8:	0c 94 16 18 	jmp	0x302c	; 0x302c <__fp_zero>

00002eac <.L3^B1>:
    2eac:	67 2f       	mov	r22, r23
    2eae:	78 2f       	mov	r23, r24
    2eb0:	88 27       	eor	r24, r24
    2eb2:	b8 5f       	subi	r27, 0xF8	; 248
    2eb4:	39 f0       	breq	.+14     	; 0x2ec4 <.L_sign>

00002eb6 <.L4^B1>:
    2eb6:	b9 3f       	cpi	r27, 0xF9	; 249
    2eb8:	cc f3       	brlt	.-14     	; 0x2eac <.L3^B1>

00002eba <.L5^B1>:
    2eba:	86 95       	lsr	r24
    2ebc:	77 95       	ror	r23
    2ebe:	67 95       	ror	r22
    2ec0:	b3 95       	inc	r27
    2ec2:	d9 f7       	brne	.-10     	; 0x2eba <.L5^B1>

00002ec4 <.L_sign>:
    2ec4:	3e f4       	brtc	.+14     	; 0x2ed4 <.L6^B1>
    2ec6:	90 95       	com	r25
    2ec8:	80 95       	com	r24
    2eca:	70 95       	com	r23
    2ecc:	61 95       	neg	r22
    2ece:	7f 4f       	sbci	r23, 0xFF	; 255
    2ed0:	8f 4f       	sbci	r24, 0xFF	; 255
    2ed2:	9f 4f       	sbci	r25, 0xFF	; 255

00002ed4 <.L6^B1>:
    2ed4:	08 95       	ret

00002ed6 <__floatunsisf>:
    2ed6:	e8 94       	clt
    2ed8:	09 c0       	rjmp	.+18     	; 0x2eec <.L1^B1>

00002eda <__floatsisf>:
    2eda:	97 fb       	bst	r25, 7
    2edc:	3e f4       	brtc	.+14     	; 0x2eec <.L1^B1>
    2ede:	90 95       	com	r25
    2ee0:	80 95       	com	r24
    2ee2:	70 95       	com	r23
    2ee4:	61 95       	neg	r22
    2ee6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ee8:	8f 4f       	sbci	r24, 0xFF	; 255
    2eea:	9f 4f       	sbci	r25, 0xFF	; 255

00002eec <.L1^B1>:
    2eec:	99 23       	and	r25, r25
    2eee:	a9 f0       	breq	.+42     	; 0x2f1a <.L4^B1>
    2ef0:	f9 2f       	mov	r31, r25
    2ef2:	96 e9       	ldi	r25, 0x96	; 150
    2ef4:	bb 27       	eor	r27, r27

00002ef6 <.L2^B1>:
    2ef6:	93 95       	inc	r25
    2ef8:	f6 95       	lsr	r31
    2efa:	87 95       	ror	r24
    2efc:	77 95       	ror	r23
    2efe:	67 95       	ror	r22
    2f00:	b7 95       	ror	r27
    2f02:	f1 11       	cpse	r31, r1
    2f04:	f8 cf       	rjmp	.-16     	; 0x2ef6 <.L2^B1>
    2f06:	fa f4       	brpl	.+62     	; 0x2f46 <.L_pack>
    2f08:	bb 0f       	add	r27, r27
    2f0a:	11 f4       	brne	.+4      	; 0x2f10 <.L3^B1>
    2f0c:	60 ff       	sbrs	r22, 0
    2f0e:	1b c0       	rjmp	.+54     	; 0x2f46 <.L_pack>

00002f10 <.L3^B1>:
    2f10:	6f 5f       	subi	r22, 0xFF	; 255
    2f12:	7f 4f       	sbci	r23, 0xFF	; 255
    2f14:	8f 4f       	sbci	r24, 0xFF	; 255
    2f16:	9f 4f       	sbci	r25, 0xFF	; 255
    2f18:	16 c0       	rjmp	.+44     	; 0x2f46 <.L_pack>

00002f1a <.L4^B1>:
    2f1a:	88 23       	and	r24, r24
    2f1c:	11 f0       	breq	.+4      	; 0x2f22 <.L5^B1>
    2f1e:	96 e9       	ldi	r25, 0x96	; 150
    2f20:	11 c0       	rjmp	.+34     	; 0x2f44 <.L8^B1>

00002f22 <.L5^B1>:
    2f22:	77 23       	and	r23, r23
    2f24:	21 f0       	breq	.+8      	; 0x2f2e <.L6^B1>
    2f26:	9e e8       	ldi	r25, 0x8E	; 142
    2f28:	87 2f       	mov	r24, r23
    2f2a:	76 2f       	mov	r23, r22
    2f2c:	05 c0       	rjmp	.+10     	; 0x2f38 <.L7^B1>

00002f2e <.L6^B1>:
    2f2e:	66 23       	and	r22, r22
    2f30:	71 f0       	breq	.+28     	; 0x2f4e <.L9^B1>
    2f32:	96 e8       	ldi	r25, 0x86	; 134
    2f34:	86 2f       	mov	r24, r22
    2f36:	70 e0       	ldi	r23, 0x00	; 0

00002f38 <.L7^B1>:
    2f38:	60 e0       	ldi	r22, 0x00	; 0
    2f3a:	2a f0       	brmi	.+10     	; 0x2f46 <.L_pack>

00002f3c <.L10^B1>:
    2f3c:	9a 95       	dec	r25
    2f3e:	66 0f       	add	r22, r22
    2f40:	77 1f       	adc	r23, r23
    2f42:	88 1f       	adc	r24, r24

00002f44 <.L8^B1>:
    2f44:	da f7       	brpl	.-10     	; 0x2f3c <.L10^B1>

00002f46 <.L_pack>:
    2f46:	88 0f       	add	r24, r24
    2f48:	96 95       	lsr	r25
    2f4a:	87 95       	ror	r24
    2f4c:	97 f9       	bld	r25, 7

00002f4e <.L9^B1>:
    2f4e:	08 95       	ret

00002f50 <__fp_cmp>:
    2f50:	99 0f       	add	r25, r25
    2f52:	00 08       	sbc	r0, r0
    2f54:	55 0f       	add	r21, r21
    2f56:	aa 0b       	sbc	r26, r26
    2f58:	e0 e8       	ldi	r30, 0x80	; 128
    2f5a:	fe ef       	ldi	r31, 0xFE	; 254
    2f5c:	16 16       	cp	r1, r22
    2f5e:	17 06       	cpc	r1, r23
    2f60:	e8 07       	cpc	r30, r24
    2f62:	f9 07       	cpc	r31, r25
    2f64:	c0 f0       	brcs	.+48     	; 0x2f96 <.L9^B1>
    2f66:	12 16       	cp	r1, r18
    2f68:	13 06       	cpc	r1, r19
    2f6a:	e4 07       	cpc	r30, r20
    2f6c:	f5 07       	cpc	r31, r21
    2f6e:	98 f0       	brcs	.+38     	; 0x2f96 <.L9^B1>
    2f70:	62 1b       	sub	r22, r18
    2f72:	73 0b       	sbc	r23, r19
    2f74:	84 0b       	sbc	r24, r20
    2f76:	95 0b       	sbc	r25, r21
    2f78:	39 f4       	brne	.+14     	; 0x2f88 <.L1^B1>
    2f7a:	0a 26       	eor	r0, r26
    2f7c:	61 f0       	breq	.+24     	; 0x2f96 <.L9^B1>
    2f7e:	23 2b       	or	r18, r19
    2f80:	24 2b       	or	r18, r20
    2f82:	25 2b       	or	r18, r21
    2f84:	21 f4       	brne	.+8      	; 0x2f8e <.L2^B1>
    2f86:	08 95       	ret

00002f88 <.L1^B1>:
    2f88:	0a 26       	eor	r0, r26
    2f8a:	09 f4       	brne	.+2      	; 0x2f8e <.L2^B1>
    2f8c:	a1 40       	sbci	r26, 0x01	; 1

00002f8e <.L2^B1>:
    2f8e:	a6 95       	lsr	r26
    2f90:	8f ef       	ldi	r24, 0xFF	; 255
    2f92:	81 1d       	adc	r24, r1
    2f94:	81 1d       	adc	r24, r1

00002f96 <.L9^B1>:
    2f96:	08 95       	ret

00002f98 <__fp_inf>:
    2f98:	97 f9       	bld	r25, 7
    2f9a:	9f 67       	ori	r25, 0x7F	; 127
    2f9c:	80 e8       	ldi	r24, 0x80	; 128
    2f9e:	70 e0       	ldi	r23, 0x00	; 0
    2fa0:	60 e0       	ldi	r22, 0x00	; 0
    2fa2:	08 95       	ret

00002fa4 <__fp_nan>:
    2fa4:	9f ef       	ldi	r25, 0xFF	; 255
    2fa6:	80 ec       	ldi	r24, 0xC0	; 192
    2fa8:	08 95       	ret

00002faa <__fp_pscA>:
    2faa:	00 24       	eor	r0, r0
    2fac:	0a 94       	dec	r0
    2fae:	16 16       	cp	r1, r22
    2fb0:	17 06       	cpc	r1, r23
    2fb2:	18 06       	cpc	r1, r24
    2fb4:	09 06       	cpc	r0, r25
    2fb6:	08 95       	ret

00002fb8 <__fp_pscB>:
    2fb8:	00 24       	eor	r0, r0
    2fba:	0a 94       	dec	r0
    2fbc:	12 16       	cp	r1, r18
    2fbe:	13 06       	cpc	r1, r19
    2fc0:	14 06       	cpc	r1, r20
    2fc2:	05 06       	cpc	r0, r21
    2fc4:	08 95       	ret

00002fc6 <__fp_round>:
    2fc6:	09 2e       	mov	r0, r25
    2fc8:	03 94       	inc	r0
    2fca:	00 0c       	add	r0, r0
    2fcc:	11 f4       	brne	.+4      	; 0x2fd2 <.L1^B1>
    2fce:	88 23       	and	r24, r24
    2fd0:	52 f0       	brmi	.+20     	; 0x2fe6 <.L3^B1>

00002fd2 <.L1^B1>:
    2fd2:	bb 0f       	add	r27, r27
    2fd4:	40 f4       	brcc	.+16     	; 0x2fe6 <.L3^B1>
    2fd6:	bf 2b       	or	r27, r31
    2fd8:	11 f4       	brne	.+4      	; 0x2fde <.L2^B1>
    2fda:	60 ff       	sbrs	r22, 0
    2fdc:	04 c0       	rjmp	.+8      	; 0x2fe6 <.L3^B1>

00002fde <.L2^B1>:
    2fde:	6f 5f       	subi	r22, 0xFF	; 255
    2fe0:	7f 4f       	sbci	r23, 0xFF	; 255
    2fe2:	8f 4f       	sbci	r24, 0xFF	; 255
    2fe4:	9f 4f       	sbci	r25, 0xFF	; 255

00002fe6 <.L3^B1>:
    2fe6:	08 95       	ret

00002fe8 <__fp_split3>:
    2fe8:	57 fd       	sbrc	r21, 7
    2fea:	90 58       	subi	r25, 0x80	; 128
    2fec:	44 0f       	add	r20, r20
    2fee:	55 1f       	adc	r21, r21
    2ff0:	59 f0       	breq	.+22     	; 0x3008 <.L4^B1>
    2ff2:	5f 3f       	cpi	r21, 0xFF	; 255
    2ff4:	71 f0       	breq	.+28     	; 0x3012 <.L5^B1>

00002ff6 <.L1^B1>:
    2ff6:	47 95       	ror	r20

00002ff8 <__fp_splitA>:
    2ff8:	88 0f       	add	r24, r24
    2ffa:	97 fb       	bst	r25, 7
    2ffc:	99 1f       	adc	r25, r25
    2ffe:	61 f0       	breq	.+24     	; 0x3018 <.L6^B1>
    3000:	9f 3f       	cpi	r25, 0xFF	; 255
    3002:	79 f0       	breq	.+30     	; 0x3022 <.L7^B1>

00003004 <.L3^B1>:
    3004:	87 95       	ror	r24
    3006:	08 95       	ret

00003008 <.L4^B1>:
    3008:	12 16       	cp	r1, r18
    300a:	13 06       	cpc	r1, r19
    300c:	14 06       	cpc	r1, r20
    300e:	55 1f       	adc	r21, r21
    3010:	f2 cf       	rjmp	.-28     	; 0x2ff6 <.L1^B1>

00003012 <.L5^B1>:
    3012:	46 95       	lsr	r20
    3014:	f1 df       	rcall	.-30     	; 0x2ff8 <__fp_splitA>
    3016:	08 c0       	rjmp	.+16     	; 0x3028 <.L8^B1>

00003018 <.L6^B1>:
    3018:	16 16       	cp	r1, r22
    301a:	17 06       	cpc	r1, r23
    301c:	18 06       	cpc	r1, r24
    301e:	99 1f       	adc	r25, r25
    3020:	f1 cf       	rjmp	.-30     	; 0x3004 <.L3^B1>

00003022 <.L7^B1>:
    3022:	86 95       	lsr	r24
    3024:	71 05       	cpc	r23, r1
    3026:	61 05       	cpc	r22, r1

00003028 <.L8^B1>:
    3028:	08 94       	sec
    302a:	08 95       	ret

0000302c <__fp_zero>:
    302c:	e8 94       	clt

0000302e <__fp_szero>:
    302e:	bb 27       	eor	r27, r27
    3030:	66 27       	eor	r22, r22
    3032:	77 27       	eor	r23, r23
    3034:	cb 01       	movw	r24, r22
    3036:	97 f9       	bld	r25, 7
    3038:	08 95       	ret

0000303a <__gesf2>:
    303a:	0e 94 a8 17 	call	0x2f50	; 0x2f50 <__fp_cmp>
    303e:	08 f4       	brcc	.+2      	; 0x3042 <.L1^B1>
    3040:	8f ef       	ldi	r24, 0xFF	; 255

00003042 <.L1^B1>:
    3042:	08 95       	ret

00003044 <__mulsf3>:
    3044:	0e 94 35 18 	call	0x306a	; 0x306a <__mulsf3x>
    3048:	0c 94 e3 17 	jmp	0x2fc6	; 0x2fc6 <__fp_round>

0000304c <.L^B1>:
    304c:	0e 94 d5 17 	call	0x2faa	; 0x2faa <__fp_pscA>
    3050:	38 f0       	brcs	.+14     	; 0x3060 <.L1^B1>
    3052:	0e 94 dc 17 	call	0x2fb8	; 0x2fb8 <__fp_pscB>
    3056:	20 f0       	brcs	.+8      	; 0x3060 <.L1^B1>
    3058:	95 23       	and	r25, r21
    305a:	11 f0       	breq	.+4      	; 0x3060 <.L1^B1>
    305c:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_inf>

00003060 <.L1^B1>:
    3060:	0c 94 d2 17 	jmp	0x2fa4	; 0x2fa4 <__fp_nan>

00003064 <.L2^B1>:
    3064:	11 24       	eor	r1, r1
    3066:	0c 94 17 18 	jmp	0x302e	; 0x302e <__fp_szero>

0000306a <__mulsf3x>:
    306a:	0e 94 f4 17 	call	0x2fe8	; 0x2fe8 <__fp_split3>
    306e:	70 f3       	brcs	.-36     	; 0x304c <.L^B1>

00003070 <__mulsf3_pse>:
    3070:	95 9f       	mul	r25, r21
    3072:	c1 f3       	breq	.-16     	; 0x3064 <.L2^B1>
    3074:	95 0f       	add	r25, r21
    3076:	50 e0       	ldi	r21, 0x00	; 0
    3078:	55 1f       	adc	r21, r21
    307a:	62 9f       	mul	r22, r18
    307c:	f0 01       	movw	r30, r0
    307e:	72 9f       	mul	r23, r18
    3080:	bb 27       	eor	r27, r27
    3082:	f0 0d       	add	r31, r0
    3084:	b1 1d       	adc	r27, r1
    3086:	63 9f       	mul	r22, r19
    3088:	aa 27       	eor	r26, r26
    308a:	f0 0d       	add	r31, r0
    308c:	b1 1d       	adc	r27, r1
    308e:	aa 1f       	adc	r26, r26
    3090:	64 9f       	mul	r22, r20
    3092:	66 27       	eor	r22, r22
    3094:	b0 0d       	add	r27, r0
    3096:	a1 1d       	adc	r26, r1
    3098:	66 1f       	adc	r22, r22
    309a:	82 9f       	mul	r24, r18
    309c:	22 27       	eor	r18, r18
    309e:	b0 0d       	add	r27, r0
    30a0:	a1 1d       	adc	r26, r1
    30a2:	62 1f       	adc	r22, r18
    30a4:	73 9f       	mul	r23, r19
    30a6:	b0 0d       	add	r27, r0
    30a8:	a1 1d       	adc	r26, r1
    30aa:	62 1f       	adc	r22, r18
    30ac:	83 9f       	mul	r24, r19
    30ae:	a0 0d       	add	r26, r0
    30b0:	61 1d       	adc	r22, r1
    30b2:	22 1f       	adc	r18, r18
    30b4:	74 9f       	mul	r23, r20
    30b6:	33 27       	eor	r19, r19
    30b8:	a0 0d       	add	r26, r0
    30ba:	61 1d       	adc	r22, r1
    30bc:	23 1f       	adc	r18, r19
    30be:	84 9f       	mul	r24, r20
    30c0:	60 0d       	add	r22, r0
    30c2:	21 1d       	adc	r18, r1
    30c4:	82 2f       	mov	r24, r18
    30c6:	76 2f       	mov	r23, r22
    30c8:	6a 2f       	mov	r22, r26
    30ca:	11 24       	eor	r1, r1
    30cc:	9f 57       	subi	r25, 0x7F	; 127
    30ce:	50 40       	sbci	r21, 0x00	; 0
    30d0:	9a f0       	brmi	.+38     	; 0x30f8 <.L13^B1>
    30d2:	f1 f0       	breq	.+60     	; 0x3110 <.L15^B1>

000030d4 <.L10^B1>:
    30d4:	88 23       	and	r24, r24
    30d6:	4a f0       	brmi	.+18     	; 0x30ea <.L11^B1>
    30d8:	ee 0f       	add	r30, r30
    30da:	ff 1f       	adc	r31, r31
    30dc:	bb 1f       	adc	r27, r27
    30de:	66 1f       	adc	r22, r22
    30e0:	77 1f       	adc	r23, r23
    30e2:	88 1f       	adc	r24, r24
    30e4:	91 50       	subi	r25, 0x01	; 1
    30e6:	50 40       	sbci	r21, 0x00	; 0
    30e8:	a9 f7       	brne	.-22     	; 0x30d4 <.L10^B1>

000030ea <.L11^B1>:
    30ea:	9e 3f       	cpi	r25, 0xFE	; 254
    30ec:	51 05       	cpc	r21, r1
    30ee:	80 f0       	brcs	.+32     	; 0x3110 <.L15^B1>
    30f0:	0c 94 cc 17 	jmp	0x2f98	; 0x2f98 <__fp_inf>

000030f4 <.L12^B1>:
    30f4:	0c 94 17 18 	jmp	0x302e	; 0x302e <__fp_szero>

000030f8 <.L13^B1>:
    30f8:	5f 3f       	cpi	r21, 0xFF	; 255
    30fa:	e4 f3       	brlt	.-8      	; 0x30f4 <.L12^B1>
    30fc:	98 3e       	cpi	r25, 0xE8	; 232
    30fe:	d4 f3       	brlt	.-12     	; 0x30f4 <.L12^B1>

00003100 <.L14^B1>:
    3100:	86 95       	lsr	r24
    3102:	77 95       	ror	r23
    3104:	67 95       	ror	r22
    3106:	b7 95       	ror	r27
    3108:	f7 95       	ror	r31
    310a:	e7 95       	ror	r30
    310c:	9f 5f       	subi	r25, 0xFF	; 255
    310e:	c1 f7       	brne	.-16     	; 0x3100 <.L14^B1>

00003110 <.L15^B1>:
    3110:	fe 2b       	or	r31, r30
    3112:	88 0f       	add	r24, r24
    3114:	91 1d       	adc	r25, r1
    3116:	96 95       	lsr	r25
    3118:	87 95       	ror	r24
    311a:	97 f9       	bld	r25, 7
    311c:	08 95       	ret

0000311e <_exit>:
    311e:	f8 94       	cli

00003120 <__stop_program>:
    3120:	ff cf       	rjmp	.-2      	; 0x3120 <__stop_program>
