
bin\Debug\agv.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00001378  0000140c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001378  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  0000140c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  0000140f  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001424  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000098  00000000  00000000  00001468  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0000137c  00000000  00000000  00001500  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000e55  00000000  00000000  0000287c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00000b62  00000000  00000000  000036d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000274  00000000  00000000  00004234  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000659  00000000  00000000  000044a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 000001b2  00000000  00000000  00004b01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
       c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
      e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60
      f4:	0e 94 27 04 	call	0x84e	; 0x84e <main>
      f8:	0c 94 ba 09 	jmp	0x1374	; 0x1374 <_exit>

000000fc <__bad_interrupt>:
      fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <init_motors>:
#include <avr/interrupt.h>
#include <util/delay.h>



void init_motors() {
     100:	cf 93       	push	r28
     102:	df 93       	push	r29
     104:	cd b7       	in	r28, 0x3d	; 61
     106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
    // Set IN1, IN2 as output
    DDRL |= (1 << IN1) | (1 << IN2);
     108:	8a e0       	ldi	r24, 0x0A	; 10
     10a:	91 e0       	ldi	r25, 0x01	; 1
     10c:	fc 01       	movw	r30, r24
     10e:	20 81       	ld	r18, Z
     110:	8a e0       	ldi	r24, 0x0A	; 10
     112:	91 e0       	ldi	r25, 0x01	; 1

00000114 <.Loc.2>:
     114:	25 60       	ori	r18, 0x05	; 5
     116:	fc 01       	movw	r30, r24
     118:	20 83       	st	Z, r18

0000011a <.Loc.3>:
    // Set IN3, IN4 as output
    DDRB |= (1 << IN3) | (1 << IN4);
     11a:	84 e2       	ldi	r24, 0x24	; 36
     11c:	90 e0       	ldi	r25, 0x00	; 0
     11e:	fc 01       	movw	r30, r24
     120:	20 81       	ld	r18, Z
     122:	84 e2       	ldi	r24, 0x24	; 36
     124:	90 e0       	ldi	r25, 0x00	; 0

00000126 <.Loc.4>:
     126:	25 60       	ori	r18, 0x05	; 5
     128:	fc 01       	movw	r30, r24
     12a:	20 83       	st	Z, r18

0000012c <.Loc.5>:

    // Set EN_A and EN_B as output for PWM
    DDRH |= (1 << EN_A) | (1 << EN_B);
     12c:	81 e0       	ldi	r24, 0x01	; 1
     12e:	91 e0       	ldi	r25, 0x01	; 1
     130:	fc 01       	movw	r30, r24
     132:	20 81       	ld	r18, Z
     134:	81 e0       	ldi	r24, 0x01	; 1
     136:	91 e0       	ldi	r25, 0x01	; 1

00000138 <.Loc.6>:
     138:	28 64       	ori	r18, 0x48	; 72
     13a:	fc 01       	movw	r30, r24
     13c:	20 83       	st	Z, r18

0000013e <.Loc.7>:

    // Initialize Timer2 for PWM on EN_A (PH6)
    TCCR2A |= (1 << WGM20) | (1 << WGM21); // Fast PWM
     13e:	80 eb       	ldi	r24, 0xB0	; 176
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	fc 01       	movw	r30, r24
     144:	20 81       	ld	r18, Z
     146:	80 eb       	ldi	r24, 0xB0	; 176
     148:	90 e0       	ldi	r25, 0x00	; 0

0000014a <.Loc.8>:
     14a:	23 60       	ori	r18, 0x03	; 3
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18

00000150 <.Loc.9>:
    TCCR2A |= (1 << COM2B1); // Clear OC2B on Compare Match, set at BOTTOM (non-inverting mode)
     150:	80 eb       	ldi	r24, 0xB0	; 176
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	fc 01       	movw	r30, r24
     156:	20 81       	ld	r18, Z
     158:	80 eb       	ldi	r24, 0xB0	; 176
     15a:	90 e0       	ldi	r25, 0x00	; 0

0000015c <.Loc.10>:
     15c:	20 62       	ori	r18, 0x20	; 32
     15e:	fc 01       	movw	r30, r24
     160:	20 83       	st	Z, r18

00000162 <.Loc.11>:
    TCCR2B |= (1 << CS21); // Prescaler 8
     162:	81 eb       	ldi	r24, 0xB1	; 177
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	fc 01       	movw	r30, r24
     168:	20 81       	ld	r18, Z
     16a:	81 eb       	ldi	r24, 0xB1	; 177
     16c:	90 e0       	ldi	r25, 0x00	; 0

0000016e <.Loc.12>:
     16e:	22 60       	ori	r18, 0x02	; 2
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18

00000174 <.Loc.13>:

    // Initialize Timer3 for PWM on EN_B (PH3)
    TCCR3A |= (1 << WGM30) | (1 << WGM31); // Fast PWM, 8-bit
     174:	80 e9       	ldi	r24, 0x90	; 144
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	fc 01       	movw	r30, r24
     17a:	20 81       	ld	r18, Z
     17c:	80 e9       	ldi	r24, 0x90	; 144
     17e:	90 e0       	ldi	r25, 0x00	; 0

00000180 <.Loc.14>:
     180:	23 60       	ori	r18, 0x03	; 3
     182:	fc 01       	movw	r30, r24
     184:	20 83       	st	Z, r18

00000186 <.Loc.15>:
    TCCR3A |= (1 << COM3A1); // Clear OC3A on Compare Match, set at BOTTOM (non-inverting mode)
     186:	80 e9       	ldi	r24, 0x90	; 144
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	fc 01       	movw	r30, r24
     18c:	20 81       	ld	r18, Z
     18e:	80 e9       	ldi	r24, 0x90	; 144
     190:	90 e0       	ldi	r25, 0x00	; 0

00000192 <.Loc.16>:
     192:	20 68       	ori	r18, 0x80	; 128
     194:	fc 01       	movw	r30, r24
     196:	20 83       	st	Z, r18

00000198 <.Loc.17>:
    TCCR3B |= (1 << WGM32) | (1 << CS31); // Prescaler 8
     198:	81 e9       	ldi	r24, 0x91	; 145
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	fc 01       	movw	r30, r24
     19e:	20 81       	ld	r18, Z
     1a0:	81 e9       	ldi	r24, 0x91	; 145
     1a2:	90 e0       	ldi	r25, 0x00	; 0

000001a4 <.Loc.18>:
     1a4:	2a 60       	ori	r18, 0x0A	; 10
     1a6:	fc 01       	movw	r30, r24
     1a8:	20 83       	st	Z, r18

000001aa <.Loc.19>:

    // Set initial duty cycle to 0
    OCR2B = 0;
     1aa:	84 eb       	ldi	r24, 0xB4	; 180
     1ac:	90 e0       	ldi	r25, 0x00	; 0

000001ae <.Loc.20>:
     1ae:	fc 01       	movw	r30, r24
     1b0:	10 82       	st	Z, r1

000001b2 <.Loc.21>:
    OCR3A = 0;
     1b2:	88 e9       	ldi	r24, 0x98	; 152
     1b4:	90 e0       	ldi	r25, 0x00	; 0

000001b6 <.Loc.22>:
     1b6:	fc 01       	movw	r30, r24
     1b8:	11 82       	std	Z+1, r1	; 0x01
     1ba:	10 82       	st	Z, r1

000001bc <.Loc.23>:
}
     1bc:	00 00       	nop
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <set_motor_speed>:

void set_motor_speed(uint8_t motor, uint8_t speed) {
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	0f 92       	push	r0
     1ca:	0f 92       	push	r0
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62
     1d0:	89 83       	std	Y+1, r24	; 0x01
     1d2:	6a 83       	std	Y+2, r22	; 0x02

000001d4 <.Loc.25>:
    if (motor == 1) {
     1d4:	89 81       	ldd	r24, Y+1	; 0x01
     1d6:	81 30       	cpi	r24, 0x01	; 1
     1d8:	31 f4       	brne	.+12     	; 0x1e6 <.L3>

000001da <.Loc.26>:
        OCR2B = speed;
     1da:	84 eb       	ldi	r24, 0xB4	; 180
     1dc:	90 e0       	ldi	r25, 0x00	; 0

000001de <.Loc.27>:
     1de:	2a 81       	ldd	r18, Y+2	; 0x02
     1e0:	fc 01       	movw	r30, r24
     1e2:	20 83       	st	Z, r18

000001e4 <.Loc.28>:
    } else if (motor == 2) {
        OCR3A = speed;
    }
}
     1e4:	0b c0       	rjmp	.+22     	; 0x1fc <.L5>

000001e6 <.L3>:
    } else if (motor == 2) {
     1e6:	89 81       	ldd	r24, Y+1	; 0x01
     1e8:	82 30       	cpi	r24, 0x02	; 2
     1ea:	41 f4       	brne	.+16     	; 0x1fc <.L5>

000001ec <.Loc.30>:
        OCR3A = speed;
     1ec:	88 e9       	ldi	r24, 0x98	; 152
     1ee:	90 e0       	ldi	r25, 0x00	; 0

000001f0 <.Loc.31>:
     1f0:	2a 81       	ldd	r18, Y+2	; 0x02
     1f2:	22 2f       	mov	r18, r18
     1f4:	30 e0       	ldi	r19, 0x00	; 0
     1f6:	fc 01       	movw	r30, r24
     1f8:	31 83       	std	Z+1, r19	; 0x01
     1fa:	20 83       	st	Z, r18

000001fc <.L5>:
}
     1fc:	00 00       	nop
     1fe:	0f 90       	pop	r0
     200:	0f 90       	pop	r0
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <set_motor_direction>:

void set_motor_direction(uint8_t motor, uint8_t direction) {
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	0f 92       	push	r0
     20e:	0f 92       	push	r0
     210:	cd b7       	in	r28, 0x3d	; 61
     212:	de b7       	in	r29, 0x3e	; 62
     214:	89 83       	std	Y+1, r24	; 0x01
     216:	6a 83       	std	Y+2, r22	; 0x02

00000218 <.Loc.34>:
    if (motor == 1) {
     218:	89 81       	ldd	r24, Y+1	; 0x01
     21a:	81 30       	cpi	r24, 0x01	; 1
     21c:	49 f5       	brne	.+82     	; 0x270 <.L7>

0000021e <.Loc.35>:
        if (direction == 1) { // Forward
     21e:	8a 81       	ldd	r24, Y+2	; 0x02
     220:	81 30       	cpi	r24, 0x01	; 1
     222:	99 f4       	brne	.+38     	; 0x24a <.L8>

00000224 <.Loc.36>:
            PORTL |= (1 << IN1);
     224:	8b e0       	ldi	r24, 0x0B	; 11
     226:	91 e0       	ldi	r25, 0x01	; 1
     228:	fc 01       	movw	r30, r24
     22a:	20 81       	ld	r18, Z
     22c:	8b e0       	ldi	r24, 0x0B	; 11
     22e:	91 e0       	ldi	r25, 0x01	; 1

00000230 <.Loc.37>:
     230:	24 60       	ori	r18, 0x04	; 4
     232:	fc 01       	movw	r30, r24
     234:	20 83       	st	Z, r18

00000236 <.Loc.38>:
            PORTL &= ~(1 << IN2);
     236:	8b e0       	ldi	r24, 0x0B	; 11
     238:	91 e0       	ldi	r25, 0x01	; 1
     23a:	fc 01       	movw	r30, r24
     23c:	20 81       	ld	r18, Z

0000023e <.Loc.39>:
     23e:	8b e0       	ldi	r24, 0x0B	; 11
     240:	91 e0       	ldi	r25, 0x01	; 1

00000242 <.Loc.40>:
     242:	2e 7f       	andi	r18, 0xFE	; 254
     244:	fc 01       	movw	r30, r24
     246:	20 83       	st	Z, r18

00000248 <.Loc.41>:
        } else { // Backward
            PORTB &= ~(1 << IN3);
            PORTB |= (1 << IN4);
        }
    }
}
     248:	3e c0       	rjmp	.+124    	; 0x2c6 <.L11>

0000024a <.L8>:
            PORTL &= ~(1 << IN1);
     24a:	8b e0       	ldi	r24, 0x0B	; 11
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	fc 01       	movw	r30, r24
     250:	20 81       	ld	r18, Z

00000252 <.Loc.43>:
     252:	8b e0       	ldi	r24, 0x0B	; 11
     254:	91 e0       	ldi	r25, 0x01	; 1

00000256 <.Loc.44>:
     256:	2b 7f       	andi	r18, 0xFB	; 251
     258:	fc 01       	movw	r30, r24
     25a:	20 83       	st	Z, r18

0000025c <.Loc.45>:
            PORTL |= (1 << IN2);
     25c:	8b e0       	ldi	r24, 0x0B	; 11
     25e:	91 e0       	ldi	r25, 0x01	; 1
     260:	fc 01       	movw	r30, r24
     262:	20 81       	ld	r18, Z
     264:	8b e0       	ldi	r24, 0x0B	; 11
     266:	91 e0       	ldi	r25, 0x01	; 1

00000268 <.Loc.46>:
     268:	21 60       	ori	r18, 0x01	; 1
     26a:	fc 01       	movw	r30, r24
     26c:	20 83       	st	Z, r18

0000026e <.Loc.47>:
}
     26e:	2b c0       	rjmp	.+86     	; 0x2c6 <.L11>

00000270 <.L7>:
    } else if (motor == 2) {
     270:	89 81       	ldd	r24, Y+1	; 0x01
     272:	82 30       	cpi	r24, 0x02	; 2
     274:	41 f5       	brne	.+80     	; 0x2c6 <.L11>

00000276 <.Loc.49>:
        if (direction == 1) { // Forward
     276:	8a 81       	ldd	r24, Y+2	; 0x02
     278:	81 30       	cpi	r24, 0x01	; 1
     27a:	99 f4       	brne	.+38     	; 0x2a2 <.L10>

0000027c <.Loc.50>:
            PORTB |= (1 << IN3);
     27c:	85 e2       	ldi	r24, 0x25	; 37
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	fc 01       	movw	r30, r24
     282:	20 81       	ld	r18, Z
     284:	85 e2       	ldi	r24, 0x25	; 37
     286:	90 e0       	ldi	r25, 0x00	; 0

00000288 <.Loc.51>:
     288:	24 60       	ori	r18, 0x04	; 4
     28a:	fc 01       	movw	r30, r24
     28c:	20 83       	st	Z, r18

0000028e <.Loc.52>:
            PORTB &= ~(1 << IN4);
     28e:	85 e2       	ldi	r24, 0x25	; 37
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	fc 01       	movw	r30, r24
     294:	20 81       	ld	r18, Z

00000296 <.Loc.53>:
     296:	85 e2       	ldi	r24, 0x25	; 37
     298:	90 e0       	ldi	r25, 0x00	; 0

0000029a <.Loc.54>:
     29a:	2e 7f       	andi	r18, 0xFE	; 254
     29c:	fc 01       	movw	r30, r24
     29e:	20 83       	st	Z, r18

000002a0 <.Loc.55>:
}
     2a0:	12 c0       	rjmp	.+36     	; 0x2c6 <.L11>

000002a2 <.L10>:
            PORTB &= ~(1 << IN3);
     2a2:	85 e2       	ldi	r24, 0x25	; 37
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	fc 01       	movw	r30, r24
     2a8:	20 81       	ld	r18, Z

000002aa <.Loc.57>:
     2aa:	85 e2       	ldi	r24, 0x25	; 37
     2ac:	90 e0       	ldi	r25, 0x00	; 0

000002ae <.Loc.58>:
     2ae:	2b 7f       	andi	r18, 0xFB	; 251
     2b0:	fc 01       	movw	r30, r24
     2b2:	20 83       	st	Z, r18

000002b4 <.Loc.59>:
            PORTB |= (1 << IN4);
     2b4:	85 e2       	ldi	r24, 0x25	; 37
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	fc 01       	movw	r30, r24
     2ba:	20 81       	ld	r18, Z
     2bc:	85 e2       	ldi	r24, 0x25	; 37
     2be:	90 e0       	ldi	r25, 0x00	; 0

000002c0 <.Loc.60>:
     2c0:	21 60       	ori	r18, 0x01	; 1
     2c2:	fc 01       	movw	r30, r24
     2c4:	20 83       	st	Z, r18

000002c6 <.L11>:
}
     2c6:	00 00       	nop
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	08 95       	ret

000002d2 <bocht_naar_rechts>:
void bocht_naar_rechts(void)
{
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	cd b7       	in	r28, 0x3d	; 61
     2d8:	de b7       	in	r29, 0x3e	; 62

000002da <.Loc.63>:

    set_motor_speed(1, 240);   // Motor 1 speed 128 (out of 255)
     2da:	60 ef       	ldi	r22, 0xF0	; 240
     2dc:	81 e0       	ldi	r24, 0x01	; 1
     2de:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

000002e2 <.Loc.64>:


    set_motor_speed(2, 180);    // Motor 2 speed 64 (out of 255)
     2e2:	64 eb       	ldi	r22, 0xB4	; 180
     2e4:	82 e0       	ldi	r24, 0x02	; 2
     2e6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

000002ea <.Loc.65>:

}
     2ea:	00 00       	nop
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <bocht_naar_links>:

void bocht_naar_links(void)
{
     2f2:	cf 93       	push	r28
     2f4:	df 93       	push	r29
     2f6:	cd b7       	in	r28, 0x3d	; 61
     2f8:	de b7       	in	r29, 0x3e	; 62

000002fa <.Loc.67>:

    set_motor_speed(1, 180);  set_motor_speed(2, 240);    // Motor 1 speed 64 (out of 255)
     2fa:	64 eb       	ldi	r22, 0xB4	; 180
     2fc:	81 e0       	ldi	r24, 0x01	; 1
     2fe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

00000302 <.Loc.68>:
     302:	60 ef       	ldi	r22, 0xF0	; 240
     304:	82 e0       	ldi	r24, 0x02	; 2
     306:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

0000030a <.Loc.69>:
    ;   // Motor 2 speed 128 (out of 255)
}
     30a:	00 00       	nop
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	08 95       	ret

00000312 <rechtvooruit>:

void rechtvooruit(void)
{
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	cd b7       	in	r28, 0x3d	; 61
     318:	de b7       	in	r29, 0x3e	; 62

0000031a <.Loc.71>:
    set_motor_direction(1, 1); // Motor 1 forward
     31a:	61 e0       	ldi	r22, 0x01	; 1
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	0e 94 04 01 	call	0x208	; 0x208 <set_motor_direction>

00000322 <.Loc.72>:
    set_motor_speed(1, 240);   // Motor 1 speed 128 (out of 255)
     322:	60 ef       	ldi	r22, 0xF0	; 240
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

0000032a <.Loc.73>:
    set_motor_direction(2, 1); // Motor 2 forward
     32a:	61 e0       	ldi	r22, 0x01	; 1
     32c:	82 e0       	ldi	r24, 0x02	; 2
     32e:	0e 94 04 01 	call	0x208	; 0x208 <set_motor_direction>

00000332 <.Loc.74>:
    set_motor_speed(2, 240);   // Motor 2 speed 128 (out of 255)
     332:	60 ef       	ldi	r22, 0xF0	; 240
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

0000033a <.Loc.75>:
}
     33a:	00 00       	nop
     33c:	df 91       	pop	r29
     33e:	cf 91       	pop	r28
     340:	08 95       	ret

00000342 <stoppen>:

void stoppen(void)
{
     342:	cf 93       	push	r28
     344:	df 93       	push	r29
     346:	cd b7       	in	r28, 0x3d	; 61
     348:	de b7       	in	r29, 0x3e	; 62

0000034a <.Loc.77>:
    set_motor_speed(1, 0);
     34a:	60 e0       	ldi	r22, 0x00	; 0
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

00000352 <.Loc.78>:
            set_motor_speed(2, 0);
     352:	60 e0       	ldi	r22, 0x00	; 0
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <set_motor_speed>

0000035a <.Loc.79>:
}
     35a:	00 00       	nop
     35c:	df 91       	pop	r29
     35e:	cf 91       	pop	r28
     360:	08 95       	ret

00000362 <init_pin>:
#include "buzzer.h"
#include <avr/io.h>
#include <avr/interrupt.h>
 static void init_pin(void)
{
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62

0000036a <.Loc.1>:
 DDR_buzzer |= (1 << buzzer);
     36a:	8d e2       	ldi	r24, 0x2D	; 45
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	fc 01       	movw	r30, r24
     370:	20 81       	ld	r18, Z
     372:	8d e2       	ldi	r24, 0x2D	; 45
     374:	90 e0       	ldi	r25, 0x00	; 0

00000376 <.Loc.2>:
     376:	20 62       	ori	r18, 0x20	; 32
     378:	fc 01       	movw	r30, r24
     37a:	20 83       	st	Z, r18

0000037c <.Loc.3>:
 }
     37c:	00 00       	nop
     37e:	df 91       	pop	r29
     380:	cf 91       	pop	r28
     382:	08 95       	ret

00000384 <buzzer_aan>:
static void buzzer_aan(void) {PORTE &= ~(1 << buzzer);}
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	cd b7       	in	r28, 0x3d	; 61
     38a:	de b7       	in	r29, 0x3e	; 62

0000038c <.Loc.5>:
     38c:	8e e2       	ldi	r24, 0x2E	; 46
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	fc 01       	movw	r30, r24
     392:	20 81       	ld	r18, Z

00000394 <.Loc.6>:
     394:	8e e2       	ldi	r24, 0x2E	; 46
     396:	90 e0       	ldi	r25, 0x00	; 0

00000398 <.Loc.7>:
     398:	2f 7d       	andi	r18, 0xDF	; 223
     39a:	fc 01       	movw	r30, r24
     39c:	20 83       	st	Z, r18

0000039e <.Loc.8>:
     39e:	00 00       	nop
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	08 95       	ret

000003a6 <buzzer_uit>:
static void buzzer_uit(void) {PORTE |= (1 << buzzer);}
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	cd b7       	in	r28, 0x3d	; 61
     3ac:	de b7       	in	r29, 0x3e	; 62

000003ae <.Loc.10>:
     3ae:	8e e2       	ldi	r24, 0x2E	; 46
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	fc 01       	movw	r30, r24
     3b4:	20 81       	ld	r18, Z
     3b6:	8e e2       	ldi	r24, 0x2E	; 46
     3b8:	90 e0       	ldi	r25, 0x00	; 0

000003ba <.Loc.11>:
     3ba:	20 62       	ori	r18, 0x20	; 32
     3bc:	fc 01       	movw	r30, r24
     3be:	20 83       	st	Z, r18

000003c0 <.Loc.12>:
     3c0:	00 00       	nop
     3c2:	df 91       	pop	r29
     3c4:	cf 91       	pop	r28
     3c6:	08 95       	ret

000003c8 <buzzer_toggle>:
static void buzzer_toggle(void) {PORTE ^= (1 << buzzer);}
     3c8:	cf 93       	push	r28
     3ca:	df 93       	push	r29
     3cc:	cd b7       	in	r28, 0x3d	; 61
     3ce:	de b7       	in	r29, 0x3e	; 62

000003d0 <.Loc.14>:
     3d0:	8e e2       	ldi	r24, 0x2E	; 46
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	fc 01       	movw	r30, r24
     3d6:	30 81       	ld	r19, Z
     3d8:	8e e2       	ldi	r24, 0x2E	; 46
     3da:	90 e0       	ldi	r25, 0x00	; 0

000003dc <.Loc.15>:
     3dc:	20 e2       	ldi	r18, 0x20	; 32
     3de:	23 27       	eor	r18, r19
     3e0:	fc 01       	movw	r30, r24
     3e2:	20 83       	st	Z, r18

000003e4 <.Loc.16>:
     3e4:	00 00       	nop
     3e6:	df 91       	pop	r29
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <init_timer>:

 static void init_timer(void)
 {
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	cd b7       	in	r28, 0x3d	; 61
     3f2:	de b7       	in	r29, 0x3e	; 62

000003f4 <.Loc.18>:
 TCCR4A = 0;
     3f4:	80 ea       	ldi	r24, 0xA0	; 160
     3f6:	90 e0       	ldi	r25, 0x00	; 0

000003f8 <.Loc.19>:
     3f8:	fc 01       	movw	r30, r24
     3fa:	10 82       	st	Z, r1

000003fc <.Loc.20>:
 TCCR4B = (1<<CS42) | (0<<CS41) | (0<<CS40);
     3fc:	81 ea       	ldi	r24, 0xA1	; 161
     3fe:	90 e0       	ldi	r25, 0x00	; 0

00000400 <.Loc.21>:
     400:	24 e0       	ldi	r18, 0x04	; 4
     402:	fc 01       	movw	r30, r24
     404:	20 83       	st	Z, r18

00000406 <.Loc.22>:
 TCNT4 = TCNT_INIT;
     406:	84 ea       	ldi	r24, 0xA4	; 164
     408:	90 e0       	ldi	r25, 0x00	; 0

0000040a <.Loc.23>:
     40a:	20 e4       	ldi	r18, 0x40	; 64
     40c:	3c e0       	ldi	r19, 0x0C	; 12
     40e:	fc 01       	movw	r30, r24
     410:	31 83       	std	Z+1, r19	; 0x01
     412:	20 83       	st	Z, r18

00000414 <.Loc.24>:
 }
     414:	00 00       	nop
     416:	df 91       	pop	r29
     418:	cf 91       	pop	r28
     41a:	08 95       	ret

0000041c <init_ultrasonic>:

#define TRIG_PIN PH0
#define ECHO_PIN PH1
#define LED_PIN PB7

void init_ultrasonic() {
     41c:	cf 93       	push	r28
     41e:	df 93       	push	r29
     420:	cd b7       	in	r28, 0x3d	; 61
     422:	de b7       	in	r29, 0x3e	; 62

00000424 <.Loc.26>:
    // Set TRIG_PIN as output
    DDRH |= (1 << TRIG_PIN);
     424:	81 e0       	ldi	r24, 0x01	; 1
     426:	91 e0       	ldi	r25, 0x01	; 1
     428:	fc 01       	movw	r30, r24
     42a:	20 81       	ld	r18, Z
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	91 e0       	ldi	r25, 0x01	; 1

00000430 <.Loc.27>:
     430:	21 60       	ori	r18, 0x01	; 1
     432:	fc 01       	movw	r30, r24
     434:	20 83       	st	Z, r18

00000436 <.Loc.28>:
    // Set ECHO_PIN as input
    DDRH &= ~(1 << ECHO_PIN);
     436:	81 e0       	ldi	r24, 0x01	; 1
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	fc 01       	movw	r30, r24
     43c:	20 81       	ld	r18, Z

0000043e <.Loc.29>:
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	91 e0       	ldi	r25, 0x01	; 1

00000442 <.Loc.30>:
     442:	2d 7f       	andi	r18, 0xFD	; 253
     444:	fc 01       	movw	r30, r24
     446:	20 83       	st	Z, r18

00000448 <.Loc.31>:
    // Ensure TRIG_PIN is low
    PORTH &= ~(1 << TRIG_PIN);
     448:	82 e0       	ldi	r24, 0x02	; 2
     44a:	91 e0       	ldi	r25, 0x01	; 1
     44c:	fc 01       	movw	r30, r24
     44e:	20 81       	ld	r18, Z

00000450 <.Loc.32>:
     450:	82 e0       	ldi	r24, 0x02	; 2
     452:	91 e0       	ldi	r25, 0x01	; 1

00000454 <.Loc.33>:
     454:	2e 7f       	andi	r18, 0xFE	; 254
     456:	fc 01       	movw	r30, r24
     458:	20 83       	st	Z, r18

0000045a <.Loc.34>:
}
     45a:	00 00       	nop
     45c:	df 91       	pop	r29
     45e:	cf 91       	pop	r28
     460:	08 95       	ret

00000462 <measure_distance>:

uint16_t measure_distance() {
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	cd b7       	in	r28, 0x3d	; 61
     468:	de b7       	in	r29, 0x3e	; 62
     46a:	cc 54       	subi	r28, 0x4C	; 76
     46c:	d1 09       	sbc	r29, r1
     46e:	0f b6       	in	r0, 0x3f	; 63
     470:	f8 94       	cli
     472:	de bf       	out	0x3e, r29	; 62
     474:	0f be       	out	0x3f, r0	; 63
     476:	cd bf       	out	0x3d, r28	; 61

00000478 <.Loc.36>:
    uint16_t duration;

    // Send trigger pulse
    PORTH |= (1 << TRIG_PIN);
     478:	82 e0       	ldi	r24, 0x02	; 2
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	dc 01       	movw	r26, r24
     47e:	2c 91       	ld	r18, X
     480:	82 e0       	ldi	r24, 0x02	; 2
     482:	91 e0       	ldi	r25, 0x01	; 1

00000484 <.Loc.37>:
     484:	21 60       	ori	r18, 0x01	; 1
     486:	fc 01       	movw	r30, r24
     488:	20 83       	st	Z, r18
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	a0 e2       	ldi	r26, 0x20	; 32
     490:	b1 e4       	ldi	r27, 0x41	; 65
     492:	8d 83       	std	Y+5, r24	; 0x05
     494:	9e 83       	std	Y+6, r25	; 0x06
     496:	af 83       	std	Y+7, r26	; 0x07
     498:	b8 87       	std	Y+8, r27	; 0x08

0000049a <.LBB64>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     49a:	2b ea       	ldi	r18, 0xAB	; 171
     49c:	3a ea       	ldi	r19, 0xAA	; 170
     49e:	4a ea       	ldi	r20, 0xAA	; 170
     4a0:	50 e4       	ldi	r21, 0x40	; 64
     4a2:	6d 81       	ldd	r22, Y+5	; 0x05
     4a4:	7e 81       	ldd	r23, Y+6	; 0x06
     4a6:	8f 81       	ldd	r24, Y+7	; 0x07
     4a8:	98 85       	ldd	r25, Y+8	; 0x08
     4aa:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     4ae:	69 a7       	std	Y+41, r22	; 0x29
     4b0:	7a a7       	std	Y+42, r23	; 0x2a
     4b2:	8b a7       	std	Y+43, r24	; 0x2b
     4b4:	9c a7       	std	Y+44, r25	; 0x2c
     4b6:	89 a5       	ldd	r24, Y+41	; 0x29
     4b8:	9a a5       	ldd	r25, Y+42	; 0x2a
     4ba:	ab a5       	ldd	r26, Y+43	; 0x2b
     4bc:	bc a5       	ldd	r27, Y+44	; 0x2c
     4be:	89 87       	std	Y+9, r24	; 0x09
     4c0:	9a 87       	std	Y+10, r25	; 0x0a
     4c2:	ab 87       	std	Y+11, r26	; 0x0b
     4c4:	bc 87       	std	Y+12, r27	; 0x0c

000004c6 <.Loc.39>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	40 e8       	ldi	r20, 0x80	; 128
     4cc:	50 e4       	ldi	r21, 0x40	; 64
     4ce:	6d 81       	ldd	r22, Y+5	; 0x05
     4d0:	7e 81       	ldd	r23, Y+6	; 0x06
     4d2:	8f 81       	ldd	r24, Y+7	; 0x07
     4d4:	98 85       	ldd	r25, Y+8	; 0x08
     4d6:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     4da:	6d a7       	std	Y+45, r22	; 0x2d
     4dc:	7e a7       	std	Y+46, r23	; 0x2e
     4de:	8f a7       	std	Y+47, r24	; 0x2f
     4e0:	98 ab       	std	Y+48, r25	; 0x30
     4e2:	8d a5       	ldd	r24, Y+45	; 0x2d
     4e4:	9e a5       	ldd	r25, Y+46	; 0x2e
     4e6:	af a5       	ldd	r26, Y+47	; 0x2f
     4e8:	b8 a9       	ldd	r27, Y+48	; 0x30
     4ea:	8d 87       	std	Y+13, r24	; 0x0d
     4ec:	9e 87       	std	Y+14, r25	; 0x0e
     4ee:	af 87       	std	Y+15, r26	; 0x0f
     4f0:	b8 8b       	std	Y+16, r27	; 0x10

000004f2 <.Loc.40>:
	if (__tmp < 1.0)
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	40 e8       	ldi	r20, 0x80	; 128
     4f8:	5f e3       	ldi	r21, 0x3F	; 63
     4fa:	69 85       	ldd	r22, Y+9	; 0x09
     4fc:	7a 85       	ldd	r23, Y+10	; 0x0a
     4fe:	8b 85       	ldd	r24, Y+11	; 0x0b
     500:	9c 85       	ldd	r25, Y+12	; 0x0c
     502:	0e 94 2d 08 	call	0x105a	; 0x105a <__cmpsf2>
     506:	88 23       	and	r24, r24
     508:	1c f4       	brge	.+6      	; 0x510 <.L34>

0000050a <.Loc.41>:
		__ticks = 1;
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	89 8b       	std	Y+17, r24	; 0x11
     50e:	ed c0       	rjmp	.+474    	; 0x6ea <.L10>

00000510 <.L34>:
	else if (__tmp2 > 65535)
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	3f ef       	ldi	r19, 0xFF	; 255
     514:	4f e7       	ldi	r20, 0x7F	; 127
     516:	57 e4       	ldi	r21, 0x47	; 71
     518:	6d 85       	ldd	r22, Y+13	; 0x0d
     51a:	7e 85       	ldd	r23, Y+14	; 0x0e
     51c:	8f 85       	ldd	r24, Y+15	; 0x0f
     51e:	98 89       	ldd	r25, Y+16	; 0x10
     520:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     524:	88 23       	and	r24, r24
     526:	09 f0       	breq	.+2      	; 0x52a <L0^A>

00000528 <L0^A>:
     528:	0c f4       	brge	.+2      	; 0x52c <.Loc.43>

0000052a <L0^A>:
     52a:	a4 c0       	rjmp	.+328    	; 0x674 <.L35>

0000052c <.Loc.43>:
	{
		_delay_ms(__us / 1000.0);
     52c:	20 e0       	ldi	r18, 0x00	; 0
     52e:	30 e0       	ldi	r19, 0x00	; 0
     530:	4a e7       	ldi	r20, 0x7A	; 122
     532:	54 e4       	ldi	r21, 0x44	; 68
     534:	6d 81       	ldd	r22, Y+5	; 0x05
     536:	7e 81       	ldd	r23, Y+6	; 0x06
     538:	8f 81       	ldd	r24, Y+7	; 0x07
     53a:	98 85       	ldd	r25, Y+8	; 0x08
     53c:	0e 94 32 08 	call	0x1064	; 0x1064 <__divsf3>
     540:	69 ab       	std	Y+49, r22	; 0x31
     542:	7a ab       	std	Y+50, r23	; 0x32
     544:	8b ab       	std	Y+51, r24	; 0x33
     546:	9c ab       	std	Y+52, r25	; 0x34
     548:	89 a9       	ldd	r24, Y+49	; 0x31
     54a:	9a a9       	ldd	r25, Y+50	; 0x32
     54c:	ab a9       	ldd	r26, Y+51	; 0x33
     54e:	bc a9       	ldd	r27, Y+52	; 0x34
     550:	8a 8b       	std	Y+18, r24	; 0x12
     552:	9b 8b       	std	Y+19, r25	; 0x13
     554:	ac 8b       	std	Y+20, r26	; 0x14
     556:	bd 8b       	std	Y+21, r27	; 0x15

00000558 <.LBB66>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	4a e7       	ldi	r20, 0x7A	; 122
     55e:	55 e4       	ldi	r21, 0x45	; 69
     560:	6a 89       	ldd	r22, Y+18	; 0x12
     562:	7b 89       	ldd	r23, Y+19	; 0x13
     564:	8c 89       	ldd	r24, Y+20	; 0x14
     566:	9d 89       	ldd	r25, Y+21	; 0x15
     568:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     56c:	6d ab       	std	Y+53, r22	; 0x35
     56e:	7e ab       	std	Y+54, r23	; 0x36
     570:	8f ab       	std	Y+55, r24	; 0x37
     572:	98 af       	std	Y+56, r25	; 0x38
     574:	8d a9       	ldd	r24, Y+53	; 0x35
     576:	9e a9       	ldd	r25, Y+54	; 0x36
     578:	af a9       	ldd	r26, Y+55	; 0x37
     57a:	b8 ad       	ldd	r27, Y+56	; 0x38
     57c:	8e 8b       	std	Y+22, r24	; 0x16
     57e:	9f 8b       	std	Y+23, r25	; 0x17
     580:	a8 8f       	std	Y+24, r26	; 0x18
     582:	b9 8f       	std	Y+25, r27	; 0x19

00000584 <.Loc.45>:
	if (__tmp < 1.0)
     584:	20 e0       	ldi	r18, 0x00	; 0
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	40 e8       	ldi	r20, 0x80	; 128
     58a:	5f e3       	ldi	r21, 0x3F	; 63
     58c:	6e 89       	ldd	r22, Y+22	; 0x16
     58e:	7f 89       	ldd	r23, Y+23	; 0x17
     590:	88 8d       	ldd	r24, Y+24	; 0x18
     592:	99 8d       	ldd	r25, Y+25	; 0x19
     594:	0e 94 2d 08 	call	0x105a	; 0x105a <__cmpsf2>
     598:	88 23       	and	r24, r24
     59a:	2c f4       	brge	.+10     	; 0x5a6 <.L36>

0000059c <.Loc.46>:
		__ticks = 1;
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	9b 8f       	std	Y+27, r25	; 0x1b
     5a2:	8a 8f       	std	Y+26, r24	; 0x1a
     5a4:	5c c0       	rjmp	.+184    	; 0x65e <.L15>

000005a6 <.L36>:
	else if (__tmp > 65535)
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	3f ef       	ldi	r19, 0xFF	; 255
     5aa:	4f e7       	ldi	r20, 0x7F	; 127
     5ac:	57 e4       	ldi	r21, 0x47	; 71
     5ae:	6e 89       	ldd	r22, Y+22	; 0x16
     5b0:	7f 89       	ldd	r23, Y+23	; 0x17
     5b2:	88 8d       	ldd	r24, Y+24	; 0x18
     5b4:	99 8d       	ldd	r25, Y+25	; 0x19
     5b6:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     5ba:	88 23       	and	r24, r24
     5bc:	09 f0       	breq	.+2      	; 0x5c0 <L0^A>

000005be <L0^A>:
     5be:	0c f4       	brge	.+2      	; 0x5c2 <.Loc.48>

000005c0 <L0^A>:
     5c0:	3c c0       	rjmp	.+120    	; 0x63a <.L37>

000005c2 <.Loc.48>:
		__ticks = (uint16_t) (__ms * 10.0);
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	40 e2       	ldi	r20, 0x20	; 32
     5c8:	51 e4       	ldi	r21, 0x41	; 65
     5ca:	6a 89       	ldd	r22, Y+18	; 0x12
     5cc:	7b 89       	ldd	r23, Y+19	; 0x13
     5ce:	8c 89       	ldd	r24, Y+20	; 0x14
     5d0:	9d 89       	ldd	r25, Y+21	; 0x15
     5d2:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     5d6:	69 af       	std	Y+57, r22	; 0x39
     5d8:	7a af       	std	Y+58, r23	; 0x3a
     5da:	8b af       	std	Y+59, r24	; 0x3b
     5dc:	9c af       	std	Y+60, r25	; 0x3c
     5de:	89 ad       	ldd	r24, Y+57	; 0x39
     5e0:	9a ad       	ldd	r25, Y+58	; 0x3a
     5e2:	ab ad       	ldd	r26, Y+59	; 0x3b
     5e4:	bc ad       	ldd	r27, Y+60	; 0x3c
     5e6:	8d a3       	std	Y+37, r24	; 0x25
     5e8:	9e a3       	std	Y+38, r25	; 0x26
     5ea:	af a3       	std	Y+39, r26	; 0x27
     5ec:	b8 a7       	std	Y+40, r27	; 0x28

000005ee <.Loc.49>:
     5ee:	6d a1       	ldd	r22, Y+37	; 0x25
     5f0:	7e a1       	ldd	r23, Y+38	; 0x26
     5f2:	8f a1       	ldd	r24, Y+39	; 0x27
     5f4:	98 a5       	ldd	r25, Y+40	; 0x28
     5f6:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     5fa:	21 96       	adiw	r28, 0x01	; 1
     5fc:	6c af       	std	Y+60, r22	; 0x3c
     5fe:	7d af       	std	Y+61, r23	; 0x3d
     600:	8e af       	std	Y+62, r24	; 0x3e
     602:	9f af       	std	Y+63, r25	; 0x3f
     604:	21 97       	sbiw	r28, 0x01	; 1
     606:	ad ad       	ldd	r26, Y+61	; 0x3d
     608:	be ad       	ldd	r27, Y+62	; 0x3e
     60a:	bb 8f       	std	Y+27, r27	; 0x1b
     60c:	aa 8f       	std	Y+26, r26	; 0x1a

0000060e <.Loc.50>:
		while(__ticks)
     60e:	10 c0       	rjmp	.+32     	; 0x630 <.L18>

00000610 <.L19>:
     610:	80 e9       	ldi	r24, 0x90	; 144
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	9d 8f       	std	Y+29, r25	; 0x1d
     616:	8c 8f       	std	Y+28, r24	; 0x1c

00000618 <.LBB68>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     618:	8c 8d       	ldd	r24, Y+28	; 0x1c
     61a:	9d 8d       	ldd	r25, Y+29	; 0x1d

0000061c <.L1^B1>:
     61c:	01 97       	sbiw	r24, 0x01	; 1
     61e:	f1 f7       	brne	.-4      	; 0x61c <.L1^B1>
     620:	9d 8f       	std	Y+29, r25	; 0x1d
     622:	8c 8f       	std	Y+28, r24	; 0x1c

00000624 <.Loc.52>:
	...

00000626 <.LBE68>:
			__ticks --;
     626:	8a 8d       	ldd	r24, Y+26	; 0x1a
     628:	9b 8d       	ldd	r25, Y+27	; 0x1b
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	9b 8f       	std	Y+27, r25	; 0x1b
     62e:	8a 8f       	std	Y+26, r24	; 0x1a

00000630 <.L18>:
		while(__ticks)
     630:	8a 8d       	ldd	r24, Y+26	; 0x1a
     632:	9b 8d       	ldd	r25, Y+27	; 0x1b
     634:	00 97       	sbiw	r24, 0x00	; 0
     636:	61 f7       	brne	.-40     	; 0x610 <.L19>

00000638 <.Loc.55>:
		return;
     638:	58 c0       	rjmp	.+176    	; 0x6ea <.L10>

0000063a <.L37>:
		__ticks = (uint16_t)__tmp;
     63a:	6e 89       	ldd	r22, Y+22	; 0x16
     63c:	7f 89       	ldd	r23, Y+23	; 0x17
     63e:	88 8d       	ldd	r24, Y+24	; 0x18
     640:	99 8d       	ldd	r25, Y+25	; 0x19
     642:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     646:	25 96       	adiw	r28, 0x05	; 5
     648:	6c af       	std	Y+60, r22	; 0x3c
     64a:	7d af       	std	Y+61, r23	; 0x3d
     64c:	8e af       	std	Y+62, r24	; 0x3e
     64e:	9f af       	std	Y+63, r25	; 0x3f
     650:	25 97       	sbiw	r28, 0x05	; 5
     652:	23 96       	adiw	r28, 0x03	; 3
     654:	ee ad       	ldd	r30, Y+62	; 0x3e
     656:	ff ad       	ldd	r31, Y+63	; 0x3f
     658:	23 97       	sbiw	r28, 0x03	; 3
     65a:	fb 8f       	std	Y+27, r31	; 0x1b
     65c:	ea 8f       	std	Y+26, r30	; 0x1a

0000065e <.L15>:
     65e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     660:	9b 8d       	ldd	r25, Y+27	; 0x1b
     662:	9f 8f       	std	Y+31, r25	; 0x1f
     664:	8e 8f       	std	Y+30, r24	; 0x1e

00000666 <.LBB70>:
     666:	8e 8d       	ldd	r24, Y+30	; 0x1e
     668:	9f 8d       	ldd	r25, Y+31	; 0x1f

0000066a <.L1^B2>:
     66a:	01 97       	sbiw	r24, 0x01	; 1
     66c:	f1 f7       	brne	.-4      	; 0x66a <.L1^B2>
     66e:	9f 8f       	std	Y+31, r25	; 0x1f
     670:	8e 8f       	std	Y+30, r24	; 0x1e

00000672 <.Loc.58>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     672:	3b c0       	rjmp	.+118    	; 0x6ea <.L10>

00000674 <.L35>:
	}
	else if (__tmp > 255)
     674:	20 e0       	ldi	r18, 0x00	; 0
     676:	30 e0       	ldi	r19, 0x00	; 0
     678:	4f e7       	ldi	r20, 0x7F	; 127
     67a:	53 e4       	ldi	r21, 0x43	; 67
     67c:	69 85       	ldd	r22, Y+9	; 0x09
     67e:	7a 85       	ldd	r23, Y+10	; 0x0a
     680:	8b 85       	ldd	r24, Y+11	; 0x0b
     682:	9c 85       	ldd	r25, Y+12	; 0x0c
     684:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     688:	88 23       	and	r24, r24
     68a:	f9 f0       	breq	.+62     	; 0x6ca <.L38>
     68c:	f4 f0       	brlt	.+60     	; 0x6ca <.L38>

0000068e <.LBB72>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     68e:	6d 85       	ldd	r22, Y+13	; 0x0d
     690:	7e 85       	ldd	r23, Y+14	; 0x0e
     692:	8f 85       	ldd	r24, Y+15	; 0x0f
     694:	98 89       	ldd	r25, Y+16	; 0x10
     696:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     69a:	29 96       	adiw	r28, 0x09	; 9
     69c:	6c af       	std	Y+60, r22	; 0x3c
     69e:	7d af       	std	Y+61, r23	; 0x3d
     6a0:	8e af       	std	Y+62, r24	; 0x3e
     6a2:	9f af       	std	Y+63, r25	; 0x3f
     6a4:	29 97       	sbiw	r28, 0x09	; 9
     6a6:	27 96       	adiw	r28, 0x07	; 7
     6a8:	8e ad       	ldd	r24, Y+62	; 0x3e
     6aa:	9f ad       	ldd	r25, Y+63	; 0x3f
     6ac:	27 97       	sbiw	r28, 0x07	; 7
     6ae:	99 a3       	std	Y+33, r25	; 0x21
     6b0:	88 a3       	std	Y+32, r24	; 0x20
     6b2:	88 a1       	ldd	r24, Y+32	; 0x20
     6b4:	99 a1       	ldd	r25, Y+33	; 0x21
     6b6:	9b a3       	std	Y+35, r25	; 0x23
     6b8:	8a a3       	std	Y+34, r24	; 0x22

000006ba <.LBB73>:
	__asm__ volatile (
     6ba:	8a a1       	ldd	r24, Y+34	; 0x22
     6bc:	9b a1       	ldd	r25, Y+35	; 0x23

000006be <.L1^B3>:
     6be:	01 97       	sbiw	r24, 0x01	; 1
     6c0:	f1 f7       	brne	.-4      	; 0x6be <.L1^B3>
     6c2:	9b a3       	std	Y+35, r25	; 0x23
     6c4:	8a a3       	std	Y+34, r24	; 0x22

000006c6 <.Loc.62>:
	...

000006c8 <.LBE73>:
		_delay_loop_2(__ticks);
		return;
     6c8:	17 c0       	rjmp	.+46     	; 0x6f8 <.L23>

000006ca <.L38>:
	}
	else
		__ticks = (uint8_t)__tmp;
     6ca:	69 85       	ldd	r22, Y+9	; 0x09
     6cc:	7a 85       	ldd	r23, Y+10	; 0x0a
     6ce:	8b 85       	ldd	r24, Y+11	; 0x0b
     6d0:	9c 85       	ldd	r25, Y+12	; 0x0c
     6d2:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     6d6:	2d 96       	adiw	r28, 0x0d	; 13
     6d8:	6c af       	std	Y+60, r22	; 0x3c
     6da:	7d af       	std	Y+61, r23	; 0x3d
     6dc:	8e af       	std	Y+62, r24	; 0x3e
     6de:	9f af       	std	Y+63, r25	; 0x3f
     6e0:	2d 97       	sbiw	r28, 0x0d	; 13
     6e2:	2a 96       	adiw	r28, 0x0a	; 10
     6e4:	9f ad       	ldd	r25, Y+63	; 0x3f
     6e6:	2a 97       	sbiw	r28, 0x0a	; 10
     6e8:	99 8b       	std	Y+17, r25	; 0x11

000006ea <.L10>:
     6ea:	89 89       	ldd	r24, Y+17	; 0x11
     6ec:	8c a3       	std	Y+36, r24	; 0x24

000006ee <.LBB75>:
	__asm__ volatile (
     6ee:	8c a1       	ldd	r24, Y+36	; 0x24

000006f0 <.L1^B4>:
     6f0:	8a 95       	dec	r24
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <.L1^B4>
     6f4:	8c a3       	std	Y+36, r24	; 0x24

000006f6 <.Loc.66>:
	...

000006f8 <.L23>:
    _delay_us(10);
    PORTH &= ~(1 << TRIG_PIN);
     6f8:	82 e0       	ldi	r24, 0x02	; 2
     6fa:	91 e0       	ldi	r25, 0x01	; 1
     6fc:	dc 01       	movw	r26, r24
     6fe:	2c 91       	ld	r18, X

00000700 <.Loc.68>:
     700:	82 e0       	ldi	r24, 0x02	; 2
     702:	91 e0       	ldi	r25, 0x01	; 1

00000704 <.Loc.69>:
     704:	2e 7f       	andi	r18, 0xFE	; 254
     706:	fc 01       	movw	r30, r24
     708:	20 83       	st	Z, r18

0000070a <.Loc.70>:
	...

0000070c <.L24>:

    // Wait for echo pin to go high
    while (!(PINH & (1 << ECHO_PIN)));
     70c:	80 e0       	ldi	r24, 0x00	; 0
     70e:	91 e0       	ldi	r25, 0x01	; 1
     710:	dc 01       	movw	r26, r24
     712:	8c 91       	ld	r24, X

00000714 <.Loc.72>:
     714:	88 2f       	mov	r24, r24
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	82 70       	andi	r24, 0x02	; 2
     71a:	99 27       	eor	r25, r25

0000071c <.Loc.73>:
     71c:	00 97       	sbiw	r24, 0x00	; 0
     71e:	b1 f3       	breq	.-20     	; 0x70c <.L24>

00000720 <.Loc.74>:

    // Measure the width of the echo pulse
    TCNT1 = 0;
     720:	84 e8       	ldi	r24, 0x84	; 132
     722:	90 e0       	ldi	r25, 0x00	; 0

00000724 <.Loc.75>:
     724:	fc 01       	movw	r30, r24
     726:	11 82       	std	Z+1, r1	; 0x01
     728:	10 82       	st	Z, r1

0000072a <.Loc.76>:
    TCCR1B |= (1 << CS11); // Prescaler = 8
     72a:	81 e8       	ldi	r24, 0x81	; 129
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	dc 01       	movw	r26, r24
     730:	2c 91       	ld	r18, X
     732:	81 e8       	ldi	r24, 0x81	; 129
     734:	90 e0       	ldi	r25, 0x00	; 0

00000736 <.Loc.77>:
     736:	22 60       	ori	r18, 0x02	; 2
     738:	fc 01       	movw	r30, r24
     73a:	20 83       	st	Z, r18

0000073c <.Loc.78>:
    while (PINH & (1 << ECHO_PIN)) {
     73c:	0b c0       	rjmp	.+22     	; 0x754 <.L25>

0000073e <.L27>:
        if (TCNT1 > 60000) {
     73e:	84 e8       	ldi	r24, 0x84	; 132
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	dc 01       	movw	r26, r24
     744:	8d 91       	ld	r24, X+
     746:	9c 91       	ld	r25, X
     748:	11 97       	sbiw	r26, 0x01	; 1

0000074a <.Loc.80>:
     74a:	80 36       	cpi	r24, 0x60	; 96
     74c:	ba ee       	ldi	r27, 0xEA	; 234
     74e:	9b 07       	cpc	r25, r27
     750:	09 f0       	breq	.+2      	; 0x754 <.L25>

00000752 <L0^A>:
     752:	58 f4       	brcc	.+22     	; 0x76a <.L39>

00000754 <.L25>:
    while (PINH & (1 << ECHO_PIN)) {
     754:	80 e0       	ldi	r24, 0x00	; 0
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	fc 01       	movw	r30, r24
     75a:	80 81       	ld	r24, Z

0000075c <.Loc.82>:
     75c:	88 2f       	mov	r24, r24
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	82 70       	andi	r24, 0x02	; 2
     762:	99 27       	eor	r25, r25

00000764 <.Loc.83>:
     764:	00 97       	sbiw	r24, 0x00	; 0
     766:	59 f7       	brne	.-42     	; 0x73e <.L27>
     768:	01 c0       	rjmp	.+2      	; 0x76c <.L26>

0000076a <.L39>:
	...

0000076c <.L26>:
            // Timeout to avoid infinite loop
            break;
        }
    }
    TCCR1B &= ~(1 << CS11); // Stop timer
     76c:	81 e8       	ldi	r24, 0x81	; 129
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	dc 01       	movw	r26, r24
     772:	2c 91       	ld	r18, X

00000774 <.Loc.86>:
     774:	81 e8       	ldi	r24, 0x81	; 129
     776:	90 e0       	ldi	r25, 0x00	; 0

00000778 <.Loc.87>:
     778:	2d 7f       	andi	r18, 0xFD	; 253
     77a:	fc 01       	movw	r30, r24
     77c:	20 83       	st	Z, r18

0000077e <.Loc.88>:

    duration = TCNT1; // Read timer value
     77e:	84 e8       	ldi	r24, 0x84	; 132
     780:	90 e0       	ldi	r25, 0x00	; 0

00000782 <.Loc.89>:
     782:	dc 01       	movw	r26, r24
     784:	8d 91       	ld	r24, X+
     786:	9c 91       	ld	r25, X
     788:	9a 83       	std	Y+2, r25	; 0x02
     78a:	89 83       	std	Y+1, r24	; 0x01

0000078c <.Loc.90>:

    // Calculate distance in cm (duration / 2) / 29.1
    // duration is in us, speed of sound is 34300 cm/s
    uint16_t distance = duration / 58;
     78c:	89 81       	ldd	r24, Y+1	; 0x01
     78e:	9a 81       	ldd	r25, Y+2	; 0x02
     790:	9c 01       	movw	r18, r24
     792:	af e9       	ldi	r26, 0x9F	; 159
     794:	b6 e4       	ldi	r27, 0x46	; 70
     796:	0e 94 1e 08 	call	0x103c	; 0x103c <__umulhisi3>
     79a:	92 95       	swap	r25
     79c:	82 95       	swap	r24
     79e:	8f 70       	andi	r24, 0x0F	; 15
     7a0:	89 27       	eor	r24, r25
     7a2:	9f 70       	andi	r25, 0x0F	; 15
     7a4:	89 27       	eor	r24, r25
     7a6:	9c 83       	std	Y+4, r25	; 0x04
     7a8:	8b 83       	std	Y+3, r24	; 0x03

000007aa <.Loc.91>:

    return distance;
     7aa:	8b 81       	ldd	r24, Y+3	; 0x03
     7ac:	9c 81       	ldd	r25, Y+4	; 0x04

000007ae <.Loc.92>:
}
     7ae:	c4 5b       	subi	r28, 0xB4	; 180
     7b0:	df 4f       	sbci	r29, 0xFF	; 255
     7b2:	0f b6       	in	r0, 0x3f	; 63
     7b4:	f8 94       	cli
     7b6:	de bf       	out	0x3e, r29	; 62
     7b8:	0f be       	out	0x3f, r0	; 63
     7ba:	cd bf       	out	0x3d, r28	; 61
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	08 95       	ret

000007c2 <init>:




void init(void)
{
     7c2:	cf 93       	push	r28
     7c4:	df 93       	push	r29
     7c6:	cd b7       	in	r28, 0x3d	; 61
     7c8:	de b7       	in	r29, 0x3e	; 62

000007ca <.Loc.94>:
    // Initialize H-bridge, set motor pins as output
    init_ultrasonic();
     7ca:	0e 94 0e 02 	call	0x41c	; 0x41c <init_ultrasonic>

000007ce <.Loc.95>:
    init_pin();
     7ce:	0e 94 b1 01 	call	0x362	; 0x362 <init_pin>

000007d2 <.Loc.96>:
    init_timer();
     7d2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <init_timer>

000007d6 <.Loc.97>:
    buzzer_uit();
     7d6:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <buzzer_uit>

000007da <.Loc.98>:
    TCCR1A = 0;
     7da:	80 e8       	ldi	r24, 0x80	; 128
     7dc:	90 e0       	ldi	r25, 0x00	; 0

000007de <.Loc.99>:
     7de:	fc 01       	movw	r30, r24
     7e0:	10 82       	st	Z, r1

000007e2 <.Loc.100>:
    TCCR1B = 0;
     7e2:	81 e8       	ldi	r24, 0x81	; 129
     7e4:	90 e0       	ldi	r25, 0x00	; 0

000007e6 <.Loc.101>:
     7e6:	fc 01       	movw	r30, r24
     7e8:	10 82       	st	Z, r1

000007ea <.Loc.102>:
    init_motors();
     7ea:	0e 94 80 00 	call	0x100	; 0x100 <init_motors>

000007ee <.Loc.103>:
    rechtvooruit();
     7ee:	0e 94 89 01 	call	0x312	; 0x312 <rechtvooruit>

000007f2 <.Loc.104>:
}
     7f2:	00 00       	nop
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	08 95       	ret

000007fa <obstakeldetectie>:

static int obstakeldetectie(void) { return ((PIN_BUTTONS & (1<<S1)) == 0); }
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	cd b7       	in	r28, 0x3d	; 61
     800:	de b7       	in	r29, 0x3e	; 62

00000802 <.Loc.106>:
     802:	8f e2       	ldi	r24, 0x2F	; 47
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	fc 01       	movw	r30, r24
     808:	80 81       	ld	r24, Z

0000080a <.Loc.107>:
     80a:	88 2f       	mov	r24, r24
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	82 70       	andi	r24, 0x02	; 2
     810:	99 27       	eor	r25, r25

00000812 <.Loc.108>:
     812:	21 e0       	ldi	r18, 0x01	; 1
     814:	00 97       	sbiw	r24, 0x00	; 0
     816:	09 f0       	breq	.+2      	; 0x81a <.L42>
     818:	20 e0       	ldi	r18, 0x00	; 0

0000081a <.L42>:
     81a:	82 2f       	mov	r24, r18
     81c:	90 e0       	ldi	r25, 0x00	; 0

0000081e <.Loc.109>:
     81e:	df 91       	pop	r29
     820:	cf 91       	pop	r28
     822:	08 95       	ret

00000824 <obstakeldetectie2>:
static int obstakeldetectie2(void) { return ((PIN_BUTTONS & (1<<S2)) == 0); }
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
     828:	cd b7       	in	r28, 0x3d	; 61
     82a:	de b7       	in	r29, 0x3e	; 62

0000082c <.Loc.111>:
     82c:	8f e2       	ldi	r24, 0x2F	; 47
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	fc 01       	movw	r30, r24
     832:	80 81       	ld	r24, Z

00000834 <.Loc.112>:
     834:	88 2f       	mov	r24, r24
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	84 70       	andi	r24, 0x04	; 4
     83a:	99 27       	eor	r25, r25

0000083c <.Loc.113>:
     83c:	21 e0       	ldi	r18, 0x01	; 1
     83e:	00 97       	sbiw	r24, 0x00	; 0
     840:	09 f0       	breq	.+2      	; 0x844 <.L45>
     842:	20 e0       	ldi	r18, 0x00	; 0

00000844 <.L45>:
     844:	82 2f       	mov	r24, r18
     846:	90 e0       	ldi	r25, 0x00	; 0

00000848 <.Loc.114>:
     848:	df 91       	pop	r29
     84a:	cf 91       	pop	r28
     84c:	08 95       	ret

0000084e <main>:
int main(void)
{
     84e:	0f 93       	push	r16
     850:	1f 93       	push	r17
     852:	cf 93       	push	r28
     854:	df 93       	push	r29
     856:	cd b7       	in	r28, 0x3d	; 61
     858:	de b7       	in	r29, 0x3e	; 62
     85a:	cc 5a       	subi	r28, 0xAC	; 172
     85c:	d1 09       	sbc	r29, r1
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	f8 94       	cli
     862:	de bf       	out	0x3e, r29	; 62
     864:	0f be       	out	0x3f, r0	; 63
     866:	cd bf       	out	0x3d, r28	; 61

00000868 <.Loc.116>:
	init();
     868:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <init>

0000086c <.L93>:
    uint16_t distance;
	while (1)
	{
            distance = measure_distance();
     86c:	0e 94 31 02 	call	0x462	; 0x462 <measure_distance>
     870:	9a 83       	std	Y+2, r25	; 0x02
     872:	89 83       	std	Y+1, r24	; 0x01

00000874 <.Loc.118>:

            if (distance < 30 && distance >15)
     874:	89 81       	ldd	r24, Y+1	; 0x01
     876:	9a 81       	ldd	r25, Y+2	; 0x02
     878:	8d 31       	cpi	r24, 0x1D	; 29
     87a:	91 05       	cpc	r25, r1
     87c:	11 f0       	breq	.+4      	; 0x882 <.Loc.119>

0000087e <L0^A>:
     87e:	08 f0       	brcs	.+2      	; 0x882 <.Loc.119>

00000880 <L0^A>:
     880:	ba c0       	rjmp	.+372    	; 0x9f6 <.L48>

00000882 <.Loc.119>:
     882:	89 81       	ldd	r24, Y+1	; 0x01
     884:	9a 81       	ldd	r25, Y+2	; 0x02
     886:	8f 30       	cpi	r24, 0x0F	; 15
     888:	91 05       	cpc	r25, r1
     88a:	09 f0       	breq	.+2      	; 0x88e <L0^A>

0000088c <L0^A>:
     88c:	08 f4       	brcc	.+2      	; 0x890 <.Loc.120>

0000088e <L0^A>:
     88e:	b3 c0       	rjmp	.+358    	; 0x9f6 <.L48>

00000890 <.Loc.120>:
            {
                TCNT4 = TCNT_INIT;
     890:	84 ea       	ldi	r24, 0xA4	; 164
     892:	90 e0       	ldi	r25, 0x00	; 0

00000894 <.Loc.121>:
     894:	20 e4       	ldi	r18, 0x40	; 64
     896:	3c e0       	ldi	r19, 0x0C	; 12
     898:	dc 01       	movw	r26, r24
     89a:	11 96       	adiw	r26, 0x01	; 1
     89c:	3c 93       	st	X, r19
     89e:	2e 93       	st	-X, r18

000008a0 <.Loc.122>:
                TIFR4 = (1<<TOV4);
     8a0:	89 e3       	ldi	r24, 0x39	; 57
     8a2:	90 e0       	ldi	r25, 0x00	; 0

000008a4 <.Loc.123>:
     8a4:	21 e0       	ldi	r18, 0x01	; 1
     8a6:	fc 01       	movw	r30, r24
     8a8:	20 83       	st	Z, r18

000008aa <.Loc.124>:

                buzzer_toggle();
     8aa:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <buzzer_toggle>
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	a8 ec       	ldi	r26, 0xC8	; 200
     8b4:	b2 e4       	ldi	r27, 0x42	; 66
     8b6:	8b 83       	std	Y+3, r24	; 0x03
     8b8:	9c 83       	std	Y+4, r25	; 0x04
     8ba:	ad 83       	std	Y+5, r26	; 0x05
     8bc:	be 83       	std	Y+6, r27	; 0x06

000008be <.LBB77>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	4a e7       	ldi	r20, 0x7A	; 122
     8c4:	55 e4       	ldi	r21, 0x45	; 69
     8c6:	6b 81       	ldd	r22, Y+3	; 0x03
     8c8:	7c 81       	ldd	r23, Y+4	; 0x04
     8ca:	8d 81       	ldd	r24, Y+5	; 0x05
     8cc:	9e 81       	ldd	r25, Y+6	; 0x06
     8ce:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     8d2:	a1 96       	adiw	r28, 0x21	; 33
     8d4:	6c af       	std	Y+60, r22	; 0x3c
     8d6:	7d af       	std	Y+61, r23	; 0x3d
     8d8:	8e af       	std	Y+62, r24	; 0x3e
     8da:	9f af       	std	Y+63, r25	; 0x3f
     8dc:	a1 97       	sbiw	r28, 0x21	; 33
     8de:	a1 96       	adiw	r28, 0x21	; 33
     8e0:	8c ad       	ldd	r24, Y+60	; 0x3c
     8e2:	9d ad       	ldd	r25, Y+61	; 0x3d
     8e4:	ae ad       	ldd	r26, Y+62	; 0x3e
     8e6:	bf ad       	ldd	r27, Y+63	; 0x3f
     8e8:	a1 97       	sbiw	r28, 0x21	; 33
     8ea:	8f 83       	std	Y+7, r24	; 0x07
     8ec:	98 87       	std	Y+8, r25	; 0x08
     8ee:	a9 87       	std	Y+9, r26	; 0x09
     8f0:	ba 87       	std	Y+10, r27	; 0x0a

000008f2 <.Loc.126>:
	if (__tmp < 1.0)
     8f2:	20 e0       	ldi	r18, 0x00	; 0
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	40 e8       	ldi	r20, 0x80	; 128
     8f8:	5f e3       	ldi	r21, 0x3F	; 63
     8fa:	6f 81       	ldd	r22, Y+7	; 0x07
     8fc:	78 85       	ldd	r23, Y+8	; 0x08
     8fe:	89 85       	ldd	r24, Y+9	; 0x09
     900:	9a 85       	ldd	r25, Y+10	; 0x0a
     902:	0e 94 2d 08 	call	0x105a	; 0x105a <__cmpsf2>
     906:	88 23       	and	r24, r24
     908:	2c f4       	brge	.+10     	; 0x914 <.L104>

0000090a <.Loc.127>:
		__ticks = 1;
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	9c 87       	std	Y+12, r25	; 0x0c
     910:	8b 87       	std	Y+11, r24	; 0x0b
     912:	66 c0       	rjmp	.+204    	; 0x9e0 <.L51>

00000914 <.L104>:
	else if (__tmp > 65535)
     914:	20 e0       	ldi	r18, 0x00	; 0
     916:	3f ef       	ldi	r19, 0xFF	; 255
     918:	4f e7       	ldi	r20, 0x7F	; 127
     91a:	57 e4       	ldi	r21, 0x47	; 71
     91c:	6f 81       	ldd	r22, Y+7	; 0x07
     91e:	78 85       	ldd	r23, Y+8	; 0x08
     920:	89 85       	ldd	r24, Y+9	; 0x09
     922:	9a 85       	ldd	r25, Y+10	; 0x0a
     924:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     928:	88 23       	and	r24, r24
     92a:	09 f0       	breq	.+2      	; 0x92e <L0^A>

0000092c <L0^A>:
     92c:	0c f4       	brge	.+2      	; 0x930 <.Loc.129>

0000092e <L0^A>:
     92e:	46 c0       	rjmp	.+140    	; 0x9bc <.L105>

00000930 <.Loc.129>:
		__ticks = (uint16_t) (__ms * 10.0);
     930:	20 e0       	ldi	r18, 0x00	; 0
     932:	30 e0       	ldi	r19, 0x00	; 0
     934:	40 e2       	ldi	r20, 0x20	; 32
     936:	51 e4       	ldi	r21, 0x41	; 65
     938:	6b 81       	ldd	r22, Y+3	; 0x03
     93a:	7c 81       	ldd	r23, Y+4	; 0x04
     93c:	8d 81       	ldd	r24, Y+5	; 0x05
     93e:	9e 81       	ldd	r25, Y+6	; 0x06
     940:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     944:	a5 96       	adiw	r28, 0x25	; 37
     946:	6c af       	std	Y+60, r22	; 0x3c
     948:	7d af       	std	Y+61, r23	; 0x3d
     94a:	8e af       	std	Y+62, r24	; 0x3e
     94c:	9f af       	std	Y+63, r25	; 0x3f
     94e:	a5 97       	sbiw	r28, 0x25	; 37
     950:	a5 96       	adiw	r28, 0x25	; 37
     952:	8c ad       	ldd	r24, Y+60	; 0x3c
     954:	9d ad       	ldd	r25, Y+61	; 0x3d
     956:	ae ad       	ldd	r26, Y+62	; 0x3e
     958:	bf ad       	ldd	r27, Y+63	; 0x3f
     95a:	a5 97       	sbiw	r28, 0x25	; 37
     95c:	2d 96       	adiw	r28, 0x0d	; 13
     95e:	8c af       	std	Y+60, r24	; 0x3c
     960:	9d af       	std	Y+61, r25	; 0x3d
     962:	ae af       	std	Y+62, r26	; 0x3e
     964:	bf af       	std	Y+63, r27	; 0x3f
     966:	2d 97       	sbiw	r28, 0x0d	; 13

00000968 <.Loc.130>:
     968:	2d 96       	adiw	r28, 0x0d	; 13
     96a:	6c ad       	ldd	r22, Y+60	; 0x3c
     96c:	7d ad       	ldd	r23, Y+61	; 0x3d
     96e:	8e ad       	ldd	r24, Y+62	; 0x3e
     970:	9f ad       	ldd	r25, Y+63	; 0x3f
     972:	2d 97       	sbiw	r28, 0x0d	; 13
     974:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     978:	a9 96       	adiw	r28, 0x29	; 41
     97a:	6c af       	std	Y+60, r22	; 0x3c
     97c:	7d af       	std	Y+61, r23	; 0x3d
     97e:	8e af       	std	Y+62, r24	; 0x3e
     980:	9f af       	std	Y+63, r25	; 0x3f
     982:	a9 97       	sbiw	r28, 0x29	; 41
     984:	a7 96       	adiw	r28, 0x27	; 39
     986:	ae ad       	ldd	r26, Y+62	; 0x3e
     988:	bf ad       	ldd	r27, Y+63	; 0x3f
     98a:	a7 97       	sbiw	r28, 0x27	; 39
     98c:	bc 87       	std	Y+12, r27	; 0x0c
     98e:	ab 87       	std	Y+11, r26	; 0x0b

00000990 <.Loc.131>:
		while(__ticks)
     990:	10 c0       	rjmp	.+32     	; 0x9b2 <.L54>

00000992 <.L55>:
     992:	80 e9       	ldi	r24, 0x90	; 144
     994:	91 e0       	ldi	r25, 0x01	; 1
     996:	9e 87       	std	Y+14, r25	; 0x0e
     998:	8d 87       	std	Y+13, r24	; 0x0d

0000099a <.LBB79>:
	__asm__ volatile (
     99a:	8d 85       	ldd	r24, Y+13	; 0x0d
     99c:	9e 85       	ldd	r25, Y+14	; 0x0e

0000099e <.L1^B5>:
     99e:	01 97       	sbiw	r24, 0x01	; 1
     9a0:	f1 f7       	brne	.-4      	; 0x99e <.L1^B5>
     9a2:	9e 87       	std	Y+14, r25	; 0x0e
     9a4:	8d 87       	std	Y+13, r24	; 0x0d

000009a6 <.Loc.133>:
	...

000009a8 <.LBE79>:
			__ticks --;
     9a8:	8b 85       	ldd	r24, Y+11	; 0x0b
     9aa:	9c 85       	ldd	r25, Y+12	; 0x0c
     9ac:	01 97       	sbiw	r24, 0x01	; 1
     9ae:	9c 87       	std	Y+12, r25	; 0x0c
     9b0:	8b 87       	std	Y+11, r24	; 0x0b

000009b2 <.L54>:
		while(__ticks)
     9b2:	8b 85       	ldd	r24, Y+11	; 0x0b
     9b4:	9c 85       	ldd	r25, Y+12	; 0x0c
     9b6:	00 97       	sbiw	r24, 0x00	; 0
     9b8:	61 f7       	brne	.-40     	; 0x992 <.L55>

000009ba <.Loc.136>:
		return;
     9ba:	1d c0       	rjmp	.+58     	; 0x9f6 <.L48>

000009bc <.L105>:
		__ticks = (uint16_t)__tmp;
     9bc:	6f 81       	ldd	r22, Y+7	; 0x07
     9be:	78 85       	ldd	r23, Y+8	; 0x08
     9c0:	89 85       	ldd	r24, Y+9	; 0x09
     9c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     9c4:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     9c8:	ad 96       	adiw	r28, 0x2d	; 45
     9ca:	6c af       	std	Y+60, r22	; 0x3c
     9cc:	7d af       	std	Y+61, r23	; 0x3d
     9ce:	8e af       	std	Y+62, r24	; 0x3e
     9d0:	9f af       	std	Y+63, r25	; 0x3f
     9d2:	ad 97       	sbiw	r28, 0x2d	; 45
     9d4:	ab 96       	adiw	r28, 0x2b	; 43
     9d6:	ee ad       	ldd	r30, Y+62	; 0x3e
     9d8:	ff ad       	ldd	r31, Y+63	; 0x3f
     9da:	ab 97       	sbiw	r28, 0x2b	; 43
     9dc:	fc 87       	std	Y+12, r31	; 0x0c
     9de:	eb 87       	std	Y+11, r30	; 0x0b

000009e0 <.L51>:
     9e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     9e2:	9c 85       	ldd	r25, Y+12	; 0x0c
     9e4:	98 8b       	std	Y+16, r25	; 0x10
     9e6:	8f 87       	std	Y+15, r24	; 0x0f

000009e8 <.LBB81>:
     9e8:	8f 85       	ldd	r24, Y+15	; 0x0f
     9ea:	98 89       	ldd	r25, Y+16	; 0x10

000009ec <.L1^B6>:
     9ec:	01 97       	sbiw	r24, 0x01	; 1
     9ee:	f1 f7       	brne	.-4      	; 0x9ec <.L1^B6>
     9f0:	98 8b       	std	Y+16, r25	; 0x10
     9f2:	8f 87       	std	Y+15, r24	; 0x0f

000009f4 <.Loc.139>:
	...

000009f6 <.L48>:
                _delay_ms(100);
            }

            if (distance < 15)
     9f6:	89 81       	ldd	r24, Y+1	; 0x01
     9f8:	9a 81       	ldd	r25, Y+2	; 0x02
     9fa:	8e 30       	cpi	r24, 0x0E	; 14
     9fc:	91 05       	cpc	r25, r1
     9fe:	11 f0       	breq	.+4      	; 0xa04 <.LBB83>

00000a00 <L0^A>:
     a00:	08 f0       	brcs	.+2      	; 0xa04 <.LBB83>

00000a02 <L0^A>:
     a02:	a8 c0       	rjmp	.+336    	; 0xb54 <.L57>

00000a04 <.LBB83>:
            {
                stoppen();
     a04:	0e 94 a1 01 	call	0x342	; 0x342 <stoppen>

00000a08 <.Loc.142>:
                buzzer_uit();
     a08:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <buzzer_uit>
     a0c:	80 e0       	ldi	r24, 0x00	; 0
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	a8 ec       	ldi	r26, 0xC8	; 200
     a12:	b2 e4       	ldi	r27, 0x42	; 66
     a14:	89 8b       	std	Y+17, r24	; 0x11
     a16:	9a 8b       	std	Y+18, r25	; 0x12
     a18:	ab 8b       	std	Y+19, r26	; 0x13
     a1a:	bc 8b       	std	Y+20, r27	; 0x14

00000a1c <.LBB84>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	4a e7       	ldi	r20, 0x7A	; 122
     a22:	55 e4       	ldi	r21, 0x45	; 69
     a24:	69 89       	ldd	r22, Y+17	; 0x11
     a26:	7a 89       	ldd	r23, Y+18	; 0x12
     a28:	8b 89       	ldd	r24, Y+19	; 0x13
     a2a:	9c 89       	ldd	r25, Y+20	; 0x14
     a2c:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     a30:	e1 96       	adiw	r28, 0x31	; 49
     a32:	6c af       	std	Y+60, r22	; 0x3c
     a34:	7d af       	std	Y+61, r23	; 0x3d
     a36:	8e af       	std	Y+62, r24	; 0x3e
     a38:	9f af       	std	Y+63, r25	; 0x3f
     a3a:	e1 97       	sbiw	r28, 0x31	; 49
     a3c:	e1 96       	adiw	r28, 0x31	; 49
     a3e:	8c ad       	ldd	r24, Y+60	; 0x3c
     a40:	9d ad       	ldd	r25, Y+61	; 0x3d
     a42:	ae ad       	ldd	r26, Y+62	; 0x3e
     a44:	bf ad       	ldd	r27, Y+63	; 0x3f
     a46:	e1 97       	sbiw	r28, 0x31	; 49
     a48:	8d 8b       	std	Y+21, r24	; 0x15
     a4a:	9e 8b       	std	Y+22, r25	; 0x16
     a4c:	af 8b       	std	Y+23, r26	; 0x17
     a4e:	b8 8f       	std	Y+24, r27	; 0x18

00000a50 <.Loc.144>:
	if (__tmp < 1.0)
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	40 e8       	ldi	r20, 0x80	; 128
     a56:	5f e3       	ldi	r21, 0x3F	; 63
     a58:	6d 89       	ldd	r22, Y+21	; 0x15
     a5a:	7e 89       	ldd	r23, Y+22	; 0x16
     a5c:	8f 89       	ldd	r24, Y+23	; 0x17
     a5e:	98 8d       	ldd	r25, Y+24	; 0x18
     a60:	0e 94 2d 08 	call	0x105a	; 0x105a <__cmpsf2>
     a64:	88 23       	and	r24, r24
     a66:	2c f4       	brge	.+10     	; 0xa72 <.L106>

00000a68 <.Loc.145>:
		__ticks = 1;
     a68:	81 e0       	ldi	r24, 0x01	; 1
     a6a:	90 e0       	ldi	r25, 0x00	; 0
     a6c:	9a 8f       	std	Y+26, r25	; 0x1a
     a6e:	89 8f       	std	Y+25, r24	; 0x19
     a70:	66 c0       	rjmp	.+204    	; 0xb3e <.L60>

00000a72 <.L106>:
	else if (__tmp > 65535)
     a72:	20 e0       	ldi	r18, 0x00	; 0
     a74:	3f ef       	ldi	r19, 0xFF	; 255
     a76:	4f e7       	ldi	r20, 0x7F	; 127
     a78:	57 e4       	ldi	r21, 0x47	; 71
     a7a:	6d 89       	ldd	r22, Y+21	; 0x15
     a7c:	7e 89       	ldd	r23, Y+22	; 0x16
     a7e:	8f 89       	ldd	r24, Y+23	; 0x17
     a80:	98 8d       	ldd	r25, Y+24	; 0x18
     a82:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     a86:	88 23       	and	r24, r24
     a88:	09 f0       	breq	.+2      	; 0xa8c <L0^A>

00000a8a <L0^A>:
     a8a:	0c f4       	brge	.+2      	; 0xa8e <.Loc.147>

00000a8c <L0^A>:
     a8c:	46 c0       	rjmp	.+140    	; 0xb1a <.L107>

00000a8e <.Loc.147>:
		__ticks = (uint16_t) (__ms * 10.0);
     a8e:	20 e0       	ldi	r18, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	40 e2       	ldi	r20, 0x20	; 32
     a94:	51 e4       	ldi	r21, 0x41	; 65
     a96:	69 89       	ldd	r22, Y+17	; 0x11
     a98:	7a 89       	ldd	r23, Y+18	; 0x12
     a9a:	8b 89       	ldd	r24, Y+19	; 0x13
     a9c:	9c 89       	ldd	r25, Y+20	; 0x14
     a9e:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     aa2:	e5 96       	adiw	r28, 0x35	; 53
     aa4:	6c af       	std	Y+60, r22	; 0x3c
     aa6:	7d af       	std	Y+61, r23	; 0x3d
     aa8:	8e af       	std	Y+62, r24	; 0x3e
     aaa:	9f af       	std	Y+63, r25	; 0x3f
     aac:	e5 97       	sbiw	r28, 0x35	; 53
     aae:	e5 96       	adiw	r28, 0x35	; 53
     ab0:	8c ad       	ldd	r24, Y+60	; 0x3c
     ab2:	9d ad       	ldd	r25, Y+61	; 0x3d
     ab4:	ae ad       	ldd	r26, Y+62	; 0x3e
     ab6:	bf ad       	ldd	r27, Y+63	; 0x3f
     ab8:	e5 97       	sbiw	r28, 0x35	; 53
     aba:	61 96       	adiw	r28, 0x11	; 17
     abc:	8c af       	std	Y+60, r24	; 0x3c
     abe:	9d af       	std	Y+61, r25	; 0x3d
     ac0:	ae af       	std	Y+62, r26	; 0x3e
     ac2:	bf af       	std	Y+63, r27	; 0x3f
     ac4:	61 97       	sbiw	r28, 0x11	; 17

00000ac6 <.Loc.148>:
     ac6:	61 96       	adiw	r28, 0x11	; 17
     ac8:	6c ad       	ldd	r22, Y+60	; 0x3c
     aca:	7d ad       	ldd	r23, Y+61	; 0x3d
     acc:	8e ad       	ldd	r24, Y+62	; 0x3e
     ace:	9f ad       	ldd	r25, Y+63	; 0x3f
     ad0:	61 97       	sbiw	r28, 0x11	; 17
     ad2:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     ad6:	e9 96       	adiw	r28, 0x39	; 57
     ad8:	6c af       	std	Y+60, r22	; 0x3c
     ada:	7d af       	std	Y+61, r23	; 0x3d
     adc:	8e af       	std	Y+62, r24	; 0x3e
     ade:	9f af       	std	Y+63, r25	; 0x3f
     ae0:	e9 97       	sbiw	r28, 0x39	; 57
     ae2:	e7 96       	adiw	r28, 0x37	; 55
     ae4:	ae ad       	ldd	r26, Y+62	; 0x3e
     ae6:	bf ad       	ldd	r27, Y+63	; 0x3f
     ae8:	e7 97       	sbiw	r28, 0x37	; 55
     aea:	ba 8f       	std	Y+26, r27	; 0x1a
     aec:	a9 8f       	std	Y+25, r26	; 0x19

00000aee <.Loc.149>:
		while(__ticks)
     aee:	10 c0       	rjmp	.+32     	; 0xb10 <.L63>

00000af0 <.L64>:
     af0:	80 e9       	ldi	r24, 0x90	; 144
     af2:	91 e0       	ldi	r25, 0x01	; 1
     af4:	9c 8f       	std	Y+28, r25	; 0x1c
     af6:	8b 8f       	std	Y+27, r24	; 0x1b

00000af8 <.LBB86>:
     af8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     afa:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000afc <.L1^B7>:
     afc:	01 97       	sbiw	r24, 0x01	; 1
     afe:	f1 f7       	brne	.-4      	; 0xafc <.L1^B7>
     b00:	9c 8f       	std	Y+28, r25	; 0x1c
     b02:	8b 8f       	std	Y+27, r24	; 0x1b

00000b04 <.Loc.151>:
	...

00000b06 <.LBE86>:
			__ticks --;
     b06:	89 8d       	ldd	r24, Y+25	; 0x19
     b08:	9a 8d       	ldd	r25, Y+26	; 0x1a
     b0a:	01 97       	sbiw	r24, 0x01	; 1
     b0c:	9a 8f       	std	Y+26, r25	; 0x1a
     b0e:	89 8f       	std	Y+25, r24	; 0x19

00000b10 <.L63>:
		while(__ticks)
     b10:	89 8d       	ldd	r24, Y+25	; 0x19
     b12:	9a 8d       	ldd	r25, Y+26	; 0x1a
     b14:	00 97       	sbiw	r24, 0x00	; 0
     b16:	61 f7       	brne	.-40     	; 0xaf0 <.L64>

00000b18 <.Loc.154>:
		return;
     b18:	1d c0       	rjmp	.+58     	; 0xb54 <.L57>

00000b1a <.L107>:
		__ticks = (uint16_t)__tmp;
     b1a:	6d 89       	ldd	r22, Y+21	; 0x15
     b1c:	7e 89       	ldd	r23, Y+22	; 0x16
     b1e:	8f 89       	ldd	r24, Y+23	; 0x17
     b20:	98 8d       	ldd	r25, Y+24	; 0x18
     b22:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     b26:	ed 96       	adiw	r28, 0x3d	; 61
     b28:	6c af       	std	Y+60, r22	; 0x3c
     b2a:	7d af       	std	Y+61, r23	; 0x3d
     b2c:	8e af       	std	Y+62, r24	; 0x3e
     b2e:	9f af       	std	Y+63, r25	; 0x3f
     b30:	ed 97       	sbiw	r28, 0x3d	; 61
     b32:	eb 96       	adiw	r28, 0x3b	; 59
     b34:	ee ad       	ldd	r30, Y+62	; 0x3e
     b36:	ff ad       	ldd	r31, Y+63	; 0x3f
     b38:	eb 97       	sbiw	r28, 0x3b	; 59
     b3a:	fa 8f       	std	Y+26, r31	; 0x1a
     b3c:	e9 8f       	std	Y+25, r30	; 0x19

00000b3e <.L60>:
     b3e:	89 8d       	ldd	r24, Y+25	; 0x19
     b40:	9a 8d       	ldd	r25, Y+26	; 0x1a
     b42:	9e 8f       	std	Y+30, r25	; 0x1e
     b44:	8d 8f       	std	Y+29, r24	; 0x1d

00000b46 <.LBB88>:
     b46:	8d 8d       	ldd	r24, Y+29	; 0x1d
     b48:	9e 8d       	ldd	r25, Y+30	; 0x1e

00000b4a <.L1^B8>:
     b4a:	01 97       	sbiw	r24, 0x01	; 1
     b4c:	f1 f7       	brne	.-4      	; 0xb4a <.L1^B8>
     b4e:	9e 8f       	std	Y+30, r25	; 0x1e
     b50:	8d 8f       	std	Y+29, r24	; 0x1d

00000b52 <.Loc.157>:
	...

00000b54 <.L57>:
                _delay_ms(100);

            }

            if(obstakeldetectie())
     b54:	0e 94 fd 03 	call	0x7fa	; 0x7fa <obstakeldetectie>

00000b58 <.Loc.159>:
     b58:	00 97       	sbiw	r24, 0x00	; 0
     b5a:	09 f4       	brne	.+2      	; 0xb5e <.LBB90>

00000b5c <L0^A>:
     b5c:	b6 c0       	rjmp	.+364    	; 0xcca <.L66>

00000b5e <.LBB90>:
            {
               bocht_naar_rechts();
     b5e:	0e 94 69 01 	call	0x2d2	; 0x2d2 <bocht_naar_rechts>
     b62:	80 e0       	ldi	r24, 0x00	; 0
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	a8 ec       	ldi	r26, 0xC8	; 200
     b68:	b2 e4       	ldi	r27, 0x42	; 66
     b6a:	8f 8f       	std	Y+31, r24	; 0x1f
     b6c:	98 a3       	std	Y+32, r25	; 0x20
     b6e:	a9 a3       	std	Y+33, r26	; 0x21
     b70:	ba a3       	std	Y+34, r27	; 0x22

00000b72 <.LBB91>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     b72:	20 e0       	ldi	r18, 0x00	; 0
     b74:	30 e0       	ldi	r19, 0x00	; 0
     b76:	4a e7       	ldi	r20, 0x7A	; 122
     b78:	55 e4       	ldi	r21, 0x45	; 69
     b7a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     b7c:	78 a1       	ldd	r23, Y+32	; 0x20
     b7e:	89 a1       	ldd	r24, Y+33	; 0x21
     b80:	9a a1       	ldd	r25, Y+34	; 0x22
     b82:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     b86:	c3 58       	subi	r28, 0x83	; 131
     b88:	df 4f       	sbci	r29, 0xFF	; 255
     b8a:	68 83       	st	Y, r22
     b8c:	79 83       	std	Y+1, r23	; 0x01
     b8e:	8a 83       	std	Y+2, r24	; 0x02
     b90:	9b 83       	std	Y+3, r25	; 0x03
     b92:	cd 57       	subi	r28, 0x7D	; 125
     b94:	d0 40       	sbci	r29, 0x00	; 0
     b96:	c3 58       	subi	r28, 0x83	; 131
     b98:	df 4f       	sbci	r29, 0xFF	; 255
     b9a:	88 81       	ld	r24, Y
     b9c:	99 81       	ldd	r25, Y+1	; 0x01
     b9e:	aa 81       	ldd	r26, Y+2	; 0x02
     ba0:	bb 81       	ldd	r27, Y+3	; 0x03
     ba2:	cd 57       	subi	r28, 0x7D	; 125
     ba4:	d0 40       	sbci	r29, 0x00	; 0
     ba6:	8b a3       	std	Y+35, r24	; 0x23
     ba8:	9c a3       	std	Y+36, r25	; 0x24
     baa:	ad a3       	std	Y+37, r26	; 0x25
     bac:	be a3       	std	Y+38, r27	; 0x26

00000bae <.Loc.162>:
	if (__tmp < 1.0)
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	40 e8       	ldi	r20, 0x80	; 128
     bb4:	5f e3       	ldi	r21, 0x3F	; 63
     bb6:	6b a1       	ldd	r22, Y+35	; 0x23
     bb8:	7c a1       	ldd	r23, Y+36	; 0x24
     bba:	8d a1       	ldd	r24, Y+37	; 0x25
     bbc:	9e a1       	ldd	r25, Y+38	; 0x26
     bbe:	0e 94 2d 08 	call	0x105a	; 0x105a <__cmpsf2>
     bc2:	88 23       	and	r24, r24
     bc4:	2c f4       	brge	.+10     	; 0xbd0 <.L108>

00000bc6 <.Loc.163>:
		__ticks = 1;
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	98 a7       	std	Y+40, r25	; 0x28
     bcc:	8f a3       	std	Y+39, r24	; 0x27
     bce:	72 c0       	rjmp	.+228    	; 0xcb4 <.L69>

00000bd0 <.L108>:
	else if (__tmp > 65535)
     bd0:	20 e0       	ldi	r18, 0x00	; 0
     bd2:	3f ef       	ldi	r19, 0xFF	; 255
     bd4:	4f e7       	ldi	r20, 0x7F	; 127
     bd6:	57 e4       	ldi	r21, 0x47	; 71
     bd8:	6b a1       	ldd	r22, Y+35	; 0x23
     bda:	7c a1       	ldd	r23, Y+36	; 0x24
     bdc:	8d a1       	ldd	r24, Y+37	; 0x25
     bde:	9e a1       	ldd	r25, Y+38	; 0x26
     be0:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     be4:	88 23       	and	r24, r24
     be6:	09 f0       	breq	.+2      	; 0xbea <L0^A>

00000be8 <L0^A>:
     be8:	0c f4       	brge	.+2      	; 0xbec <.Loc.165>

00000bea <L0^A>:
     bea:	4e c0       	rjmp	.+156    	; 0xc88 <.L109>

00000bec <.Loc.165>:
		__ticks = (uint16_t) (__ms * 10.0);
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	40 e2       	ldi	r20, 0x20	; 32
     bf2:	51 e4       	ldi	r21, 0x41	; 65
     bf4:	6f 8d       	ldd	r22, Y+31	; 0x1f
     bf6:	78 a1       	ldd	r23, Y+32	; 0x20
     bf8:	89 a1       	ldd	r24, Y+33	; 0x21
     bfa:	9a a1       	ldd	r25, Y+34	; 0x22
     bfc:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     c00:	cf 57       	subi	r28, 0x7F	; 127
     c02:	df 4f       	sbci	r29, 0xFF	; 255
     c04:	68 83       	st	Y, r22
     c06:	79 83       	std	Y+1, r23	; 0x01
     c08:	8a 83       	std	Y+2, r24	; 0x02
     c0a:	9b 83       	std	Y+3, r25	; 0x03
     c0c:	c1 58       	subi	r28, 0x81	; 129
     c0e:	d0 40       	sbci	r29, 0x00	; 0
     c10:	cf 57       	subi	r28, 0x7F	; 127
     c12:	df 4f       	sbci	r29, 0xFF	; 255
     c14:	88 81       	ld	r24, Y
     c16:	99 81       	ldd	r25, Y+1	; 0x01
     c18:	aa 81       	ldd	r26, Y+2	; 0x02
     c1a:	bb 81       	ldd	r27, Y+3	; 0x03
     c1c:	c1 58       	subi	r28, 0x81	; 129
     c1e:	d0 40       	sbci	r29, 0x00	; 0
     c20:	65 96       	adiw	r28, 0x15	; 21
     c22:	8c af       	std	Y+60, r24	; 0x3c
     c24:	9d af       	std	Y+61, r25	; 0x3d
     c26:	ae af       	std	Y+62, r26	; 0x3e
     c28:	bf af       	std	Y+63, r27	; 0x3f
     c2a:	65 97       	sbiw	r28, 0x15	; 21

00000c2c <.Loc.166>:
     c2c:	65 96       	adiw	r28, 0x15	; 21
     c2e:	6c ad       	ldd	r22, Y+60	; 0x3c
     c30:	7d ad       	ldd	r23, Y+61	; 0x3d
     c32:	8e ad       	ldd	r24, Y+62	; 0x3e
     c34:	9f ad       	ldd	r25, Y+63	; 0x3f
     c36:	65 97       	sbiw	r28, 0x15	; 21
     c38:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     c3c:	cb 57       	subi	r28, 0x7B	; 123
     c3e:	df 4f       	sbci	r29, 0xFF	; 255
     c40:	68 83       	st	Y, r22
     c42:	79 83       	std	Y+1, r23	; 0x01
     c44:	8a 83       	std	Y+2, r24	; 0x02
     c46:	9b 83       	std	Y+3, r25	; 0x03
     c48:	c5 58       	subi	r28, 0x85	; 133
     c4a:	d0 40       	sbci	r29, 0x00	; 0
     c4c:	cb 57       	subi	r28, 0x7B	; 123
     c4e:	df 4f       	sbci	r29, 0xFF	; 255
     c50:	a8 81       	ld	r26, Y
     c52:	b9 81       	ldd	r27, Y+1	; 0x01
     c54:	c5 58       	subi	r28, 0x85	; 133
     c56:	d0 40       	sbci	r29, 0x00	; 0
     c58:	b8 a7       	std	Y+40, r27	; 0x28
     c5a:	af a3       	std	Y+39, r26	; 0x27

00000c5c <.Loc.167>:
		while(__ticks)
     c5c:	10 c0       	rjmp	.+32     	; 0xc7e <.L72>

00000c5e <.L73>:
     c5e:	80 e9       	ldi	r24, 0x90	; 144
     c60:	91 e0       	ldi	r25, 0x01	; 1
     c62:	9a a7       	std	Y+42, r25	; 0x2a
     c64:	89 a7       	std	Y+41, r24	; 0x29

00000c66 <.LBB93>:
     c66:	89 a5       	ldd	r24, Y+41	; 0x29
     c68:	9a a5       	ldd	r25, Y+42	; 0x2a

00000c6a <.L1^B9>:
     c6a:	01 97       	sbiw	r24, 0x01	; 1
     c6c:	f1 f7       	brne	.-4      	; 0xc6a <.L1^B9>
     c6e:	9a a7       	std	Y+42, r25	; 0x2a
     c70:	89 a7       	std	Y+41, r24	; 0x29

00000c72 <.Loc.169>:
	...

00000c74 <.LBE93>:
			__ticks --;
     c74:	8f a1       	ldd	r24, Y+39	; 0x27
     c76:	98 a5       	ldd	r25, Y+40	; 0x28
     c78:	01 97       	sbiw	r24, 0x01	; 1
     c7a:	98 a7       	std	Y+40, r25	; 0x28
     c7c:	8f a3       	std	Y+39, r24	; 0x27

00000c7e <.L72>:
		while(__ticks)
     c7e:	8f a1       	ldd	r24, Y+39	; 0x27
     c80:	98 a5       	ldd	r25, Y+40	; 0x28
     c82:	00 97       	sbiw	r24, 0x00	; 0
     c84:	61 f7       	brne	.-40     	; 0xc5e <.L73>

00000c86 <.Loc.172>:
		return;
     c86:	21 c0       	rjmp	.+66     	; 0xcca <.L66>

00000c88 <.L109>:
		__ticks = (uint16_t)__tmp;
     c88:	6b a1       	ldd	r22, Y+35	; 0x23
     c8a:	7c a1       	ldd	r23, Y+36	; 0x24
     c8c:	8d a1       	ldd	r24, Y+37	; 0x25
     c8e:	9e a1       	ldd	r25, Y+38	; 0x26
     c90:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     c94:	c7 57       	subi	r28, 0x77	; 119
     c96:	df 4f       	sbci	r29, 0xFF	; 255
     c98:	68 83       	st	Y, r22
     c9a:	79 83       	std	Y+1, r23	; 0x01
     c9c:	8a 83       	std	Y+2, r24	; 0x02
     c9e:	9b 83       	std	Y+3, r25	; 0x03
     ca0:	c9 58       	subi	r28, 0x89	; 137
     ca2:	d0 40       	sbci	r29, 0x00	; 0
     ca4:	c7 57       	subi	r28, 0x77	; 119
     ca6:	df 4f       	sbci	r29, 0xFF	; 255
     ca8:	e8 81       	ld	r30, Y
     caa:	f9 81       	ldd	r31, Y+1	; 0x01
     cac:	c9 58       	subi	r28, 0x89	; 137
     cae:	d0 40       	sbci	r29, 0x00	; 0
     cb0:	f8 a7       	std	Y+40, r31	; 0x28
     cb2:	ef a3       	std	Y+39, r30	; 0x27

00000cb4 <.L69>:
     cb4:	8f a1       	ldd	r24, Y+39	; 0x27
     cb6:	98 a5       	ldd	r25, Y+40	; 0x28
     cb8:	9c a7       	std	Y+44, r25	; 0x2c
     cba:	8b a7       	std	Y+43, r24	; 0x2b

00000cbc <.LBB95>:
     cbc:	8b a5       	ldd	r24, Y+43	; 0x2b
     cbe:	9c a5       	ldd	r25, Y+44	; 0x2c

00000cc0 <.L1^B10>:
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	f1 f7       	brne	.-4      	; 0xcc0 <.L1^B10>
     cc4:	9c a7       	std	Y+44, r25	; 0x2c
     cc6:	8b a7       	std	Y+43, r24	; 0x2b

00000cc8 <.Loc.175>:
	...

00000cca <.L66>:
               _delay_ms(100);
            }

            if(obstakeldetectie2())
     cca:	0e 94 12 04 	call	0x824	; 0x824 <obstakeldetectie2>

00000cce <.Loc.177>:
     cce:	00 97       	sbiw	r24, 0x00	; 0
     cd0:	09 f4       	brne	.+2      	; 0xcd4 <.LBB97>

00000cd2 <L0^A>:
     cd2:	b6 c0       	rjmp	.+364    	; 0xe40 <.L75>

00000cd4 <.LBB97>:
            {
                bocht_naar_links();
     cd4:	0e 94 79 01 	call	0x2f2	; 0x2f2 <bocht_naar_links>
     cd8:	80 e0       	ldi	r24, 0x00	; 0
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	a8 ec       	ldi	r26, 0xC8	; 200
     cde:	b2 e4       	ldi	r27, 0x42	; 66
     ce0:	8d a7       	std	Y+45, r24	; 0x2d
     ce2:	9e a7       	std	Y+46, r25	; 0x2e
     ce4:	af a7       	std	Y+47, r26	; 0x2f
     ce6:	b8 ab       	std	Y+48, r27	; 0x30

00000ce8 <.LBB98>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	4a e7       	ldi	r20, 0x7A	; 122
     cee:	55 e4       	ldi	r21, 0x45	; 69
     cf0:	6d a5       	ldd	r22, Y+45	; 0x2d
     cf2:	7e a5       	ldd	r23, Y+46	; 0x2e
     cf4:	8f a5       	ldd	r24, Y+47	; 0x2f
     cf6:	98 a9       	ldd	r25, Y+48	; 0x30
     cf8:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     cfc:	c3 57       	subi	r28, 0x73	; 115
     cfe:	df 4f       	sbci	r29, 0xFF	; 255
     d00:	68 83       	st	Y, r22
     d02:	79 83       	std	Y+1, r23	; 0x01
     d04:	8a 83       	std	Y+2, r24	; 0x02
     d06:	9b 83       	std	Y+3, r25	; 0x03
     d08:	cd 58       	subi	r28, 0x8D	; 141
     d0a:	d0 40       	sbci	r29, 0x00	; 0
     d0c:	c3 57       	subi	r28, 0x73	; 115
     d0e:	df 4f       	sbci	r29, 0xFF	; 255
     d10:	88 81       	ld	r24, Y
     d12:	99 81       	ldd	r25, Y+1	; 0x01
     d14:	aa 81       	ldd	r26, Y+2	; 0x02
     d16:	bb 81       	ldd	r27, Y+3	; 0x03
     d18:	cd 58       	subi	r28, 0x8D	; 141
     d1a:	d0 40       	sbci	r29, 0x00	; 0
     d1c:	89 ab       	std	Y+49, r24	; 0x31
     d1e:	9a ab       	std	Y+50, r25	; 0x32
     d20:	ab ab       	std	Y+51, r26	; 0x33
     d22:	bc ab       	std	Y+52, r27	; 0x34

00000d24 <.Loc.180>:
	if (__tmp < 1.0)
     d24:	20 e0       	ldi	r18, 0x00	; 0
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	40 e8       	ldi	r20, 0x80	; 128
     d2a:	5f e3       	ldi	r21, 0x3F	; 63
     d2c:	69 a9       	ldd	r22, Y+49	; 0x31
     d2e:	7a a9       	ldd	r23, Y+50	; 0x32
     d30:	8b a9       	ldd	r24, Y+51	; 0x33
     d32:	9c a9       	ldd	r25, Y+52	; 0x34
     d34:	0e 94 2d 08 	call	0x105a	; 0x105a <__cmpsf2>
     d38:	88 23       	and	r24, r24
     d3a:	2c f4       	brge	.+10     	; 0xd46 <.L110>

00000d3c <.Loc.181>:
		__ticks = 1;
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	9e ab       	std	Y+54, r25	; 0x36
     d42:	8d ab       	std	Y+53, r24	; 0x35
     d44:	72 c0       	rjmp	.+228    	; 0xe2a <.L78>

00000d46 <.L110>:
	else if (__tmp > 65535)
     d46:	20 e0       	ldi	r18, 0x00	; 0
     d48:	3f ef       	ldi	r19, 0xFF	; 255
     d4a:	4f e7       	ldi	r20, 0x7F	; 127
     d4c:	57 e4       	ldi	r21, 0x47	; 71
     d4e:	69 a9       	ldd	r22, Y+49	; 0x31
     d50:	7a a9       	ldd	r23, Y+50	; 0x32
     d52:	8b a9       	ldd	r24, Y+51	; 0x33
     d54:	9c a9       	ldd	r25, Y+52	; 0x34
     d56:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     d5a:	88 23       	and	r24, r24
     d5c:	09 f0       	breq	.+2      	; 0xd60 <L0^A>

00000d5e <L0^A>:
     d5e:	0c f4       	brge	.+2      	; 0xd62 <.Loc.183>

00000d60 <L0^A>:
     d60:	4e c0       	rjmp	.+156    	; 0xdfe <.L111>

00000d62 <.Loc.183>:
		__ticks = (uint16_t) (__ms * 10.0);
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	30 e0       	ldi	r19, 0x00	; 0
     d66:	40 e2       	ldi	r20, 0x20	; 32
     d68:	51 e4       	ldi	r21, 0x41	; 65
     d6a:	6d a5       	ldd	r22, Y+45	; 0x2d
     d6c:	7e a5       	ldd	r23, Y+46	; 0x2e
     d6e:	8f a5       	ldd	r24, Y+47	; 0x2f
     d70:	98 a9       	ldd	r25, Y+48	; 0x30
     d72:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     d76:	cf 56       	subi	r28, 0x6F	; 111
     d78:	df 4f       	sbci	r29, 0xFF	; 255
     d7a:	68 83       	st	Y, r22
     d7c:	79 83       	std	Y+1, r23	; 0x01
     d7e:	8a 83       	std	Y+2, r24	; 0x02
     d80:	9b 83       	std	Y+3, r25	; 0x03
     d82:	c1 59       	subi	r28, 0x91	; 145
     d84:	d0 40       	sbci	r29, 0x00	; 0
     d86:	cf 56       	subi	r28, 0x6F	; 111
     d88:	df 4f       	sbci	r29, 0xFF	; 255
     d8a:	88 81       	ld	r24, Y
     d8c:	99 81       	ldd	r25, Y+1	; 0x01
     d8e:	aa 81       	ldd	r26, Y+2	; 0x02
     d90:	bb 81       	ldd	r27, Y+3	; 0x03
     d92:	c1 59       	subi	r28, 0x91	; 145
     d94:	d0 40       	sbci	r29, 0x00	; 0
     d96:	69 96       	adiw	r28, 0x19	; 25
     d98:	8c af       	std	Y+60, r24	; 0x3c
     d9a:	9d af       	std	Y+61, r25	; 0x3d
     d9c:	ae af       	std	Y+62, r26	; 0x3e
     d9e:	bf af       	std	Y+63, r27	; 0x3f
     da0:	69 97       	sbiw	r28, 0x19	; 25

00000da2 <.Loc.184>:
     da2:	69 96       	adiw	r28, 0x19	; 25
     da4:	6c ad       	ldd	r22, Y+60	; 0x3c
     da6:	7d ad       	ldd	r23, Y+61	; 0x3d
     da8:	8e ad       	ldd	r24, Y+62	; 0x3e
     daa:	9f ad       	ldd	r25, Y+63	; 0x3f
     dac:	69 97       	sbiw	r28, 0x19	; 25
     dae:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     db2:	cb 56       	subi	r28, 0x6B	; 107
     db4:	df 4f       	sbci	r29, 0xFF	; 255
     db6:	68 83       	st	Y, r22
     db8:	79 83       	std	Y+1, r23	; 0x01
     dba:	8a 83       	std	Y+2, r24	; 0x02
     dbc:	9b 83       	std	Y+3, r25	; 0x03
     dbe:	c5 59       	subi	r28, 0x95	; 149
     dc0:	d0 40       	sbci	r29, 0x00	; 0
     dc2:	cb 56       	subi	r28, 0x6B	; 107
     dc4:	df 4f       	sbci	r29, 0xFF	; 255
     dc6:	a8 81       	ld	r26, Y
     dc8:	b9 81       	ldd	r27, Y+1	; 0x01
     dca:	c5 59       	subi	r28, 0x95	; 149
     dcc:	d0 40       	sbci	r29, 0x00	; 0
     dce:	be ab       	std	Y+54, r27	; 0x36
     dd0:	ad ab       	std	Y+53, r26	; 0x35

00000dd2 <.Loc.185>:
		while(__ticks)
     dd2:	10 c0       	rjmp	.+32     	; 0xdf4 <.L81>

00000dd4 <.L82>:
     dd4:	80 e9       	ldi	r24, 0x90	; 144
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	98 af       	std	Y+56, r25	; 0x38
     dda:	8f ab       	std	Y+55, r24	; 0x37

00000ddc <.LBB100>:
     ddc:	8f a9       	ldd	r24, Y+55	; 0x37
     dde:	98 ad       	ldd	r25, Y+56	; 0x38

00000de0 <.L1^B11>:
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	f1 f7       	brne	.-4      	; 0xde0 <.L1^B11>
     de4:	98 af       	std	Y+56, r25	; 0x38
     de6:	8f ab       	std	Y+55, r24	; 0x37

00000de8 <.Loc.187>:
	...

00000dea <.LBE100>:
			__ticks --;
     dea:	8d a9       	ldd	r24, Y+53	; 0x35
     dec:	9e a9       	ldd	r25, Y+54	; 0x36
     dee:	01 97       	sbiw	r24, 0x01	; 1
     df0:	9e ab       	std	Y+54, r25	; 0x36
     df2:	8d ab       	std	Y+53, r24	; 0x35

00000df4 <.L81>:
		while(__ticks)
     df4:	8d a9       	ldd	r24, Y+53	; 0x35
     df6:	9e a9       	ldd	r25, Y+54	; 0x36
     df8:	00 97       	sbiw	r24, 0x00	; 0
     dfa:	61 f7       	brne	.-40     	; 0xdd4 <.L82>

00000dfc <.Loc.190>:
		return;
     dfc:	1e c1       	rjmp	.+572    	; 0x103a <.L84>

00000dfe <.L111>:
		__ticks = (uint16_t)__tmp;
     dfe:	69 a9       	ldd	r22, Y+49	; 0x31
     e00:	7a a9       	ldd	r23, Y+50	; 0x32
     e02:	8b a9       	ldd	r24, Y+51	; 0x33
     e04:	9c a9       	ldd	r25, Y+52	; 0x34
     e06:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     e0a:	c7 56       	subi	r28, 0x67	; 103
     e0c:	df 4f       	sbci	r29, 0xFF	; 255
     e0e:	68 83       	st	Y, r22
     e10:	79 83       	std	Y+1, r23	; 0x01
     e12:	8a 83       	std	Y+2, r24	; 0x02
     e14:	9b 83       	std	Y+3, r25	; 0x03
     e16:	c9 59       	subi	r28, 0x99	; 153
     e18:	d0 40       	sbci	r29, 0x00	; 0
     e1a:	c7 56       	subi	r28, 0x67	; 103
     e1c:	df 4f       	sbci	r29, 0xFF	; 255
     e1e:	e8 81       	ld	r30, Y
     e20:	f9 81       	ldd	r31, Y+1	; 0x01
     e22:	c9 59       	subi	r28, 0x99	; 153
     e24:	d0 40       	sbci	r29, 0x00	; 0
     e26:	fe ab       	std	Y+54, r31	; 0x36
     e28:	ed ab       	std	Y+53, r30	; 0x35

00000e2a <.L78>:
     e2a:	8d a9       	ldd	r24, Y+53	; 0x35
     e2c:	9e a9       	ldd	r25, Y+54	; 0x36
     e2e:	9a af       	std	Y+58, r25	; 0x3a
     e30:	89 af       	std	Y+57, r24	; 0x39

00000e32 <.LBB102>:
     e32:	89 ad       	ldd	r24, Y+57	; 0x39
     e34:	9a ad       	ldd	r25, Y+58	; 0x3a

00000e36 <.L1^B12>:
     e36:	01 97       	sbiw	r24, 0x01	; 1
     e38:	f1 f7       	brne	.-4      	; 0xe36 <.L1^B12>
     e3a:	9a af       	std	Y+58, r25	; 0x3a
     e3c:	89 af       	std	Y+57, r24	; 0x39

00000e3e <.Loc.193>:
}
     e3e:	fd c0       	rjmp	.+506    	; 0x103a <.L84>

00000e40 <.L75>:
                _delay_ms(100);
            }
            else
            {
                rechtvooruit();
     e40:	0e 94 89 01 	call	0x312	; 0x312 <rechtvooruit>

00000e44 <.Loc.195>:
                buzzer_uit();
     e44:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <buzzer_uit>
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	a8 ec       	ldi	r26, 0xC8	; 200
     e4e:	b2 e4       	ldi	r27, 0x42	; 66
     e50:	8b af       	std	Y+59, r24	; 0x3b
     e52:	9c af       	std	Y+60, r25	; 0x3c
     e54:	ad af       	std	Y+61, r26	; 0x3d
     e56:	be af       	std	Y+62, r27	; 0x3e

00000e58 <.LBB105>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     e58:	8e 01       	movw	r16, r28
     e5a:	01 5c       	subi	r16, 0xC1	; 193
     e5c:	1f 4f       	sbci	r17, 0xFF	; 255
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	4a e7       	ldi	r20, 0x7A	; 122
     e64:	55 e4       	ldi	r21, 0x45	; 69
     e66:	6b ad       	ldd	r22, Y+59	; 0x3b
     e68:	7c ad       	ldd	r23, Y+60	; 0x3c
     e6a:	8d ad       	ldd	r24, Y+61	; 0x3d
     e6c:	9e ad       	ldd	r25, Y+62	; 0x3e
     e6e:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     e72:	c3 56       	subi	r28, 0x63	; 99
     e74:	df 4f       	sbci	r29, 0xFF	; 255
     e76:	68 83       	st	Y, r22
     e78:	79 83       	std	Y+1, r23	; 0x01
     e7a:	8a 83       	std	Y+2, r24	; 0x02
     e7c:	9b 83       	std	Y+3, r25	; 0x03
     e7e:	cd 59       	subi	r28, 0x9D	; 157
     e80:	d0 40       	sbci	r29, 0x00	; 0
     e82:	c3 56       	subi	r28, 0x63	; 99
     e84:	df 4f       	sbci	r29, 0xFF	; 255
     e86:	88 81       	ld	r24, Y
     e88:	99 81       	ldd	r25, Y+1	; 0x01
     e8a:	aa 81       	ldd	r26, Y+2	; 0x02
     e8c:	bb 81       	ldd	r27, Y+3	; 0x03
     e8e:	cd 59       	subi	r28, 0x9D	; 157
     e90:	d0 40       	sbci	r29, 0x00	; 0
     e92:	f8 01       	movw	r30, r16
     e94:	80 83       	st	Z, r24
     e96:	91 83       	std	Z+1, r25	; 0x01
     e98:	a2 83       	std	Z+2, r26	; 0x02
     e9a:	b3 83       	std	Z+3, r27	; 0x03

00000e9c <.Loc.197>:
	if (__tmp < 1.0)
     e9c:	ce 01       	movw	r24, r28
     e9e:	cf 96       	adiw	r24, 0x3f	; 63
     ea0:	20 e0       	ldi	r18, 0x00	; 0
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	40 e8       	ldi	r20, 0x80	; 128
     ea6:	5f e3       	ldi	r21, 0x3F	; 63
     ea8:	dc 01       	movw	r26, r24
     eaa:	6d 91       	ld	r22, X+
     eac:	7d 91       	ld	r23, X+
     eae:	8d 91       	ld	r24, X+
     eb0:	9c 91       	ld	r25, X
     eb2:	0e 94 2d 08 	call	0x105a	; 0x105a <__cmpsf2>
     eb6:	88 23       	and	r24, r24
     eb8:	4c f4       	brge	.+18     	; 0xecc <.L112>

00000eba <.Loc.198>:
		__ticks = 1;
     eba:	ce 01       	movw	r24, r28
     ebc:	8d 5b       	subi	r24, 0xBD	; 189
     ebe:	9f 4f       	sbci	r25, 0xFF	; 255
     ec0:	21 e0       	ldi	r18, 0x01	; 1
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	fc 01       	movw	r30, r24
     ec6:	31 83       	std	Z+1, r19	; 0x01
     ec8:	20 83       	st	Z, r18
     eca:	9b c0       	rjmp	.+310    	; 0x1002 <.L87>

00000ecc <.L112>:
	else if (__tmp > 65535)
     ecc:	ce 01       	movw	r24, r28
     ece:	cf 96       	adiw	r24, 0x3f	; 63
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	3f ef       	ldi	r19, 0xFF	; 255
     ed4:	4f e7       	ldi	r20, 0x7F	; 127
     ed6:	57 e4       	ldi	r21, 0x47	; 71
     ed8:	dc 01       	movw	r26, r24
     eda:	6d 91       	ld	r22, X+
     edc:	7d 91       	ld	r23, X+
     ede:	8d 91       	ld	r24, X+
     ee0:	9c 91       	ld	r25, X
     ee2:	0e 94 48 09 	call	0x1290	; 0x1290 <__gesf2>
     ee6:	88 23       	and	r24, r24
     ee8:	09 f0       	breq	.+2      	; 0xeec <L0^A>

00000eea <L0^A>:
     eea:	0c f4       	brge	.+2      	; 0xeee <.Loc.200>

00000eec <L0^A>:
     eec:	6d c0       	rjmp	.+218    	; 0xfc8 <.L113>

00000eee <.Loc.200>:
		__ticks = (uint16_t) (__ms * 10.0);
     eee:	20 e0       	ldi	r18, 0x00	; 0
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	40 e2       	ldi	r20, 0x20	; 32
     ef4:	51 e4       	ldi	r21, 0x41	; 65
     ef6:	6b ad       	ldd	r22, Y+59	; 0x3b
     ef8:	7c ad       	ldd	r23, Y+60	; 0x3c
     efa:	8d ad       	ldd	r24, Y+61	; 0x3d
     efc:	9e ad       	ldd	r25, Y+62	; 0x3e
     efe:	0e 94 4d 09 	call	0x129a	; 0x129a <__mulsf3>
     f02:	cf 55       	subi	r28, 0x5F	; 95
     f04:	df 4f       	sbci	r29, 0xFF	; 255
     f06:	68 83       	st	Y, r22
     f08:	79 83       	std	Y+1, r23	; 0x01
     f0a:	8a 83       	std	Y+2, r24	; 0x02
     f0c:	9b 83       	std	Y+3, r25	; 0x03
     f0e:	c1 5a       	subi	r28, 0xA1	; 161
     f10:	d0 40       	sbci	r29, 0x00	; 0
     f12:	cf 55       	subi	r28, 0x5F	; 95
     f14:	df 4f       	sbci	r29, 0xFF	; 255
     f16:	88 81       	ld	r24, Y
     f18:	99 81       	ldd	r25, Y+1	; 0x01
     f1a:	aa 81       	ldd	r26, Y+2	; 0x02
     f1c:	bb 81       	ldd	r27, Y+3	; 0x03
     f1e:	c1 5a       	subi	r28, 0xA1	; 161
     f20:	d0 40       	sbci	r29, 0x00	; 0
     f22:	6d 96       	adiw	r28, 0x1d	; 29
     f24:	8c af       	std	Y+60, r24	; 0x3c
     f26:	9d af       	std	Y+61, r25	; 0x3d
     f28:	ae af       	std	Y+62, r26	; 0x3e
     f2a:	bf af       	std	Y+63, r27	; 0x3f
     f2c:	6d 97       	sbiw	r28, 0x1d	; 29

00000f2e <.Loc.201>:
     f2e:	8e 01       	movw	r16, r28
     f30:	0d 5b       	subi	r16, 0xBD	; 189
     f32:	1f 4f       	sbci	r17, 0xFF	; 255
     f34:	6d 96       	adiw	r28, 0x1d	; 29
     f36:	6c ad       	ldd	r22, Y+60	; 0x3c
     f38:	7d ad       	ldd	r23, Y+61	; 0x3d
     f3a:	8e ad       	ldd	r24, Y+62	; 0x3e
     f3c:	9f ad       	ldd	r25, Y+63	; 0x3f
     f3e:	6d 97       	sbiw	r28, 0x1d	; 29
     f40:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     f44:	cb 55       	subi	r28, 0x5B	; 91
     f46:	df 4f       	sbci	r29, 0xFF	; 255
     f48:	68 83       	st	Y, r22
     f4a:	79 83       	std	Y+1, r23	; 0x01
     f4c:	8a 83       	std	Y+2, r24	; 0x02
     f4e:	9b 83       	std	Y+3, r25	; 0x03
     f50:	c5 5a       	subi	r28, 0xA5	; 165
     f52:	d0 40       	sbci	r29, 0x00	; 0
     f54:	cb 55       	subi	r28, 0x5B	; 91
     f56:	df 4f       	sbci	r29, 0xFF	; 255
     f58:	e8 81       	ld	r30, Y
     f5a:	f9 81       	ldd	r31, Y+1	; 0x01
     f5c:	c5 5a       	subi	r28, 0xA5	; 165
     f5e:	d0 40       	sbci	r29, 0x00	; 0
     f60:	d8 01       	movw	r26, r16
     f62:	11 96       	adiw	r26, 0x01	; 1
     f64:	fc 93       	st	X, r31
     f66:	ee 93       	st	-X, r30

00000f68 <.Loc.202>:
		while(__ticks)
     f68:	26 c0       	rjmp	.+76     	; 0xfb6 <.L90>

00000f6a <.L91>:
     f6a:	ce 01       	movw	r24, r28
     f6c:	8b 5b       	subi	r24, 0xBB	; 187
     f6e:	9f 4f       	sbci	r25, 0xFF	; 255
     f70:	20 e9       	ldi	r18, 0x90	; 144
     f72:	31 e0       	ldi	r19, 0x01	; 1
     f74:	dc 01       	movw	r26, r24
     f76:	2d 93       	st	X+, r18
     f78:	3c 93       	st	X, r19

00000f7a <.LBB107>:
	__asm__ volatile (
     f7a:	ce 01       	movw	r24, r28
     f7c:	8b 5b       	subi	r24, 0xBB	; 187
     f7e:	9f 4f       	sbci	r25, 0xFF	; 255
     f80:	fc 01       	movw	r30, r24
     f82:	80 81       	ld	r24, Z
     f84:	91 81       	ldd	r25, Z+1	; 0x01

00000f86 <.L1^B13>:
     f86:	01 97       	sbiw	r24, 0x01	; 1
     f88:	f1 f7       	brne	.-4      	; 0xf86 <.L1^B13>
     f8a:	9e 01       	movw	r18, r28
     f8c:	2b 5b       	subi	r18, 0xBB	; 187
     f8e:	3f 4f       	sbci	r19, 0xFF	; 255
     f90:	d9 01       	movw	r26, r18
     f92:	8d 93       	st	X+, r24
     f94:	9c 93       	st	X, r25

00000f96 <.Loc.204>:
	...

00000f98 <.LBE107>:
			__ticks --;
     f98:	ce 01       	movw	r24, r28
     f9a:	8d 5b       	subi	r24, 0xBD	; 189
     f9c:	9f 4f       	sbci	r25, 0xFF	; 255
     f9e:	9e 01       	movw	r18, r28
     fa0:	2d 5b       	subi	r18, 0xBD	; 189
     fa2:	3f 4f       	sbci	r19, 0xFF	; 255
     fa4:	f9 01       	movw	r30, r18
     fa6:	20 81       	ld	r18, Z
     fa8:	31 81       	ldd	r19, Z+1	; 0x01
     faa:	21 50       	subi	r18, 0x01	; 1
     fac:	31 09       	sbc	r19, r1
     fae:	dc 01       	movw	r26, r24
     fb0:	11 96       	adiw	r26, 0x01	; 1
     fb2:	3c 93       	st	X, r19
     fb4:	2e 93       	st	-X, r18

00000fb6 <.L90>:
		while(__ticks)
     fb6:	ce 01       	movw	r24, r28
     fb8:	8d 5b       	subi	r24, 0xBD	; 189
     fba:	9f 4f       	sbci	r25, 0xFF	; 255
     fbc:	fc 01       	movw	r30, r24
     fbe:	80 81       	ld	r24, Z
     fc0:	91 81       	ldd	r25, Z+1	; 0x01
     fc2:	00 97       	sbiw	r24, 0x00	; 0
     fc4:	91 f6       	brne	.-92     	; 0xf6a <.L91>

00000fc6 <.Loc.207>:
		return;
     fc6:	39 c0       	rjmp	.+114    	; 0x103a <.L84>

00000fc8 <.L113>:
		__ticks = (uint16_t)__tmp;
     fc8:	8e 01       	movw	r16, r28
     fca:	0d 5b       	subi	r16, 0xBD	; 189
     fcc:	1f 4f       	sbci	r17, 0xFF	; 255
     fce:	ce 01       	movw	r24, r28
     fd0:	cf 96       	adiw	r24, 0x3f	; 63
     fd2:	dc 01       	movw	r26, r24
     fd4:	6d 91       	ld	r22, X+
     fd6:	7d 91       	ld	r23, X+
     fd8:	8d 91       	ld	r24, X+
     fda:	9c 91       	ld	r25, X
     fdc:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fixunssfsi>
     fe0:	c7 55       	subi	r28, 0x57	; 87
     fe2:	df 4f       	sbci	r29, 0xFF	; 255
     fe4:	68 83       	st	Y, r22
     fe6:	79 83       	std	Y+1, r23	; 0x01
     fe8:	8a 83       	std	Y+2, r24	; 0x02
     fea:	9b 83       	std	Y+3, r25	; 0x03
     fec:	c9 5a       	subi	r28, 0xA9	; 169
     fee:	d0 40       	sbci	r29, 0x00	; 0
     ff0:	c7 55       	subi	r28, 0x57	; 87
     ff2:	df 4f       	sbci	r29, 0xFF	; 255
     ff4:	88 81       	ld	r24, Y
     ff6:	99 81       	ldd	r25, Y+1	; 0x01
     ff8:	c9 5a       	subi	r28, 0xA9	; 169
     ffa:	d0 40       	sbci	r29, 0x00	; 0
     ffc:	f8 01       	movw	r30, r16
     ffe:	91 83       	std	Z+1, r25	; 0x01
    1000:	80 83       	st	Z, r24

00001002 <.L87>:
    1002:	ce 01       	movw	r24, r28
    1004:	89 5b       	subi	r24, 0xB9	; 185
    1006:	9f 4f       	sbci	r25, 0xFF	; 255
    1008:	9e 01       	movw	r18, r28
    100a:	2d 5b       	subi	r18, 0xBD	; 189
    100c:	3f 4f       	sbci	r19, 0xFF	; 255
    100e:	d9 01       	movw	r26, r18
    1010:	2d 91       	ld	r18, X+
    1012:	3c 91       	ld	r19, X
    1014:	fc 01       	movw	r30, r24
    1016:	31 83       	std	Z+1, r19	; 0x01
    1018:	20 83       	st	Z, r18

0000101a <.LBB109>:
    101a:	ce 01       	movw	r24, r28
    101c:	89 5b       	subi	r24, 0xB9	; 185
    101e:	9f 4f       	sbci	r25, 0xFF	; 255
    1020:	dc 01       	movw	r26, r24
    1022:	8d 91       	ld	r24, X+
    1024:	9c 91       	ld	r25, X
    1026:	11 97       	sbiw	r26, 0x01	; 1

00001028 <.L1^B14>:
    1028:	01 97       	sbiw	r24, 0x01	; 1
    102a:	f1 f7       	brne	.-4      	; 0x1028 <.L1^B14>
    102c:	9e 01       	movw	r18, r28
    102e:	29 5b       	subi	r18, 0xB9	; 185
    1030:	3f 4f       	sbci	r19, 0xFF	; 255
    1032:	f9 01       	movw	r30, r18
    1034:	91 83       	std	Z+1, r25	; 0x01
    1036:	80 83       	st	Z, r24

00001038 <.Loc.210>:
	...

0000103a <.L84>:
            distance = measure_distance();
    103a:	18 cc       	rjmp	.-2000   	; 0x86c <.L93>

0000103c <__umulhisi3>:
    103c:	a2 9f       	mul	r26, r18

0000103e <.Loc.1>:
    103e:	b0 01       	movw	r22, r0

00001040 <.Loc.2>:
    1040:	b3 9f       	mul	r27, r19

00001042 <.Loc.3>:
    1042:	c0 01       	movw	r24, r0

00001044 <.Loc.4>:
    1044:	a3 9f       	mul	r26, r19

00001046 <.Loc.5>:
    1046:	70 0d       	add	r23, r0

00001048 <.Loc.6>:
    1048:	81 1d       	adc	r24, r1

0000104a <.Loc.7>:
    104a:	11 24       	eor	r1, r1

0000104c <.Loc.8>:
    104c:	91 1d       	adc	r25, r1

0000104e <.Loc.9>:
    104e:	b2 9f       	mul	r27, r18

00001050 <.Loc.10>:
    1050:	70 0d       	add	r23, r0

00001052 <.Loc.11>:
    1052:	81 1d       	adc	r24, r1

00001054 <.Loc.12>:
    1054:	11 24       	eor	r1, r1

00001056 <.Loc.13>:
    1056:	91 1d       	adc	r25, r1

00001058 <.Loc.14>:
    1058:	08 95       	ret

0000105a <__cmpsf2>:
    105a:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <__fp_cmp>
    105e:	08 f4       	brcc	.+2      	; 0x1062 <.L1^B1>
    1060:	81 e0       	ldi	r24, 0x01	; 1

00001062 <.L1^B1>:
    1062:	08 95       	ret

00001064 <__divsf3>:
    1064:	0e 94 46 08 	call	0x108c	; 0x108c <__divsf3x>
    1068:	0c 94 0e 09 	jmp	0x121c	; 0x121c <__fp_round>

0000106c <.L^B1>:
    106c:	0e 94 07 09 	call	0x120e	; 0x120e <__fp_pscB>
    1070:	58 f0       	brcs	.+22     	; 0x1088 <.L_nan>
    1072:	0e 94 00 09 	call	0x1200	; 0x1200 <__fp_pscA>
    1076:	40 f0       	brcs	.+16     	; 0x1088 <.L_nan>
    1078:	29 f4       	brne	.+10     	; 0x1084 <.L_zr>
    107a:	5f 3f       	cpi	r21, 0xFF	; 255
    107c:	29 f0       	breq	.+10     	; 0x1088 <.L_nan>

0000107e <.L_inf>:
    107e:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__fp_inf>

00001082 <.L1^B1>:
    1082:	51 11       	cpse	r21, r1

00001084 <.L_zr>:
    1084:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_szero>

00001088 <.L_nan>:
    1088:	0c 94 fd 08 	jmp	0x11fa	; 0x11fa <__fp_nan>

0000108c <__divsf3x>:
    108c:	0e 94 1f 09 	call	0x123e	; 0x123e <__fp_split3>
    1090:	68 f3       	brcs	.-38     	; 0x106c <.L^B1>

00001092 <__divsf3_pse>:
    1092:	99 23       	and	r25, r25
    1094:	b1 f3       	breq	.-20     	; 0x1082 <.L1^B1>
    1096:	55 23       	and	r21, r21
    1098:	91 f3       	breq	.-28     	; 0x107e <.L_inf>
    109a:	95 1b       	sub	r25, r21
    109c:	55 0b       	sbc	r21, r21
    109e:	bb 27       	eor	r27, r27
    10a0:	aa 27       	eor	r26, r26

000010a2 <.L2^B1>:
    10a2:	62 17       	cp	r22, r18
    10a4:	73 07       	cpc	r23, r19
    10a6:	84 07       	cpc	r24, r20
    10a8:	38 f0       	brcs	.+14     	; 0x10b8 <.L3^B1>
    10aa:	9f 5f       	subi	r25, 0xFF	; 255
    10ac:	5f 4f       	sbci	r21, 0xFF	; 255
    10ae:	22 0f       	add	r18, r18
    10b0:	33 1f       	adc	r19, r19
    10b2:	44 1f       	adc	r20, r20
    10b4:	aa 1f       	adc	r26, r26
    10b6:	a9 f3       	breq	.-22     	; 0x10a2 <.L2^B1>

000010b8 <.L3^B1>:
    10b8:	35 d0       	rcall	.+106    	; 0x1124 <.L_div>
    10ba:	0e 2e       	mov	r0, r30
    10bc:	3a f0       	brmi	.+14     	; 0x10cc <.L5^B1>

000010be <.L4^B1>:
    10be:	e0 e8       	ldi	r30, 0x80	; 128
    10c0:	32 d0       	rcall	.+100    	; 0x1126 <.L_div1>
    10c2:	91 50       	subi	r25, 0x01	; 1
    10c4:	50 40       	sbci	r21, 0x00	; 0
    10c6:	e6 95       	lsr	r30
    10c8:	00 1c       	adc	r0, r0
    10ca:	ca f7       	brpl	.-14     	; 0x10be <.L4^B1>

000010cc <.L5^B1>:
    10cc:	2b d0       	rcall	.+86     	; 0x1124 <.L_div>
    10ce:	fe 2f       	mov	r31, r30
    10d0:	29 d0       	rcall	.+82     	; 0x1124 <.L_div>
    10d2:	66 0f       	add	r22, r22
    10d4:	77 1f       	adc	r23, r23
    10d6:	88 1f       	adc	r24, r24
    10d8:	bb 1f       	adc	r27, r27
    10da:	26 17       	cp	r18, r22
    10dc:	37 07       	cpc	r19, r23
    10de:	48 07       	cpc	r20, r24
    10e0:	ab 07       	cpc	r26, r27
    10e2:	b0 e8       	ldi	r27, 0x80	; 128
    10e4:	09 f0       	breq	.+2      	; 0x10e8 <.L4^B2>
    10e6:	bb 0b       	sbc	r27, r27

000010e8 <.L4^B2>:
    10e8:	80 2d       	mov	r24, r0
    10ea:	bf 01       	movw	r22, r30
    10ec:	ff 27       	eor	r31, r31
    10ee:	93 58       	subi	r25, 0x83	; 131
    10f0:	5f 4f       	sbci	r21, 0xFF	; 255
    10f2:	3a f0       	brmi	.+14     	; 0x1102 <.L13^B1>
    10f4:	9e 3f       	cpi	r25, 0xFE	; 254
    10f6:	51 05       	cpc	r21, r1
    10f8:	78 f0       	brcs	.+30     	; 0x1118 <.L15^B1>
    10fa:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__fp_inf>

000010fe <.L12^B1>:
    10fe:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_szero>

00001102 <.L13^B1>:
    1102:	5f 3f       	cpi	r21, 0xFF	; 255
    1104:	e4 f3       	brlt	.-8      	; 0x10fe <.L12^B1>
    1106:	98 3e       	cpi	r25, 0xE8	; 232
    1108:	d4 f3       	brlt	.-12     	; 0x10fe <.L12^B1>

0000110a <.L14^B1>:
    110a:	86 95       	lsr	r24
    110c:	77 95       	ror	r23
    110e:	67 95       	ror	r22
    1110:	b7 95       	ror	r27
    1112:	f7 95       	ror	r31
    1114:	9f 5f       	subi	r25, 0xFF	; 255
    1116:	c9 f7       	brne	.-14     	; 0x110a <.L14^B1>

00001118 <.L15^B1>:
    1118:	88 0f       	add	r24, r24
    111a:	91 1d       	adc	r25, r1
    111c:	96 95       	lsr	r25
    111e:	87 95       	ror	r24
    1120:	97 f9       	bld	r25, 7
    1122:	08 95       	ret

00001124 <.L_div>:
    1124:	e1 e0       	ldi	r30, 0x01	; 1

00001126 <.L_div1>:
    1126:	66 0f       	add	r22, r22
    1128:	77 1f       	adc	r23, r23
    112a:	88 1f       	adc	r24, r24
    112c:	bb 1f       	adc	r27, r27
    112e:	62 17       	cp	r22, r18
    1130:	73 07       	cpc	r23, r19
    1132:	84 07       	cpc	r24, r20
    1134:	ba 07       	cpc	r27, r26
    1136:	20 f0       	brcs	.+8      	; 0x1140 <.L2^B2>
    1138:	62 1b       	sub	r22, r18
    113a:	73 0b       	sbc	r23, r19
    113c:	84 0b       	sbc	r24, r20
    113e:	ba 0b       	sbc	r27, r26

00001140 <.L2^B2>:
    1140:	ee 1f       	adc	r30, r30
    1142:	88 f7       	brcc	.-30     	; 0x1126 <.L_div1>
    1144:	e0 95       	com	r30
    1146:	08 95       	ret

00001148 <__fixunssfsi>:
    1148:	0e 94 27 09 	call	0x124e	; 0x124e <__fp_splitA>
    114c:	88 f0       	brcs	.+34     	; 0x1170 <.L_err>
    114e:	9f 57       	subi	r25, 0x7F	; 127
    1150:	98 f0       	brcs	.+38     	; 0x1178 <.L_zr>
    1152:	b9 2f       	mov	r27, r25
    1154:	99 27       	eor	r25, r25
    1156:	b7 51       	subi	r27, 0x17	; 23
    1158:	b0 f0       	brcs	.+44     	; 0x1186 <.L4^B1>
    115a:	e1 f0       	breq	.+56     	; 0x1194 <.L_sign>

0000115c <.L1^B1>:
    115c:	66 0f       	add	r22, r22
    115e:	77 1f       	adc	r23, r23
    1160:	88 1f       	adc	r24, r24
    1162:	99 1f       	adc	r25, r25
    1164:	1a f0       	brmi	.+6      	; 0x116c <.L2^B1>
    1166:	ba 95       	dec	r27
    1168:	c9 f7       	brne	.-14     	; 0x115c <.L1^B1>
    116a:	14 c0       	rjmp	.+40     	; 0x1194 <.L_sign>

0000116c <.L2^B1>:
    116c:	b1 30       	cpi	r27, 0x01	; 1
    116e:	91 f0       	breq	.+36     	; 0x1194 <.L_sign>

00001170 <.L_err>:
    1170:	0e 94 41 09 	call	0x1282	; 0x1282 <__fp_zero>
    1174:	b1 e0       	ldi	r27, 0x01	; 1
    1176:	08 95       	ret

00001178 <.L_zr>:
    1178:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__fp_zero>

0000117c <.L3^B1>:
    117c:	67 2f       	mov	r22, r23
    117e:	78 2f       	mov	r23, r24
    1180:	88 27       	eor	r24, r24
    1182:	b8 5f       	subi	r27, 0xF8	; 248
    1184:	39 f0       	breq	.+14     	; 0x1194 <.L_sign>

00001186 <.L4^B1>:
    1186:	b9 3f       	cpi	r27, 0xF9	; 249
    1188:	cc f3       	brlt	.-14     	; 0x117c <.L3^B1>

0000118a <.L5^B1>:
    118a:	86 95       	lsr	r24
    118c:	77 95       	ror	r23
    118e:	67 95       	ror	r22
    1190:	b3 95       	inc	r27
    1192:	d9 f7       	brne	.-10     	; 0x118a <.L5^B1>

00001194 <.L_sign>:
    1194:	3e f4       	brtc	.+14     	; 0x11a4 <.L6^B1>
    1196:	90 95       	com	r25
    1198:	80 95       	com	r24
    119a:	70 95       	com	r23
    119c:	61 95       	neg	r22
    119e:	7f 4f       	sbci	r23, 0xFF	; 255
    11a0:	8f 4f       	sbci	r24, 0xFF	; 255
    11a2:	9f 4f       	sbci	r25, 0xFF	; 255

000011a4 <.L6^B1>:
    11a4:	08 95       	ret

000011a6 <__fp_cmp>:
    11a6:	99 0f       	add	r25, r25
    11a8:	00 08       	sbc	r0, r0
    11aa:	55 0f       	add	r21, r21
    11ac:	aa 0b       	sbc	r26, r26
    11ae:	e0 e8       	ldi	r30, 0x80	; 128
    11b0:	fe ef       	ldi	r31, 0xFE	; 254
    11b2:	16 16       	cp	r1, r22
    11b4:	17 06       	cpc	r1, r23
    11b6:	e8 07       	cpc	r30, r24
    11b8:	f9 07       	cpc	r31, r25
    11ba:	c0 f0       	brcs	.+48     	; 0x11ec <.L9^B1>
    11bc:	12 16       	cp	r1, r18
    11be:	13 06       	cpc	r1, r19
    11c0:	e4 07       	cpc	r30, r20
    11c2:	f5 07       	cpc	r31, r21
    11c4:	98 f0       	brcs	.+38     	; 0x11ec <.L9^B1>
    11c6:	62 1b       	sub	r22, r18
    11c8:	73 0b       	sbc	r23, r19
    11ca:	84 0b       	sbc	r24, r20
    11cc:	95 0b       	sbc	r25, r21
    11ce:	39 f4       	brne	.+14     	; 0x11de <.L1^B1>
    11d0:	0a 26       	eor	r0, r26
    11d2:	61 f0       	breq	.+24     	; 0x11ec <.L9^B1>
    11d4:	23 2b       	or	r18, r19
    11d6:	24 2b       	or	r18, r20
    11d8:	25 2b       	or	r18, r21
    11da:	21 f4       	brne	.+8      	; 0x11e4 <.L2^B1>
    11dc:	08 95       	ret

000011de <.L1^B1>:
    11de:	0a 26       	eor	r0, r26
    11e0:	09 f4       	brne	.+2      	; 0x11e4 <.L2^B1>
    11e2:	a1 40       	sbci	r26, 0x01	; 1

000011e4 <.L2^B1>:
    11e4:	a6 95       	lsr	r26
    11e6:	8f ef       	ldi	r24, 0xFF	; 255
    11e8:	81 1d       	adc	r24, r1
    11ea:	81 1d       	adc	r24, r1

000011ec <.L9^B1>:
    11ec:	08 95       	ret

000011ee <__fp_inf>:
    11ee:	97 f9       	bld	r25, 7
    11f0:	9f 67       	ori	r25, 0x7F	; 127
    11f2:	80 e8       	ldi	r24, 0x80	; 128
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	60 e0       	ldi	r22, 0x00	; 0
    11f8:	08 95       	ret

000011fa <__fp_nan>:
    11fa:	9f ef       	ldi	r25, 0xFF	; 255
    11fc:	80 ec       	ldi	r24, 0xC0	; 192
    11fe:	08 95       	ret

00001200 <__fp_pscA>:
    1200:	00 24       	eor	r0, r0
    1202:	0a 94       	dec	r0
    1204:	16 16       	cp	r1, r22
    1206:	17 06       	cpc	r1, r23
    1208:	18 06       	cpc	r1, r24
    120a:	09 06       	cpc	r0, r25
    120c:	08 95       	ret

0000120e <__fp_pscB>:
    120e:	00 24       	eor	r0, r0
    1210:	0a 94       	dec	r0
    1212:	12 16       	cp	r1, r18
    1214:	13 06       	cpc	r1, r19
    1216:	14 06       	cpc	r1, r20
    1218:	05 06       	cpc	r0, r21
    121a:	08 95       	ret

0000121c <__fp_round>:
    121c:	09 2e       	mov	r0, r25
    121e:	03 94       	inc	r0
    1220:	00 0c       	add	r0, r0
    1222:	11 f4       	brne	.+4      	; 0x1228 <.L1^B1>
    1224:	88 23       	and	r24, r24
    1226:	52 f0       	brmi	.+20     	; 0x123c <.L3^B1>

00001228 <.L1^B1>:
    1228:	bb 0f       	add	r27, r27
    122a:	40 f4       	brcc	.+16     	; 0x123c <.L3^B1>
    122c:	bf 2b       	or	r27, r31
    122e:	11 f4       	brne	.+4      	; 0x1234 <.L2^B1>
    1230:	60 ff       	sbrs	r22, 0
    1232:	04 c0       	rjmp	.+8      	; 0x123c <.L3^B1>

00001234 <.L2^B1>:
    1234:	6f 5f       	subi	r22, 0xFF	; 255
    1236:	7f 4f       	sbci	r23, 0xFF	; 255
    1238:	8f 4f       	sbci	r24, 0xFF	; 255
    123a:	9f 4f       	sbci	r25, 0xFF	; 255

0000123c <.L3^B1>:
    123c:	08 95       	ret

0000123e <__fp_split3>:
    123e:	57 fd       	sbrc	r21, 7
    1240:	90 58       	subi	r25, 0x80	; 128
    1242:	44 0f       	add	r20, r20
    1244:	55 1f       	adc	r21, r21
    1246:	59 f0       	breq	.+22     	; 0x125e <.L4^B1>
    1248:	5f 3f       	cpi	r21, 0xFF	; 255
    124a:	71 f0       	breq	.+28     	; 0x1268 <.L5^B1>

0000124c <.L1^B1>:
    124c:	47 95       	ror	r20

0000124e <__fp_splitA>:
    124e:	88 0f       	add	r24, r24
    1250:	97 fb       	bst	r25, 7
    1252:	99 1f       	adc	r25, r25
    1254:	61 f0       	breq	.+24     	; 0x126e <.L6^B1>
    1256:	9f 3f       	cpi	r25, 0xFF	; 255
    1258:	79 f0       	breq	.+30     	; 0x1278 <.L7^B1>

0000125a <.L3^B1>:
    125a:	87 95       	ror	r24
    125c:	08 95       	ret

0000125e <.L4^B1>:
    125e:	12 16       	cp	r1, r18
    1260:	13 06       	cpc	r1, r19
    1262:	14 06       	cpc	r1, r20
    1264:	55 1f       	adc	r21, r21
    1266:	f2 cf       	rjmp	.-28     	; 0x124c <.L1^B1>

00001268 <.L5^B1>:
    1268:	46 95       	lsr	r20
    126a:	f1 df       	rcall	.-30     	; 0x124e <__fp_splitA>
    126c:	08 c0       	rjmp	.+16     	; 0x127e <.L8^B1>

0000126e <.L6^B1>:
    126e:	16 16       	cp	r1, r22
    1270:	17 06       	cpc	r1, r23
    1272:	18 06       	cpc	r1, r24
    1274:	99 1f       	adc	r25, r25
    1276:	f1 cf       	rjmp	.-30     	; 0x125a <.L3^B1>

00001278 <.L7^B1>:
    1278:	86 95       	lsr	r24
    127a:	71 05       	cpc	r23, r1
    127c:	61 05       	cpc	r22, r1

0000127e <.L8^B1>:
    127e:	08 94       	sec
    1280:	08 95       	ret

00001282 <__fp_zero>:
    1282:	e8 94       	clt

00001284 <__fp_szero>:
    1284:	bb 27       	eor	r27, r27
    1286:	66 27       	eor	r22, r22
    1288:	77 27       	eor	r23, r23
    128a:	cb 01       	movw	r24, r22
    128c:	97 f9       	bld	r25, 7
    128e:	08 95       	ret

00001290 <__gesf2>:
    1290:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <__fp_cmp>
    1294:	08 f4       	brcc	.+2      	; 0x1298 <.L1^B1>
    1296:	8f ef       	ldi	r24, 0xFF	; 255

00001298 <.L1^B1>:
    1298:	08 95       	ret

0000129a <__mulsf3>:
    129a:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__mulsf3x>
    129e:	0c 94 0e 09 	jmp	0x121c	; 0x121c <__fp_round>

000012a2 <.L^B1>:
    12a2:	0e 94 00 09 	call	0x1200	; 0x1200 <__fp_pscA>
    12a6:	38 f0       	brcs	.+14     	; 0x12b6 <.L1^B1>
    12a8:	0e 94 07 09 	call	0x120e	; 0x120e <__fp_pscB>
    12ac:	20 f0       	brcs	.+8      	; 0x12b6 <.L1^B1>
    12ae:	95 23       	and	r25, r21
    12b0:	11 f0       	breq	.+4      	; 0x12b6 <.L1^B1>
    12b2:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__fp_inf>

000012b6 <.L1^B1>:
    12b6:	0c 94 fd 08 	jmp	0x11fa	; 0x11fa <__fp_nan>

000012ba <.L2^B1>:
    12ba:	11 24       	eor	r1, r1
    12bc:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_szero>

000012c0 <__mulsf3x>:
    12c0:	0e 94 1f 09 	call	0x123e	; 0x123e <__fp_split3>
    12c4:	70 f3       	brcs	.-36     	; 0x12a2 <.L^B1>

000012c6 <__mulsf3_pse>:
    12c6:	95 9f       	mul	r25, r21
    12c8:	c1 f3       	breq	.-16     	; 0x12ba <.L2^B1>
    12ca:	95 0f       	add	r25, r21
    12cc:	50 e0       	ldi	r21, 0x00	; 0
    12ce:	55 1f       	adc	r21, r21
    12d0:	62 9f       	mul	r22, r18
    12d2:	f0 01       	movw	r30, r0
    12d4:	72 9f       	mul	r23, r18
    12d6:	bb 27       	eor	r27, r27
    12d8:	f0 0d       	add	r31, r0
    12da:	b1 1d       	adc	r27, r1
    12dc:	63 9f       	mul	r22, r19
    12de:	aa 27       	eor	r26, r26
    12e0:	f0 0d       	add	r31, r0
    12e2:	b1 1d       	adc	r27, r1
    12e4:	aa 1f       	adc	r26, r26
    12e6:	64 9f       	mul	r22, r20
    12e8:	66 27       	eor	r22, r22
    12ea:	b0 0d       	add	r27, r0
    12ec:	a1 1d       	adc	r26, r1
    12ee:	66 1f       	adc	r22, r22
    12f0:	82 9f       	mul	r24, r18
    12f2:	22 27       	eor	r18, r18
    12f4:	b0 0d       	add	r27, r0
    12f6:	a1 1d       	adc	r26, r1
    12f8:	62 1f       	adc	r22, r18
    12fa:	73 9f       	mul	r23, r19
    12fc:	b0 0d       	add	r27, r0
    12fe:	a1 1d       	adc	r26, r1
    1300:	62 1f       	adc	r22, r18
    1302:	83 9f       	mul	r24, r19
    1304:	a0 0d       	add	r26, r0
    1306:	61 1d       	adc	r22, r1
    1308:	22 1f       	adc	r18, r18
    130a:	74 9f       	mul	r23, r20
    130c:	33 27       	eor	r19, r19
    130e:	a0 0d       	add	r26, r0
    1310:	61 1d       	adc	r22, r1
    1312:	23 1f       	adc	r18, r19
    1314:	84 9f       	mul	r24, r20
    1316:	60 0d       	add	r22, r0
    1318:	21 1d       	adc	r18, r1
    131a:	82 2f       	mov	r24, r18
    131c:	76 2f       	mov	r23, r22
    131e:	6a 2f       	mov	r22, r26
    1320:	11 24       	eor	r1, r1
    1322:	9f 57       	subi	r25, 0x7F	; 127
    1324:	50 40       	sbci	r21, 0x00	; 0
    1326:	9a f0       	brmi	.+38     	; 0x134e <.L13^B1>
    1328:	f1 f0       	breq	.+60     	; 0x1366 <.L15^B1>

0000132a <.L10^B1>:
    132a:	88 23       	and	r24, r24
    132c:	4a f0       	brmi	.+18     	; 0x1340 <.L11^B1>
    132e:	ee 0f       	add	r30, r30
    1330:	ff 1f       	adc	r31, r31
    1332:	bb 1f       	adc	r27, r27
    1334:	66 1f       	adc	r22, r22
    1336:	77 1f       	adc	r23, r23
    1338:	88 1f       	adc	r24, r24
    133a:	91 50       	subi	r25, 0x01	; 1
    133c:	50 40       	sbci	r21, 0x00	; 0
    133e:	a9 f7       	brne	.-22     	; 0x132a <.L10^B1>

00001340 <.L11^B1>:
    1340:	9e 3f       	cpi	r25, 0xFE	; 254
    1342:	51 05       	cpc	r21, r1
    1344:	80 f0       	brcs	.+32     	; 0x1366 <.L15^B1>
    1346:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__fp_inf>

0000134a <.L12^B1>:
    134a:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_szero>

0000134e <.L13^B1>:
    134e:	5f 3f       	cpi	r21, 0xFF	; 255
    1350:	e4 f3       	brlt	.-8      	; 0x134a <.L12^B1>
    1352:	98 3e       	cpi	r25, 0xE8	; 232
    1354:	d4 f3       	brlt	.-12     	; 0x134a <.L12^B1>

00001356 <.L14^B1>:
    1356:	86 95       	lsr	r24
    1358:	77 95       	ror	r23
    135a:	67 95       	ror	r22
    135c:	b7 95       	ror	r27
    135e:	f7 95       	ror	r31
    1360:	e7 95       	ror	r30
    1362:	9f 5f       	subi	r25, 0xFF	; 255
    1364:	c1 f7       	brne	.-16     	; 0x1356 <.L14^B1>

00001366 <.L15^B1>:
    1366:	fe 2b       	or	r31, r30
    1368:	88 0f       	add	r24, r24
    136a:	91 1d       	adc	r25, r1
    136c:	96 95       	lsr	r25
    136e:	87 95       	ror	r24
    1370:	97 f9       	bld	r25, 7
    1372:	08 95       	ret

00001374 <_exit>:
    1374:	f8 94       	cli

00001376 <__stop_program>:
    1376:	ff cf       	rjmp	.-2      	; 0x1376 <__stop_program>
