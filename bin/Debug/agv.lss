
bin\Debug\agv.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00002e0a  00002ebe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e0a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800202  00800202  00002ec0  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00002ec0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00002ec3  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ed8  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000138  00000000  00000000  00002f18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001cf8  00000000  00000000  00003050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 000011c5  00000000  00000000  00004d48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000019bf  00000000  00000000  00005f0d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  0000047c  00000000  00000000  000078cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000816  00000000  00000000  00007d48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000217  00000000  00000000  0000855e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 49 06 	jmp	0xc92	; 0xc92 <__vector_21>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	ea e0       	ldi	r30, 0x0A	; 10

000000fc <.Loc.4>:
      fc:	fe e2       	ldi	r31, 0x2E	; 46

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a2 30       	cpi	r26, 0x02	; 2

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a2 e0       	ldi	r26, 0x02	; 2

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	af 30       	cpi	r26, 0x0F	; 15

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 d6 06 	call	0xdac	; 0xdac <main>
     122:	0c 94 03 17 	jmp	0x2e06	; 0x2e06 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <init_buzzer>:
#include <avr/io.h>
#include "buzzer.h"

void init_buzzer(void) {
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    // Stel de buzzer pin in als uitgang
    DDRB |= (1 << BUZZER_PIN);
     132:	84 e2       	ldi	r24, 0x24	; 36
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	fc 01       	movw	r30, r24
     138:	20 81       	ld	r18, Z
     13a:	84 e2       	ldi	r24, 0x24	; 36
     13c:	90 e0       	ldi	r25, 0x00	; 0

0000013e <.Loc.2>:
     13e:	20 62       	ori	r18, 0x20	; 32
     140:	fc 01       	movw	r30, r24
     142:	20 83       	st	Z, r18

00000144 <.Loc.3>:
    // Zet de buzzer uit om te beginnen
    PORTB |= (1 << BUZZER_PIN);
     144:	85 e2       	ldi	r24, 0x25	; 37
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	fc 01       	movw	r30, r24
     14a:	20 81       	ld	r18, Z
     14c:	85 e2       	ldi	r24, 0x25	; 37
     14e:	90 e0       	ldi	r25, 0x00	; 0

00000150 <.Loc.4>:
     150:	20 62       	ori	r18, 0x20	; 32
     152:	fc 01       	movw	r30, r24
     154:	20 83       	st	Z, r18

00000156 <.Loc.5>:
}
     156:	00 00       	nop
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	08 95       	ret

0000015e <buzzer_aan>:

void buzzer_aan(void) {
     15e:	cf 93       	push	r28
     160:	df 93       	push	r29
     162:	cd b7       	in	r28, 0x3d	; 61
     164:	de b7       	in	r29, 0x3e	; 62

00000166 <.Loc.7>:
    // Zet de buzzer pin hoog om de buzzer aan te zetten
    PORTB |= (1 << BUZZER_PIN);
     166:	85 e2       	ldi	r24, 0x25	; 37
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	fc 01       	movw	r30, r24
     16c:	20 81       	ld	r18, Z
     16e:	85 e2       	ldi	r24, 0x25	; 37
     170:	90 e0       	ldi	r25, 0x00	; 0

00000172 <.Loc.8>:
     172:	20 62       	ori	r18, 0x20	; 32
     174:	fc 01       	movw	r30, r24
     176:	20 83       	st	Z, r18

00000178 <.Loc.9>:
}
     178:	00 00       	nop
     17a:	df 91       	pop	r29
     17c:	cf 91       	pop	r28
     17e:	08 95       	ret

00000180 <buzzer_uit>:

void buzzer_uit(void) {
     180:	cf 93       	push	r28
     182:	df 93       	push	r29
     184:	cd b7       	in	r28, 0x3d	; 61
     186:	de b7       	in	r29, 0x3e	; 62

00000188 <.Loc.11>:
    // Zet de buzzer pin laag om de buzzer uit te zetten
    PORTB &= ~(1 << BUZZER_PIN);
     188:	85 e2       	ldi	r24, 0x25	; 37
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	fc 01       	movw	r30, r24
     18e:	20 81       	ld	r18, Z

00000190 <.Loc.12>:
     190:	85 e2       	ldi	r24, 0x25	; 37
     192:	90 e0       	ldi	r25, 0x00	; 0

00000194 <.Loc.13>:
     194:	2f 7d       	andi	r18, 0xDF	; 223
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18

0000019a <.Loc.14>:
}
     19a:	00 00       	nop
     19c:	df 91       	pop	r29
     19e:	cf 91       	pop	r28
     1a0:	08 95       	ret

000001a2 <buzzer_toggle>:

void buzzer_toggle(void) {
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
     1a6:	cd b7       	in	r28, 0x3d	; 61
     1a8:	de b7       	in	r29, 0x3e	; 62

000001aa <.Loc.16>:
    // Wissel de huidige toestand van de buzzer pin
    PORTB ^= (1 << BUZZER_PIN);
     1aa:	85 e2       	ldi	r24, 0x25	; 37
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	fc 01       	movw	r30, r24
     1b0:	30 81       	ld	r19, Z
     1b2:	85 e2       	ldi	r24, 0x25	; 37
     1b4:	90 e0       	ldi	r25, 0x00	; 0

000001b6 <.Loc.17>:
     1b6:	20 e2       	ldi	r18, 0x20	; 32
     1b8:	23 27       	eor	r18, r19
     1ba:	fc 01       	movw	r30, r24
     1bc:	20 83       	st	Z, r18

000001be <.Loc.18>:
}
     1be:	00 00       	nop
     1c0:	df 91       	pop	r29
     1c2:	cf 91       	pop	r28
     1c4:	08 95       	ret

000001c6 <init_timer_buzzer>:

void init_timer_buzzer(void) {
     1c6:	cf 93       	push	r28
     1c8:	df 93       	push	r29
     1ca:	cd b7       	in	r28, 0x3d	; 61
     1cc:	de b7       	in	r29, 0x3e	; 62

000001ce <.Loc.20>:
    TCCR4A = 0;
     1ce:	80 ea       	ldi	r24, 0xA0	; 160
     1d0:	90 e0       	ldi	r25, 0x00	; 0

000001d2 <.Loc.21>:
     1d2:	fc 01       	movw	r30, r24
     1d4:	10 82       	st	Z, r1

000001d6 <.Loc.22>:
    TCCR4B = (1 << CS42) | (0 << CS41) | (0 << CS40);
     1d6:	81 ea       	ldi	r24, 0xA1	; 161
     1d8:	90 e0       	ldi	r25, 0x00	; 0

000001da <.Loc.23>:
     1da:	24 e0       	ldi	r18, 0x04	; 4
     1dc:	fc 01       	movw	r30, r24
     1de:	20 83       	st	Z, r18

000001e0 <.Loc.24>:
    TCNT4 = 0;  // Reset timer
     1e0:	84 ea       	ldi	r24, 0xA4	; 164
     1e2:	90 e0       	ldi	r25, 0x00	; 0

000001e4 <.Loc.25>:
     1e4:	fc 01       	movw	r30, r24
     1e6:	11 82       	std	Z+1, r1	; 0x01
     1e8:	10 82       	st	Z, r1

000001ea <.Loc.26>:
}
     1ea:	00 00       	nop
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	08 95       	ret

000001f2 <agv_rechtdoor>:
#include <avr/io.h>
#include <util/delay.h>
#include "h_bridge.h"

void agv_rechtdoor(void)
{
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	cd b7       	in	r28, 0x3d	; 61
     1f8:	de b7       	in	r29, 0x3e	; 62
     1fa:	a2 97       	sbiw	r28, 0x22	; 34
     1fc:	0f b6       	in	r0, 0x3f	; 63
     1fe:	f8 94       	cli
     200:	de bf       	out	0x3e, r29	; 62
     202:	0f be       	out	0x3f, r0	; 63
     204:	cd bf       	out	0x3d, r28	; 61

00000206 <.Loc.1>:
    set_motor_speed(1, 200);
     206:	68 ec       	ldi	r22, 0xC8	; 200
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

0000020e <.Loc.2>:
    set_motor_speed(2, 200);
     20e:	68 ec       	ldi	r22, 0xC8	; 200
     210:	82 e0       	ldi	r24, 0x02	; 2
     212:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	a8 ec       	ldi	r26, 0xC8	; 200
     21c:	b2 e4       	ldi	r27, 0x42	; 66
     21e:	89 83       	std	Y+1, r24	; 0x01
     220:	9a 83       	std	Y+2, r25	; 0x02
     222:	ab 83       	std	Y+3, r26	; 0x03
     224:	bc 83       	std	Y+4, r27	; 0x04

00000226 <.LBB42>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     226:	20 e0       	ldi	r18, 0x00	; 0
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	4a e7       	ldi	r20, 0x7A	; 122
     22c:	55 e4       	ldi	r21, 0x45	; 69
     22e:	69 81       	ldd	r22, Y+1	; 0x01
     230:	7a 81       	ldd	r23, Y+2	; 0x02
     232:	8b 81       	ldd	r24, Y+3	; 0x03
     234:	9c 81       	ldd	r25, Y+4	; 0x04
     236:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     23a:	6b 8b       	std	Y+19, r22	; 0x13
     23c:	7c 8b       	std	Y+20, r23	; 0x14
     23e:	8d 8b       	std	Y+21, r24	; 0x15
     240:	9e 8b       	std	Y+22, r25	; 0x16
     242:	8b 89       	ldd	r24, Y+19	; 0x13
     244:	9c 89       	ldd	r25, Y+20	; 0x14
     246:	ad 89       	ldd	r26, Y+21	; 0x15
     248:	be 89       	ldd	r27, Y+22	; 0x16
     24a:	8d 83       	std	Y+5, r24	; 0x05
     24c:	9e 83       	std	Y+6, r25	; 0x06
     24e:	af 83       	std	Y+7, r26	; 0x07
     250:	b8 87       	std	Y+8, r27	; 0x08

00000252 <.Loc.4>:
	if (__tmp < 1.0)
     252:	20 e0       	ldi	r18, 0x00	; 0
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	40 e8       	ldi	r20, 0x80	; 128
     258:	5f e3       	ldi	r21, 0x3F	; 63
     25a:	6d 81       	ldd	r22, Y+5	; 0x05
     25c:	7e 81       	ldd	r23, Y+6	; 0x06
     25e:	8f 81       	ldd	r24, Y+7	; 0x07
     260:	98 85       	ldd	r25, Y+8	; 0x08
     262:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
     266:	88 23       	and	r24, r24
     268:	2c f4       	brge	.+10     	; 0x274 <.L12>

0000026a <.Loc.5>:
		__ticks = 1;
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	9a 87       	std	Y+10, r25	; 0x0a
     270:	89 87       	std	Y+9, r24	; 0x09
     272:	55 c0       	rjmp	.+170    	; 0x31e <.L4>

00000274 <.L12>:
	else if (__tmp > 65535)
     274:	20 e0       	ldi	r18, 0x00	; 0
     276:	3f ef       	ldi	r19, 0xFF	; 255
     278:	4f e7       	ldi	r20, 0x7F	; 127
     27a:	57 e4       	ldi	r21, 0x47	; 71
     27c:	6d 81       	ldd	r22, Y+5	; 0x05
     27e:	7e 81       	ldd	r23, Y+6	; 0x06
     280:	8f 81       	ldd	r24, Y+7	; 0x07
     282:	98 85       	ldd	r25, Y+8	; 0x08
     284:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
     288:	88 23       	and	r24, r24
     28a:	d9 f1       	breq	.+118    	; 0x302 <.L13>
     28c:	d4 f1       	brlt	.+116    	; 0x302 <.L13>

0000028e <.Loc.7>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     28e:	20 e0       	ldi	r18, 0x00	; 0
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	40 e2       	ldi	r20, 0x20	; 32
     294:	51 e4       	ldi	r21, 0x41	; 65
     296:	69 81       	ldd	r22, Y+1	; 0x01
     298:	7a 81       	ldd	r23, Y+2	; 0x02
     29a:	8b 81       	ldd	r24, Y+3	; 0x03
     29c:	9c 81       	ldd	r25, Y+4	; 0x04
     29e:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     2a2:	6f 8b       	std	Y+23, r22	; 0x17
     2a4:	78 8f       	std	Y+24, r23	; 0x18
     2a6:	89 8f       	std	Y+25, r24	; 0x19
     2a8:	9a 8f       	std	Y+26, r25	; 0x1a
     2aa:	8f 89       	ldd	r24, Y+23	; 0x17
     2ac:	98 8d       	ldd	r25, Y+24	; 0x18
     2ae:	a9 8d       	ldd	r26, Y+25	; 0x19
     2b0:	ba 8d       	ldd	r27, Y+26	; 0x1a
     2b2:	8f 87       	std	Y+15, r24	; 0x0f
     2b4:	98 8b       	std	Y+16, r25	; 0x10
     2b6:	a9 8b       	std	Y+17, r26	; 0x11
     2b8:	ba 8b       	std	Y+18, r27	; 0x12

000002ba <.Loc.8>:
     2ba:	6f 85       	ldd	r22, Y+15	; 0x0f
     2bc:	78 89       	ldd	r23, Y+16	; 0x10
     2be:	89 89       	ldd	r24, Y+17	; 0x11
     2c0:	9a 89       	ldd	r25, Y+18	; 0x12
     2c2:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     2c6:	6b 8f       	std	Y+27, r22	; 0x1b
     2c8:	7c 8f       	std	Y+28, r23	; 0x1c
     2ca:	8d 8f       	std	Y+29, r24	; 0x1d
     2cc:	9e 8f       	std	Y+30, r25	; 0x1e
     2ce:	ab 8d       	ldd	r26, Y+27	; 0x1b
     2d0:	bc 8d       	ldd	r27, Y+28	; 0x1c
     2d2:	ba 87       	std	Y+10, r27	; 0x0a
     2d4:	a9 87       	std	Y+9, r26	; 0x09

000002d6 <.Loc.9>:
		while(__ticks)
     2d6:	10 c0       	rjmp	.+32     	; 0x2f8 <.L7>

000002d8 <.L8>:
     2d8:	80 e9       	ldi	r24, 0x90	; 144
     2da:	91 e0       	ldi	r25, 0x01	; 1
     2dc:	9c 87       	std	Y+12, r25	; 0x0c
     2de:	8b 87       	std	Y+11, r24	; 0x0b

000002e0 <.LBB44>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     2e0:	8b 85       	ldd	r24, Y+11	; 0x0b
     2e2:	9c 85       	ldd	r25, Y+12	; 0x0c

000002e4 <.L1^B1>:
     2e4:	01 97       	sbiw	r24, 0x01	; 1
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <.L1^B1>
     2e8:	9c 87       	std	Y+12, r25	; 0x0c
     2ea:	8b 87       	std	Y+11, r24	; 0x0b

000002ec <.Loc.11>:
	...

000002ee <.LBE44>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2ee:	89 85       	ldd	r24, Y+9	; 0x09
     2f0:	9a 85       	ldd	r25, Y+10	; 0x0a
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	9a 87       	std	Y+10, r25	; 0x0a
     2f6:	89 87       	std	Y+9, r24	; 0x09

000002f8 <.L7>:
		while(__ticks)
     2f8:	89 85       	ldd	r24, Y+9	; 0x09
     2fa:	9a 85       	ldd	r25, Y+10	; 0x0a
     2fc:	00 97       	sbiw	r24, 0x00	; 0
     2fe:	61 f7       	brne	.-40     	; 0x2d8 <.L8>

00000300 <.Loc.14>:
		}
		return;
     300:	19 c0       	rjmp	.+50     	; 0x334 <.L9>

00000302 <.L13>:
	}
	else
		__ticks = (uint16_t)__tmp;
     302:	6d 81       	ldd	r22, Y+5	; 0x05
     304:	7e 81       	ldd	r23, Y+6	; 0x06
     306:	8f 81       	ldd	r24, Y+7	; 0x07
     308:	98 85       	ldd	r25, Y+8	; 0x08
     30a:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     30e:	6f 8f       	std	Y+31, r22	; 0x1f
     310:	78 a3       	std	Y+32, r23	; 0x20
     312:	89 a3       	std	Y+33, r24	; 0x21
     314:	9a a3       	std	Y+34, r25	; 0x22
     316:	8f 8d       	ldd	r24, Y+31	; 0x1f
     318:	98 a1       	ldd	r25, Y+32	; 0x20
     31a:	9a 87       	std	Y+10, r25	; 0x0a
     31c:	89 87       	std	Y+9, r24	; 0x09

0000031e <.L4>:
     31e:	89 85       	ldd	r24, Y+9	; 0x09
     320:	9a 85       	ldd	r25, Y+10	; 0x0a
     322:	9e 87       	std	Y+14, r25	; 0x0e
     324:	8d 87       	std	Y+13, r24	; 0x0d

00000326 <.LBB46>:
     326:	8d 85       	ldd	r24, Y+13	; 0x0d
     328:	9e 85       	ldd	r25, Y+14	; 0x0e

0000032a <.L1^B2>:
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	f1 f7       	brne	.-4      	; 0x32a <.L1^B2>
     32e:	9e 87       	std	Y+14, r25	; 0x0e
     330:	8d 87       	std	Y+13, r24	; 0x0d

00000332 <.Loc.17>:
	...

00000334 <.L9>:
    _delay_ms(100);
}
     334:	00 00       	nop
     336:	a2 96       	adiw	r28, 0x22	; 34
     338:	0f b6       	in	r0, 0x3f	; 63
     33a:	f8 94       	cli
     33c:	de bf       	out	0x3e, r29	; 62
     33e:	0f be       	out	0x3f, r0	; 63
     340:	cd bf       	out	0x3d, r28	; 61
     342:	df 91       	pop	r29
     344:	cf 91       	pop	r28
     346:	08 95       	ret

00000348 <agv_rechts_bocht>:

void agv_rechts_bocht(void)
{
     348:	cf 93       	push	r28
     34a:	df 93       	push	r29
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
     350:	a2 97       	sbiw	r28, 0x22	; 34
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	f8 94       	cli
     356:	de bf       	out	0x3e, r29	; 62
     358:	0f be       	out	0x3f, r0	; 63
     35a:	cd bf       	out	0x3d, r28	; 61

0000035c <.Loc.20>:
    set_motor_speed(1, 200);
     35c:	68 ec       	ldi	r22, 0xC8	; 200
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

00000364 <.Loc.21>:
    set_motor_speed(2, 100);
     364:	64 e6       	ldi	r22, 0x64	; 100
     366:	82 e0       	ldi	r24, 0x02	; 2
     368:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	a8 ec       	ldi	r26, 0xC8	; 200
     372:	b2 e4       	ldi	r27, 0x42	; 66
     374:	89 83       	std	Y+1, r24	; 0x01
     376:	9a 83       	std	Y+2, r25	; 0x02
     378:	ab 83       	std	Y+3, r26	; 0x03
     37a:	bc 83       	std	Y+4, r27	; 0x04

0000037c <.LBB48>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	4a e7       	ldi	r20, 0x7A	; 122
     382:	55 e4       	ldi	r21, 0x45	; 69
     384:	69 81       	ldd	r22, Y+1	; 0x01
     386:	7a 81       	ldd	r23, Y+2	; 0x02
     388:	8b 81       	ldd	r24, Y+3	; 0x03
     38a:	9c 81       	ldd	r25, Y+4	; 0x04
     38c:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     390:	6b 8b       	std	Y+19, r22	; 0x13
     392:	7c 8b       	std	Y+20, r23	; 0x14
     394:	8d 8b       	std	Y+21, r24	; 0x15
     396:	9e 8b       	std	Y+22, r25	; 0x16
     398:	8b 89       	ldd	r24, Y+19	; 0x13
     39a:	9c 89       	ldd	r25, Y+20	; 0x14
     39c:	ad 89       	ldd	r26, Y+21	; 0x15
     39e:	be 89       	ldd	r27, Y+22	; 0x16
     3a0:	8d 83       	std	Y+5, r24	; 0x05
     3a2:	9e 83       	std	Y+6, r25	; 0x06
     3a4:	af 83       	std	Y+7, r26	; 0x07
     3a6:	b8 87       	std	Y+8, r27	; 0x08

000003a8 <.Loc.23>:
	if (__tmp < 1.0)
     3a8:	20 e0       	ldi	r18, 0x00	; 0
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	40 e8       	ldi	r20, 0x80	; 128
     3ae:	5f e3       	ldi	r21, 0x3F	; 63
     3b0:	6d 81       	ldd	r22, Y+5	; 0x05
     3b2:	7e 81       	ldd	r23, Y+6	; 0x06
     3b4:	8f 81       	ldd	r24, Y+7	; 0x07
     3b6:	98 85       	ldd	r25, Y+8	; 0x08
     3b8:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
     3bc:	88 23       	and	r24, r24
     3be:	2c f4       	brge	.+10     	; 0x3ca <.L25>

000003c0 <.Loc.24>:
		__ticks = 1;
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	9a 87       	std	Y+10, r25	; 0x0a
     3c6:	89 87       	std	Y+9, r24	; 0x09
     3c8:	55 c0       	rjmp	.+170    	; 0x474 <.L17>

000003ca <.L25>:
	else if (__tmp > 65535)
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	3f ef       	ldi	r19, 0xFF	; 255
     3ce:	4f e7       	ldi	r20, 0x7F	; 127
     3d0:	57 e4       	ldi	r21, 0x47	; 71
     3d2:	6d 81       	ldd	r22, Y+5	; 0x05
     3d4:	7e 81       	ldd	r23, Y+6	; 0x06
     3d6:	8f 81       	ldd	r24, Y+7	; 0x07
     3d8:	98 85       	ldd	r25, Y+8	; 0x08
     3da:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
     3de:	88 23       	and	r24, r24
     3e0:	d9 f1       	breq	.+118    	; 0x458 <.L26>
     3e2:	d4 f1       	brlt	.+116    	; 0x458 <.L26>

000003e4 <.Loc.26>:
		__ticks = (uint16_t) (__ms * 10.0);
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	40 e2       	ldi	r20, 0x20	; 32
     3ea:	51 e4       	ldi	r21, 0x41	; 65
     3ec:	69 81       	ldd	r22, Y+1	; 0x01
     3ee:	7a 81       	ldd	r23, Y+2	; 0x02
     3f0:	8b 81       	ldd	r24, Y+3	; 0x03
     3f2:	9c 81       	ldd	r25, Y+4	; 0x04
     3f4:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     3f8:	6f 8b       	std	Y+23, r22	; 0x17
     3fa:	78 8f       	std	Y+24, r23	; 0x18
     3fc:	89 8f       	std	Y+25, r24	; 0x19
     3fe:	9a 8f       	std	Y+26, r25	; 0x1a
     400:	8f 89       	ldd	r24, Y+23	; 0x17
     402:	98 8d       	ldd	r25, Y+24	; 0x18
     404:	a9 8d       	ldd	r26, Y+25	; 0x19
     406:	ba 8d       	ldd	r27, Y+26	; 0x1a
     408:	8f 87       	std	Y+15, r24	; 0x0f
     40a:	98 8b       	std	Y+16, r25	; 0x10
     40c:	a9 8b       	std	Y+17, r26	; 0x11
     40e:	ba 8b       	std	Y+18, r27	; 0x12

00000410 <.Loc.27>:
     410:	6f 85       	ldd	r22, Y+15	; 0x0f
     412:	78 89       	ldd	r23, Y+16	; 0x10
     414:	89 89       	ldd	r24, Y+17	; 0x11
     416:	9a 89       	ldd	r25, Y+18	; 0x12
     418:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     41c:	6b 8f       	std	Y+27, r22	; 0x1b
     41e:	7c 8f       	std	Y+28, r23	; 0x1c
     420:	8d 8f       	std	Y+29, r24	; 0x1d
     422:	9e 8f       	std	Y+30, r25	; 0x1e
     424:	ab 8d       	ldd	r26, Y+27	; 0x1b
     426:	bc 8d       	ldd	r27, Y+28	; 0x1c
     428:	ba 87       	std	Y+10, r27	; 0x0a
     42a:	a9 87       	std	Y+9, r26	; 0x09

0000042c <.Loc.28>:
		while(__ticks)
     42c:	10 c0       	rjmp	.+32     	; 0x44e <.L20>

0000042e <.L21>:
     42e:	80 e9       	ldi	r24, 0x90	; 144
     430:	91 e0       	ldi	r25, 0x01	; 1
     432:	9c 87       	std	Y+12, r25	; 0x0c
     434:	8b 87       	std	Y+11, r24	; 0x0b

00000436 <.LBB50>:
     436:	8b 85       	ldd	r24, Y+11	; 0x0b
     438:	9c 85       	ldd	r25, Y+12	; 0x0c

0000043a <.L1^B3>:
     43a:	01 97       	sbiw	r24, 0x01	; 1
     43c:	f1 f7       	brne	.-4      	; 0x43a <.L1^B3>
     43e:	9c 87       	std	Y+12, r25	; 0x0c
     440:	8b 87       	std	Y+11, r24	; 0x0b

00000442 <.Loc.30>:
	...

00000444 <.LBE50>:
			__ticks --;
     444:	89 85       	ldd	r24, Y+9	; 0x09
     446:	9a 85       	ldd	r25, Y+10	; 0x0a
     448:	01 97       	sbiw	r24, 0x01	; 1
     44a:	9a 87       	std	Y+10, r25	; 0x0a
     44c:	89 87       	std	Y+9, r24	; 0x09

0000044e <.L20>:
		while(__ticks)
     44e:	89 85       	ldd	r24, Y+9	; 0x09
     450:	9a 85       	ldd	r25, Y+10	; 0x0a
     452:	00 97       	sbiw	r24, 0x00	; 0
     454:	61 f7       	brne	.-40     	; 0x42e <.L21>

00000456 <.Loc.33>:
		return;
     456:	19 c0       	rjmp	.+50     	; 0x48a <.L22>

00000458 <.L26>:
		__ticks = (uint16_t)__tmp;
     458:	6d 81       	ldd	r22, Y+5	; 0x05
     45a:	7e 81       	ldd	r23, Y+6	; 0x06
     45c:	8f 81       	ldd	r24, Y+7	; 0x07
     45e:	98 85       	ldd	r25, Y+8	; 0x08
     460:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     464:	6f 8f       	std	Y+31, r22	; 0x1f
     466:	78 a3       	std	Y+32, r23	; 0x20
     468:	89 a3       	std	Y+33, r24	; 0x21
     46a:	9a a3       	std	Y+34, r25	; 0x22
     46c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     46e:	98 a1       	ldd	r25, Y+32	; 0x20
     470:	9a 87       	std	Y+10, r25	; 0x0a
     472:	89 87       	std	Y+9, r24	; 0x09

00000474 <.L17>:
     474:	89 85       	ldd	r24, Y+9	; 0x09
     476:	9a 85       	ldd	r25, Y+10	; 0x0a
     478:	9e 87       	std	Y+14, r25	; 0x0e
     47a:	8d 87       	std	Y+13, r24	; 0x0d

0000047c <.LBB52>:
     47c:	8d 85       	ldd	r24, Y+13	; 0x0d
     47e:	9e 85       	ldd	r25, Y+14	; 0x0e

00000480 <.L1^B4>:
     480:	01 97       	sbiw	r24, 0x01	; 1
     482:	f1 f7       	brne	.-4      	; 0x480 <.L1^B4>
     484:	9e 87       	std	Y+14, r25	; 0x0e
     486:	8d 87       	std	Y+13, r24	; 0x0d

00000488 <.Loc.36>:
	...

0000048a <.L22>:
    _delay_ms(100);
}
     48a:	00 00       	nop
     48c:	a2 96       	adiw	r28, 0x22	; 34
     48e:	0f b6       	in	r0, 0x3f	; 63
     490:	f8 94       	cli
     492:	de bf       	out	0x3e, r29	; 62
     494:	0f be       	out	0x3f, r0	; 63
     496:	cd bf       	out	0x3d, r28	; 61
     498:	df 91       	pop	r29
     49a:	cf 91       	pop	r28
     49c:	08 95       	ret

0000049e <agv_links_bocht>:

void agv_links_bocht(void)
{
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	cd b7       	in	r28, 0x3d	; 61
     4a4:	de b7       	in	r29, 0x3e	; 62
     4a6:	a2 97       	sbiw	r28, 0x22	; 34
     4a8:	0f b6       	in	r0, 0x3f	; 63
     4aa:	f8 94       	cli
     4ac:	de bf       	out	0x3e, r29	; 62
     4ae:	0f be       	out	0x3f, r0	; 63
     4b0:	cd bf       	out	0x3d, r28	; 61

000004b2 <.Loc.39>:
    set_motor_speed(1, 0);
     4b2:	60 e0       	ldi	r22, 0x00	; 0
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

000004ba <.Loc.40>:
    set_motor_speed(2, 255);
     4ba:	6f ef       	ldi	r22, 0xFF	; 255
     4bc:	82 e0       	ldi	r24, 0x02	; 2
     4be:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	a8 ec       	ldi	r26, 0xC8	; 200
     4c8:	b2 e4       	ldi	r27, 0x42	; 66
     4ca:	89 83       	std	Y+1, r24	; 0x01
     4cc:	9a 83       	std	Y+2, r25	; 0x02
     4ce:	ab 83       	std	Y+3, r26	; 0x03
     4d0:	bc 83       	std	Y+4, r27	; 0x04

000004d2 <.LBB54>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	4a e7       	ldi	r20, 0x7A	; 122
     4d8:	55 e4       	ldi	r21, 0x45	; 69
     4da:	69 81       	ldd	r22, Y+1	; 0x01
     4dc:	7a 81       	ldd	r23, Y+2	; 0x02
     4de:	8b 81       	ldd	r24, Y+3	; 0x03
     4e0:	9c 81       	ldd	r25, Y+4	; 0x04
     4e2:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     4e6:	6b 8b       	std	Y+19, r22	; 0x13
     4e8:	7c 8b       	std	Y+20, r23	; 0x14
     4ea:	8d 8b       	std	Y+21, r24	; 0x15
     4ec:	9e 8b       	std	Y+22, r25	; 0x16
     4ee:	8b 89       	ldd	r24, Y+19	; 0x13
     4f0:	9c 89       	ldd	r25, Y+20	; 0x14
     4f2:	ad 89       	ldd	r26, Y+21	; 0x15
     4f4:	be 89       	ldd	r27, Y+22	; 0x16
     4f6:	8d 83       	std	Y+5, r24	; 0x05
     4f8:	9e 83       	std	Y+6, r25	; 0x06
     4fa:	af 83       	std	Y+7, r26	; 0x07
     4fc:	b8 87       	std	Y+8, r27	; 0x08

000004fe <.Loc.42>:
	if (__tmp < 1.0)
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	40 e8       	ldi	r20, 0x80	; 128
     504:	5f e3       	ldi	r21, 0x3F	; 63
     506:	6d 81       	ldd	r22, Y+5	; 0x05
     508:	7e 81       	ldd	r23, Y+6	; 0x06
     50a:	8f 81       	ldd	r24, Y+7	; 0x07
     50c:	98 85       	ldd	r25, Y+8	; 0x08
     50e:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
     512:	88 23       	and	r24, r24
     514:	2c f4       	brge	.+10     	; 0x520 <.L38>

00000516 <.Loc.43>:
		__ticks = 1;
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	9a 87       	std	Y+10, r25	; 0x0a
     51c:	89 87       	std	Y+9, r24	; 0x09
     51e:	55 c0       	rjmp	.+170    	; 0x5ca <.L30>

00000520 <.L38>:
	else if (__tmp > 65535)
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	3f ef       	ldi	r19, 0xFF	; 255
     524:	4f e7       	ldi	r20, 0x7F	; 127
     526:	57 e4       	ldi	r21, 0x47	; 71
     528:	6d 81       	ldd	r22, Y+5	; 0x05
     52a:	7e 81       	ldd	r23, Y+6	; 0x06
     52c:	8f 81       	ldd	r24, Y+7	; 0x07
     52e:	98 85       	ldd	r25, Y+8	; 0x08
     530:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
     534:	88 23       	and	r24, r24
     536:	d9 f1       	breq	.+118    	; 0x5ae <.L39>
     538:	d4 f1       	brlt	.+116    	; 0x5ae <.L39>

0000053a <.Loc.45>:
		__ticks = (uint16_t) (__ms * 10.0);
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	40 e2       	ldi	r20, 0x20	; 32
     540:	51 e4       	ldi	r21, 0x41	; 65
     542:	69 81       	ldd	r22, Y+1	; 0x01
     544:	7a 81       	ldd	r23, Y+2	; 0x02
     546:	8b 81       	ldd	r24, Y+3	; 0x03
     548:	9c 81       	ldd	r25, Y+4	; 0x04
     54a:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     54e:	6f 8b       	std	Y+23, r22	; 0x17
     550:	78 8f       	std	Y+24, r23	; 0x18
     552:	89 8f       	std	Y+25, r24	; 0x19
     554:	9a 8f       	std	Y+26, r25	; 0x1a
     556:	8f 89       	ldd	r24, Y+23	; 0x17
     558:	98 8d       	ldd	r25, Y+24	; 0x18
     55a:	a9 8d       	ldd	r26, Y+25	; 0x19
     55c:	ba 8d       	ldd	r27, Y+26	; 0x1a
     55e:	8f 87       	std	Y+15, r24	; 0x0f
     560:	98 8b       	std	Y+16, r25	; 0x10
     562:	a9 8b       	std	Y+17, r26	; 0x11
     564:	ba 8b       	std	Y+18, r27	; 0x12

00000566 <.Loc.46>:
     566:	6f 85       	ldd	r22, Y+15	; 0x0f
     568:	78 89       	ldd	r23, Y+16	; 0x10
     56a:	89 89       	ldd	r24, Y+17	; 0x11
     56c:	9a 89       	ldd	r25, Y+18	; 0x12
     56e:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     572:	6b 8f       	std	Y+27, r22	; 0x1b
     574:	7c 8f       	std	Y+28, r23	; 0x1c
     576:	8d 8f       	std	Y+29, r24	; 0x1d
     578:	9e 8f       	std	Y+30, r25	; 0x1e
     57a:	ab 8d       	ldd	r26, Y+27	; 0x1b
     57c:	bc 8d       	ldd	r27, Y+28	; 0x1c
     57e:	ba 87       	std	Y+10, r27	; 0x0a
     580:	a9 87       	std	Y+9, r26	; 0x09

00000582 <.Loc.47>:
		while(__ticks)
     582:	10 c0       	rjmp	.+32     	; 0x5a4 <.L33>

00000584 <.L34>:
     584:	80 e9       	ldi	r24, 0x90	; 144
     586:	91 e0       	ldi	r25, 0x01	; 1
     588:	9c 87       	std	Y+12, r25	; 0x0c
     58a:	8b 87       	std	Y+11, r24	; 0x0b

0000058c <.LBB56>:
     58c:	8b 85       	ldd	r24, Y+11	; 0x0b
     58e:	9c 85       	ldd	r25, Y+12	; 0x0c

00000590 <.L1^B5>:
     590:	01 97       	sbiw	r24, 0x01	; 1
     592:	f1 f7       	brne	.-4      	; 0x590 <.L1^B5>
     594:	9c 87       	std	Y+12, r25	; 0x0c
     596:	8b 87       	std	Y+11, r24	; 0x0b

00000598 <.Loc.49>:
	...

0000059a <.LBE56>:
			__ticks --;
     59a:	89 85       	ldd	r24, Y+9	; 0x09
     59c:	9a 85       	ldd	r25, Y+10	; 0x0a
     59e:	01 97       	sbiw	r24, 0x01	; 1
     5a0:	9a 87       	std	Y+10, r25	; 0x0a
     5a2:	89 87       	std	Y+9, r24	; 0x09

000005a4 <.L33>:
		while(__ticks)
     5a4:	89 85       	ldd	r24, Y+9	; 0x09
     5a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     5a8:	00 97       	sbiw	r24, 0x00	; 0
     5aa:	61 f7       	brne	.-40     	; 0x584 <.L34>

000005ac <.Loc.52>:
		return;
     5ac:	19 c0       	rjmp	.+50     	; 0x5e0 <.L35>

000005ae <.L39>:
		__ticks = (uint16_t)__tmp;
     5ae:	6d 81       	ldd	r22, Y+5	; 0x05
     5b0:	7e 81       	ldd	r23, Y+6	; 0x06
     5b2:	8f 81       	ldd	r24, Y+7	; 0x07
     5b4:	98 85       	ldd	r25, Y+8	; 0x08
     5b6:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     5ba:	6f 8f       	std	Y+31, r22	; 0x1f
     5bc:	78 a3       	std	Y+32, r23	; 0x20
     5be:	89 a3       	std	Y+33, r24	; 0x21
     5c0:	9a a3       	std	Y+34, r25	; 0x22
     5c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
     5c4:	98 a1       	ldd	r25, Y+32	; 0x20
     5c6:	9a 87       	std	Y+10, r25	; 0x0a
     5c8:	89 87       	std	Y+9, r24	; 0x09

000005ca <.L30>:
     5ca:	89 85       	ldd	r24, Y+9	; 0x09
     5cc:	9a 85       	ldd	r25, Y+10	; 0x0a
     5ce:	9e 87       	std	Y+14, r25	; 0x0e
     5d0:	8d 87       	std	Y+13, r24	; 0x0d

000005d2 <.LBB58>:
     5d2:	8d 85       	ldd	r24, Y+13	; 0x0d
     5d4:	9e 85       	ldd	r25, Y+14	; 0x0e

000005d6 <.L1^B6>:
     5d6:	01 97       	sbiw	r24, 0x01	; 1
     5d8:	f1 f7       	brne	.-4      	; 0x5d6 <.L1^B6>
     5da:	9e 87       	std	Y+14, r25	; 0x0e
     5dc:	8d 87       	std	Y+13, r24	; 0x0d

000005de <.Loc.55>:
	...

000005e0 <.L35>:
    _delay_ms(100);
}
     5e0:	00 00       	nop
     5e2:	a2 96       	adiw	r28, 0x22	; 34
     5e4:	0f b6       	in	r0, 0x3f	; 63
     5e6:	f8 94       	cli
     5e8:	de bf       	out	0x3e, r29	; 62
     5ea:	0f be       	out	0x3f, r0	; 63
     5ec:	cd bf       	out	0x3d, r28	; 61
     5ee:	df 91       	pop	r29
     5f0:	cf 91       	pop	r28
     5f2:	08 95       	ret

000005f4 <agv_stoppen>:

void agv_stoppen(void)
{
     5f4:	cf 93       	push	r28
     5f6:	df 93       	push	r29
     5f8:	cd b7       	in	r28, 0x3d	; 61
     5fa:	de b7       	in	r29, 0x3e	; 62
     5fc:	a2 97       	sbiw	r28, 0x22	; 34
     5fe:	0f b6       	in	r0, 0x3f	; 63
     600:	f8 94       	cli
     602:	de bf       	out	0x3e, r29	; 62
     604:	0f be       	out	0x3f, r0	; 63
     606:	cd bf       	out	0x3d, r28	; 61

00000608 <.Loc.58>:
    set_motor_speed(1, 0);
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

00000610 <.Loc.59>:
    set_motor_speed(2, 0);
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	82 e0       	ldi	r24, 0x02	; 2
     614:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	a8 ec       	ldi	r26, 0xC8	; 200
     61e:	b2 e4       	ldi	r27, 0x42	; 66
     620:	89 83       	std	Y+1, r24	; 0x01
     622:	9a 83       	std	Y+2, r25	; 0x02
     624:	ab 83       	std	Y+3, r26	; 0x03
     626:	bc 83       	std	Y+4, r27	; 0x04

00000628 <.LBB60>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	4a e7       	ldi	r20, 0x7A	; 122
     62e:	55 e4       	ldi	r21, 0x45	; 69
     630:	69 81       	ldd	r22, Y+1	; 0x01
     632:	7a 81       	ldd	r23, Y+2	; 0x02
     634:	8b 81       	ldd	r24, Y+3	; 0x03
     636:	9c 81       	ldd	r25, Y+4	; 0x04
     638:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     63c:	6b 8b       	std	Y+19, r22	; 0x13
     63e:	7c 8b       	std	Y+20, r23	; 0x14
     640:	8d 8b       	std	Y+21, r24	; 0x15
     642:	9e 8b       	std	Y+22, r25	; 0x16
     644:	8b 89       	ldd	r24, Y+19	; 0x13
     646:	9c 89       	ldd	r25, Y+20	; 0x14
     648:	ad 89       	ldd	r26, Y+21	; 0x15
     64a:	be 89       	ldd	r27, Y+22	; 0x16
     64c:	8d 83       	std	Y+5, r24	; 0x05
     64e:	9e 83       	std	Y+6, r25	; 0x06
     650:	af 83       	std	Y+7, r26	; 0x07
     652:	b8 87       	std	Y+8, r27	; 0x08

00000654 <.Loc.61>:
	if (__tmp < 1.0)
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	30 e0       	ldi	r19, 0x00	; 0
     658:	40 e8       	ldi	r20, 0x80	; 128
     65a:	5f e3       	ldi	r21, 0x3F	; 63
     65c:	6d 81       	ldd	r22, Y+5	; 0x05
     65e:	7e 81       	ldd	r23, Y+6	; 0x06
     660:	8f 81       	ldd	r24, Y+7	; 0x07
     662:	98 85       	ldd	r25, Y+8	; 0x08
     664:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
     668:	88 23       	and	r24, r24
     66a:	2c f4       	brge	.+10     	; 0x676 <.L51>

0000066c <.Loc.62>:
		__ticks = 1;
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	9a 87       	std	Y+10, r25	; 0x0a
     672:	89 87       	std	Y+9, r24	; 0x09
     674:	55 c0       	rjmp	.+170    	; 0x720 <.L43>

00000676 <.L51>:
	else if (__tmp > 65535)
     676:	20 e0       	ldi	r18, 0x00	; 0
     678:	3f ef       	ldi	r19, 0xFF	; 255
     67a:	4f e7       	ldi	r20, 0x7F	; 127
     67c:	57 e4       	ldi	r21, 0x47	; 71
     67e:	6d 81       	ldd	r22, Y+5	; 0x05
     680:	7e 81       	ldd	r23, Y+6	; 0x06
     682:	8f 81       	ldd	r24, Y+7	; 0x07
     684:	98 85       	ldd	r25, Y+8	; 0x08
     686:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
     68a:	88 23       	and	r24, r24
     68c:	d9 f1       	breq	.+118    	; 0x704 <.L52>
     68e:	d4 f1       	brlt	.+116    	; 0x704 <.L52>

00000690 <.Loc.64>:
		__ticks = (uint16_t) (__ms * 10.0);
     690:	20 e0       	ldi	r18, 0x00	; 0
     692:	30 e0       	ldi	r19, 0x00	; 0
     694:	40 e2       	ldi	r20, 0x20	; 32
     696:	51 e4       	ldi	r21, 0x41	; 65
     698:	69 81       	ldd	r22, Y+1	; 0x01
     69a:	7a 81       	ldd	r23, Y+2	; 0x02
     69c:	8b 81       	ldd	r24, Y+3	; 0x03
     69e:	9c 81       	ldd	r25, Y+4	; 0x04
     6a0:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     6a4:	6f 8b       	std	Y+23, r22	; 0x17
     6a6:	78 8f       	std	Y+24, r23	; 0x18
     6a8:	89 8f       	std	Y+25, r24	; 0x19
     6aa:	9a 8f       	std	Y+26, r25	; 0x1a
     6ac:	8f 89       	ldd	r24, Y+23	; 0x17
     6ae:	98 8d       	ldd	r25, Y+24	; 0x18
     6b0:	a9 8d       	ldd	r26, Y+25	; 0x19
     6b2:	ba 8d       	ldd	r27, Y+26	; 0x1a
     6b4:	8f 87       	std	Y+15, r24	; 0x0f
     6b6:	98 8b       	std	Y+16, r25	; 0x10
     6b8:	a9 8b       	std	Y+17, r26	; 0x11
     6ba:	ba 8b       	std	Y+18, r27	; 0x12

000006bc <.Loc.65>:
     6bc:	6f 85       	ldd	r22, Y+15	; 0x0f
     6be:	78 89       	ldd	r23, Y+16	; 0x10
     6c0:	89 89       	ldd	r24, Y+17	; 0x11
     6c2:	9a 89       	ldd	r25, Y+18	; 0x12
     6c4:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     6c8:	6b 8f       	std	Y+27, r22	; 0x1b
     6ca:	7c 8f       	std	Y+28, r23	; 0x1c
     6cc:	8d 8f       	std	Y+29, r24	; 0x1d
     6ce:	9e 8f       	std	Y+30, r25	; 0x1e
     6d0:	ab 8d       	ldd	r26, Y+27	; 0x1b
     6d2:	bc 8d       	ldd	r27, Y+28	; 0x1c
     6d4:	ba 87       	std	Y+10, r27	; 0x0a
     6d6:	a9 87       	std	Y+9, r26	; 0x09

000006d8 <.Loc.66>:
		while(__ticks)
     6d8:	10 c0       	rjmp	.+32     	; 0x6fa <.L46>

000006da <.L47>:
     6da:	80 e9       	ldi	r24, 0x90	; 144
     6dc:	91 e0       	ldi	r25, 0x01	; 1
     6de:	9c 87       	std	Y+12, r25	; 0x0c
     6e0:	8b 87       	std	Y+11, r24	; 0x0b

000006e2 <.LBB62>:
     6e2:	8b 85       	ldd	r24, Y+11	; 0x0b
     6e4:	9c 85       	ldd	r25, Y+12	; 0x0c

000006e6 <.L1^B7>:
     6e6:	01 97       	sbiw	r24, 0x01	; 1
     6e8:	f1 f7       	brne	.-4      	; 0x6e6 <.L1^B7>
     6ea:	9c 87       	std	Y+12, r25	; 0x0c
     6ec:	8b 87       	std	Y+11, r24	; 0x0b

000006ee <.Loc.68>:
	...

000006f0 <.LBE62>:
			__ticks --;
     6f0:	89 85       	ldd	r24, Y+9	; 0x09
     6f2:	9a 85       	ldd	r25, Y+10	; 0x0a
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	9a 87       	std	Y+10, r25	; 0x0a
     6f8:	89 87       	std	Y+9, r24	; 0x09

000006fa <.L46>:
		while(__ticks)
     6fa:	89 85       	ldd	r24, Y+9	; 0x09
     6fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     6fe:	00 97       	sbiw	r24, 0x00	; 0
     700:	61 f7       	brne	.-40     	; 0x6da <.L47>

00000702 <.Loc.71>:
		return;
     702:	19 c0       	rjmp	.+50     	; 0x736 <.L48>

00000704 <.L52>:
		__ticks = (uint16_t)__tmp;
     704:	6d 81       	ldd	r22, Y+5	; 0x05
     706:	7e 81       	ldd	r23, Y+6	; 0x06
     708:	8f 81       	ldd	r24, Y+7	; 0x07
     70a:	98 85       	ldd	r25, Y+8	; 0x08
     70c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     710:	6f 8f       	std	Y+31, r22	; 0x1f
     712:	78 a3       	std	Y+32, r23	; 0x20
     714:	89 a3       	std	Y+33, r24	; 0x21
     716:	9a a3       	std	Y+34, r25	; 0x22
     718:	8f 8d       	ldd	r24, Y+31	; 0x1f
     71a:	98 a1       	ldd	r25, Y+32	; 0x20
     71c:	9a 87       	std	Y+10, r25	; 0x0a
     71e:	89 87       	std	Y+9, r24	; 0x09

00000720 <.L43>:
     720:	89 85       	ldd	r24, Y+9	; 0x09
     722:	9a 85       	ldd	r25, Y+10	; 0x0a
     724:	9e 87       	std	Y+14, r25	; 0x0e
     726:	8d 87       	std	Y+13, r24	; 0x0d

00000728 <.LBB64>:
     728:	8d 85       	ldd	r24, Y+13	; 0x0d
     72a:	9e 85       	ldd	r25, Y+14	; 0x0e

0000072c <.L1^B8>:
     72c:	01 97       	sbiw	r24, 0x01	; 1
     72e:	f1 f7       	brne	.-4      	; 0x72c <.L1^B8>
     730:	9e 87       	std	Y+14, r25	; 0x0e
     732:	8d 87       	std	Y+13, r24	; 0x0d

00000734 <.Loc.74>:
	...

00000736 <.L48>:
    _delay_ms(100);
}
     736:	00 00       	nop
     738:	a2 96       	adiw	r28, 0x22	; 34
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	f8 94       	cli
     73e:	de bf       	out	0x3e, r29	; 62
     740:	0f be       	out	0x3f, r0	; 63
     742:	cd bf       	out	0x3d, r28	; 61
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	08 95       	ret

0000074a <agv_rechts_correctie>:

void agv_rechts_correctie(void)
{
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	cd b7       	in	r28, 0x3d	; 61
     750:	de b7       	in	r29, 0x3e	; 62
     752:	a2 97       	sbiw	r28, 0x22	; 34
     754:	0f b6       	in	r0, 0x3f	; 63
     756:	f8 94       	cli
     758:	de bf       	out	0x3e, r29	; 62
     75a:	0f be       	out	0x3f, r0	; 63
     75c:	cd bf       	out	0x3d, r28	; 61

0000075e <.Loc.77>:
    set_motor_speed(1, 150);
     75e:	66 e9       	ldi	r22, 0x96	; 150
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

00000766 <.Loc.78>:
    set_motor_speed(2, 200);
     766:	68 ec       	ldi	r22, 0xC8	; 200
     768:	82 e0       	ldi	r24, 0x02	; 2
     76a:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     76e:	80 e0       	ldi	r24, 0x00	; 0
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	a8 ec       	ldi	r26, 0xC8	; 200
     774:	b2 e4       	ldi	r27, 0x42	; 66
     776:	89 83       	std	Y+1, r24	; 0x01
     778:	9a 83       	std	Y+2, r25	; 0x02
     77a:	ab 83       	std	Y+3, r26	; 0x03
     77c:	bc 83       	std	Y+4, r27	; 0x04

0000077e <.LBB66>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	4a e7       	ldi	r20, 0x7A	; 122
     784:	55 e4       	ldi	r21, 0x45	; 69
     786:	69 81       	ldd	r22, Y+1	; 0x01
     788:	7a 81       	ldd	r23, Y+2	; 0x02
     78a:	8b 81       	ldd	r24, Y+3	; 0x03
     78c:	9c 81       	ldd	r25, Y+4	; 0x04
     78e:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     792:	6b 8b       	std	Y+19, r22	; 0x13
     794:	7c 8b       	std	Y+20, r23	; 0x14
     796:	8d 8b       	std	Y+21, r24	; 0x15
     798:	9e 8b       	std	Y+22, r25	; 0x16
     79a:	8b 89       	ldd	r24, Y+19	; 0x13
     79c:	9c 89       	ldd	r25, Y+20	; 0x14
     79e:	ad 89       	ldd	r26, Y+21	; 0x15
     7a0:	be 89       	ldd	r27, Y+22	; 0x16
     7a2:	8d 83       	std	Y+5, r24	; 0x05
     7a4:	9e 83       	std	Y+6, r25	; 0x06
     7a6:	af 83       	std	Y+7, r26	; 0x07
     7a8:	b8 87       	std	Y+8, r27	; 0x08

000007aa <.Loc.80>:
	if (__tmp < 1.0)
     7aa:	20 e0       	ldi	r18, 0x00	; 0
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	40 e8       	ldi	r20, 0x80	; 128
     7b0:	5f e3       	ldi	r21, 0x3F	; 63
     7b2:	6d 81       	ldd	r22, Y+5	; 0x05
     7b4:	7e 81       	ldd	r23, Y+6	; 0x06
     7b6:	8f 81       	ldd	r24, Y+7	; 0x07
     7b8:	98 85       	ldd	r25, Y+8	; 0x08
     7ba:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
     7be:	88 23       	and	r24, r24
     7c0:	2c f4       	brge	.+10     	; 0x7cc <.L64>

000007c2 <.Loc.81>:
		__ticks = 1;
     7c2:	81 e0       	ldi	r24, 0x01	; 1
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	9a 87       	std	Y+10, r25	; 0x0a
     7c8:	89 87       	std	Y+9, r24	; 0x09
     7ca:	55 c0       	rjmp	.+170    	; 0x876 <.L56>

000007cc <.L64>:
	else if (__tmp > 65535)
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f e7       	ldi	r20, 0x7F	; 127
     7d2:	57 e4       	ldi	r21, 0x47	; 71
     7d4:	6d 81       	ldd	r22, Y+5	; 0x05
     7d6:	7e 81       	ldd	r23, Y+6	; 0x06
     7d8:	8f 81       	ldd	r24, Y+7	; 0x07
     7da:	98 85       	ldd	r25, Y+8	; 0x08
     7dc:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
     7e0:	88 23       	and	r24, r24
     7e2:	d9 f1       	breq	.+118    	; 0x85a <.L65>
     7e4:	d4 f1       	brlt	.+116    	; 0x85a <.L65>

000007e6 <.Loc.83>:
		__ticks = (uint16_t) (__ms * 10.0);
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e2       	ldi	r20, 0x20	; 32
     7ec:	51 e4       	ldi	r21, 0x41	; 65
     7ee:	69 81       	ldd	r22, Y+1	; 0x01
     7f0:	7a 81       	ldd	r23, Y+2	; 0x02
     7f2:	8b 81       	ldd	r24, Y+3	; 0x03
     7f4:	9c 81       	ldd	r25, Y+4	; 0x04
     7f6:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     7fa:	6f 8b       	std	Y+23, r22	; 0x17
     7fc:	78 8f       	std	Y+24, r23	; 0x18
     7fe:	89 8f       	std	Y+25, r24	; 0x19
     800:	9a 8f       	std	Y+26, r25	; 0x1a
     802:	8f 89       	ldd	r24, Y+23	; 0x17
     804:	98 8d       	ldd	r25, Y+24	; 0x18
     806:	a9 8d       	ldd	r26, Y+25	; 0x19
     808:	ba 8d       	ldd	r27, Y+26	; 0x1a
     80a:	8f 87       	std	Y+15, r24	; 0x0f
     80c:	98 8b       	std	Y+16, r25	; 0x10
     80e:	a9 8b       	std	Y+17, r26	; 0x11
     810:	ba 8b       	std	Y+18, r27	; 0x12

00000812 <.Loc.84>:
     812:	6f 85       	ldd	r22, Y+15	; 0x0f
     814:	78 89       	ldd	r23, Y+16	; 0x10
     816:	89 89       	ldd	r24, Y+17	; 0x11
     818:	9a 89       	ldd	r25, Y+18	; 0x12
     81a:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     81e:	6b 8f       	std	Y+27, r22	; 0x1b
     820:	7c 8f       	std	Y+28, r23	; 0x1c
     822:	8d 8f       	std	Y+29, r24	; 0x1d
     824:	9e 8f       	std	Y+30, r25	; 0x1e
     826:	ab 8d       	ldd	r26, Y+27	; 0x1b
     828:	bc 8d       	ldd	r27, Y+28	; 0x1c
     82a:	ba 87       	std	Y+10, r27	; 0x0a
     82c:	a9 87       	std	Y+9, r26	; 0x09

0000082e <.Loc.85>:
		while(__ticks)
     82e:	10 c0       	rjmp	.+32     	; 0x850 <.L59>

00000830 <.L60>:
     830:	80 e9       	ldi	r24, 0x90	; 144
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	9c 87       	std	Y+12, r25	; 0x0c
     836:	8b 87       	std	Y+11, r24	; 0x0b

00000838 <.LBB68>:
     838:	8b 85       	ldd	r24, Y+11	; 0x0b
     83a:	9c 85       	ldd	r25, Y+12	; 0x0c

0000083c <.L1^B9>:
     83c:	01 97       	sbiw	r24, 0x01	; 1
     83e:	f1 f7       	brne	.-4      	; 0x83c <.L1^B9>
     840:	9c 87       	std	Y+12, r25	; 0x0c
     842:	8b 87       	std	Y+11, r24	; 0x0b

00000844 <.Loc.87>:
	...

00000846 <.LBE68>:
			__ticks --;
     846:	89 85       	ldd	r24, Y+9	; 0x09
     848:	9a 85       	ldd	r25, Y+10	; 0x0a
     84a:	01 97       	sbiw	r24, 0x01	; 1
     84c:	9a 87       	std	Y+10, r25	; 0x0a
     84e:	89 87       	std	Y+9, r24	; 0x09

00000850 <.L59>:
		while(__ticks)
     850:	89 85       	ldd	r24, Y+9	; 0x09
     852:	9a 85       	ldd	r25, Y+10	; 0x0a
     854:	00 97       	sbiw	r24, 0x00	; 0
     856:	61 f7       	brne	.-40     	; 0x830 <.L60>

00000858 <.Loc.90>:
		return;
     858:	19 c0       	rjmp	.+50     	; 0x88c <.L61>

0000085a <.L65>:
		__ticks = (uint16_t)__tmp;
     85a:	6d 81       	ldd	r22, Y+5	; 0x05
     85c:	7e 81       	ldd	r23, Y+6	; 0x06
     85e:	8f 81       	ldd	r24, Y+7	; 0x07
     860:	98 85       	ldd	r25, Y+8	; 0x08
     862:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     866:	6f 8f       	std	Y+31, r22	; 0x1f
     868:	78 a3       	std	Y+32, r23	; 0x20
     86a:	89 a3       	std	Y+33, r24	; 0x21
     86c:	9a a3       	std	Y+34, r25	; 0x22
     86e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     870:	98 a1       	ldd	r25, Y+32	; 0x20
     872:	9a 87       	std	Y+10, r25	; 0x0a
     874:	89 87       	std	Y+9, r24	; 0x09

00000876 <.L56>:
     876:	89 85       	ldd	r24, Y+9	; 0x09
     878:	9a 85       	ldd	r25, Y+10	; 0x0a
     87a:	9e 87       	std	Y+14, r25	; 0x0e
     87c:	8d 87       	std	Y+13, r24	; 0x0d

0000087e <.LBB70>:
     87e:	8d 85       	ldd	r24, Y+13	; 0x0d
     880:	9e 85       	ldd	r25, Y+14	; 0x0e

00000882 <.L1^B10>:
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	f1 f7       	brne	.-4      	; 0x882 <.L1^B10>
     886:	9e 87       	std	Y+14, r25	; 0x0e
     888:	8d 87       	std	Y+13, r24	; 0x0d

0000088a <.Loc.93>:
	...

0000088c <.L61>:
    _delay_ms(100);
}
     88c:	00 00       	nop
     88e:	a2 96       	adiw	r28, 0x22	; 34
     890:	0f b6       	in	r0, 0x3f	; 63
     892:	f8 94       	cli
     894:	de bf       	out	0x3e, r29	; 62
     896:	0f be       	out	0x3f, r0	; 63
     898:	cd bf       	out	0x3d, r28	; 61
     89a:	df 91       	pop	r29
     89c:	cf 91       	pop	r28
     89e:	08 95       	ret

000008a0 <agv_links_correctie>:

void agv_links_correctie(void) {
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	cd b7       	in	r28, 0x3d	; 61
     8a6:	de b7       	in	r29, 0x3e	; 62
     8a8:	a2 97       	sbiw	r28, 0x22	; 34
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	f8 94       	cli
     8ae:	de bf       	out	0x3e, r29	; 62
     8b0:	0f be       	out	0x3f, r0	; 63
     8b2:	cd bf       	out	0x3d, r28	; 61

000008b4 <.Loc.96>:
    set_motor_speed(1, 200);
     8b4:	68 ec       	ldi	r22, 0xC8	; 200
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>

000008bc <.Loc.97>:
    set_motor_speed(2, 150);
     8bc:	66 e9       	ldi	r22, 0x96	; 150
     8be:	82 e0       	ldi	r24, 0x02	; 2
     8c0:	0e 94 66 05 	call	0xacc	; 0xacc <set_motor_speed>
     8c4:	80 e0       	ldi	r24, 0x00	; 0
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	a8 ec       	ldi	r26, 0xC8	; 200
     8ca:	b2 e4       	ldi	r27, 0x42	; 66
     8cc:	89 83       	std	Y+1, r24	; 0x01
     8ce:	9a 83       	std	Y+2, r25	; 0x02
     8d0:	ab 83       	std	Y+3, r26	; 0x03
     8d2:	bc 83       	std	Y+4, r27	; 0x04

000008d4 <.LBB72>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     8d4:	20 e0       	ldi	r18, 0x00	; 0
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	4a e7       	ldi	r20, 0x7A	; 122
     8da:	55 e4       	ldi	r21, 0x45	; 69
     8dc:	69 81       	ldd	r22, Y+1	; 0x01
     8de:	7a 81       	ldd	r23, Y+2	; 0x02
     8e0:	8b 81       	ldd	r24, Y+3	; 0x03
     8e2:	9c 81       	ldd	r25, Y+4	; 0x04
     8e4:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     8e8:	6b 8b       	std	Y+19, r22	; 0x13
     8ea:	7c 8b       	std	Y+20, r23	; 0x14
     8ec:	8d 8b       	std	Y+21, r24	; 0x15
     8ee:	9e 8b       	std	Y+22, r25	; 0x16
     8f0:	8b 89       	ldd	r24, Y+19	; 0x13
     8f2:	9c 89       	ldd	r25, Y+20	; 0x14
     8f4:	ad 89       	ldd	r26, Y+21	; 0x15
     8f6:	be 89       	ldd	r27, Y+22	; 0x16
     8f8:	8d 83       	std	Y+5, r24	; 0x05
     8fa:	9e 83       	std	Y+6, r25	; 0x06
     8fc:	af 83       	std	Y+7, r26	; 0x07
     8fe:	b8 87       	std	Y+8, r27	; 0x08

00000900 <.Loc.99>:
	if (__tmp < 1.0)
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	40 e8       	ldi	r20, 0x80	; 128
     906:	5f e3       	ldi	r21, 0x3F	; 63
     908:	6d 81       	ldd	r22, Y+5	; 0x05
     90a:	7e 81       	ldd	r23, Y+6	; 0x06
     90c:	8f 81       	ldd	r24, Y+7	; 0x07
     90e:	98 85       	ldd	r25, Y+8	; 0x08
     910:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
     914:	88 23       	and	r24, r24
     916:	2c f4       	brge	.+10     	; 0x922 <.L77>

00000918 <.Loc.100>:
		__ticks = 1;
     918:	81 e0       	ldi	r24, 0x01	; 1
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	9a 87       	std	Y+10, r25	; 0x0a
     91e:	89 87       	std	Y+9, r24	; 0x09
     920:	55 c0       	rjmp	.+170    	; 0x9cc <.L69>

00000922 <.L77>:
	else if (__tmp > 65535)
     922:	20 e0       	ldi	r18, 0x00	; 0
     924:	3f ef       	ldi	r19, 0xFF	; 255
     926:	4f e7       	ldi	r20, 0x7F	; 127
     928:	57 e4       	ldi	r21, 0x47	; 71
     92a:	6d 81       	ldd	r22, Y+5	; 0x05
     92c:	7e 81       	ldd	r23, Y+6	; 0x06
     92e:	8f 81       	ldd	r24, Y+7	; 0x07
     930:	98 85       	ldd	r25, Y+8	; 0x08
     932:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
     936:	88 23       	and	r24, r24
     938:	d9 f1       	breq	.+118    	; 0x9b0 <.L78>
     93a:	d4 f1       	brlt	.+116    	; 0x9b0 <.L78>

0000093c <.Loc.102>:
		__ticks = (uint16_t) (__ms * 10.0);
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e2       	ldi	r20, 0x20	; 32
     942:	51 e4       	ldi	r21, 0x41	; 65
     944:	69 81       	ldd	r22, Y+1	; 0x01
     946:	7a 81       	ldd	r23, Y+2	; 0x02
     948:	8b 81       	ldd	r24, Y+3	; 0x03
     94a:	9c 81       	ldd	r25, Y+4	; 0x04
     94c:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     950:	6f 8b       	std	Y+23, r22	; 0x17
     952:	78 8f       	std	Y+24, r23	; 0x18
     954:	89 8f       	std	Y+25, r24	; 0x19
     956:	9a 8f       	std	Y+26, r25	; 0x1a
     958:	8f 89       	ldd	r24, Y+23	; 0x17
     95a:	98 8d       	ldd	r25, Y+24	; 0x18
     95c:	a9 8d       	ldd	r26, Y+25	; 0x19
     95e:	ba 8d       	ldd	r27, Y+26	; 0x1a
     960:	8f 87       	std	Y+15, r24	; 0x0f
     962:	98 8b       	std	Y+16, r25	; 0x10
     964:	a9 8b       	std	Y+17, r26	; 0x11
     966:	ba 8b       	std	Y+18, r27	; 0x12

00000968 <.Loc.103>:
     968:	6f 85       	ldd	r22, Y+15	; 0x0f
     96a:	78 89       	ldd	r23, Y+16	; 0x10
     96c:	89 89       	ldd	r24, Y+17	; 0x11
     96e:	9a 89       	ldd	r25, Y+18	; 0x12
     970:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     974:	6b 8f       	std	Y+27, r22	; 0x1b
     976:	7c 8f       	std	Y+28, r23	; 0x1c
     978:	8d 8f       	std	Y+29, r24	; 0x1d
     97a:	9e 8f       	std	Y+30, r25	; 0x1e
     97c:	ab 8d       	ldd	r26, Y+27	; 0x1b
     97e:	bc 8d       	ldd	r27, Y+28	; 0x1c
     980:	ba 87       	std	Y+10, r27	; 0x0a
     982:	a9 87       	std	Y+9, r26	; 0x09

00000984 <.Loc.104>:
		while(__ticks)
     984:	10 c0       	rjmp	.+32     	; 0x9a6 <.L72>

00000986 <.L73>:
     986:	80 e9       	ldi	r24, 0x90	; 144
     988:	91 e0       	ldi	r25, 0x01	; 1
     98a:	9c 87       	std	Y+12, r25	; 0x0c
     98c:	8b 87       	std	Y+11, r24	; 0x0b

0000098e <.LBB74>:
     98e:	8b 85       	ldd	r24, Y+11	; 0x0b
     990:	9c 85       	ldd	r25, Y+12	; 0x0c

00000992 <.L1^B11>:
     992:	01 97       	sbiw	r24, 0x01	; 1
     994:	f1 f7       	brne	.-4      	; 0x992 <.L1^B11>
     996:	9c 87       	std	Y+12, r25	; 0x0c
     998:	8b 87       	std	Y+11, r24	; 0x0b

0000099a <.Loc.106>:
	...

0000099c <.LBE74>:
			__ticks --;
     99c:	89 85       	ldd	r24, Y+9	; 0x09
     99e:	9a 85       	ldd	r25, Y+10	; 0x0a
     9a0:	01 97       	sbiw	r24, 0x01	; 1
     9a2:	9a 87       	std	Y+10, r25	; 0x0a
     9a4:	89 87       	std	Y+9, r24	; 0x09

000009a6 <.L72>:
		while(__ticks)
     9a6:	89 85       	ldd	r24, Y+9	; 0x09
     9a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     9aa:	00 97       	sbiw	r24, 0x00	; 0
     9ac:	61 f7       	brne	.-40     	; 0x986 <.L73>

000009ae <.Loc.109>:
		return;
     9ae:	19 c0       	rjmp	.+50     	; 0x9e2 <.L74>

000009b0 <.L78>:
		__ticks = (uint16_t)__tmp;
     9b0:	6d 81       	ldd	r22, Y+5	; 0x05
     9b2:	7e 81       	ldd	r23, Y+6	; 0x06
     9b4:	8f 81       	ldd	r24, Y+7	; 0x07
     9b6:	98 85       	ldd	r25, Y+8	; 0x08
     9b8:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     9bc:	6f 8f       	std	Y+31, r22	; 0x1f
     9be:	78 a3       	std	Y+32, r23	; 0x20
     9c0:	89 a3       	std	Y+33, r24	; 0x21
     9c2:	9a a3       	std	Y+34, r25	; 0x22
     9c4:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9c6:	98 a1       	ldd	r25, Y+32	; 0x20
     9c8:	9a 87       	std	Y+10, r25	; 0x0a
     9ca:	89 87       	std	Y+9, r24	; 0x09

000009cc <.L69>:
     9cc:	89 85       	ldd	r24, Y+9	; 0x09
     9ce:	9a 85       	ldd	r25, Y+10	; 0x0a
     9d0:	9e 87       	std	Y+14, r25	; 0x0e
     9d2:	8d 87       	std	Y+13, r24	; 0x0d

000009d4 <.LBB76>:
     9d4:	8d 85       	ldd	r24, Y+13	; 0x0d
     9d6:	9e 85       	ldd	r25, Y+14	; 0x0e

000009d8 <.L1^B12>:
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <.L1^B12>
     9dc:	9e 87       	std	Y+14, r25	; 0x0e
     9de:	8d 87       	std	Y+13, r24	; 0x0d

000009e0 <.Loc.112>:
	...

000009e2 <.L74>:
    _delay_ms(100);
}
     9e2:	00 00       	nop
     9e4:	a2 96       	adiw	r28, 0x22	; 34
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	f8 94       	cli
     9ea:	de bf       	out	0x3e, r29	; 62
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	cd bf       	out	0x3d, r28	; 61
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	08 95       	ret

000009f6 <init_motors>:

void init_motors(void)
{
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	cd b7       	in	r28, 0x3d	; 61
     9fc:	de b7       	in	r29, 0x3e	; 62

000009fe <.Loc.115>:
    DDRL |= (1 << IN1) | (1 << IN2);
     9fe:	8a e0       	ldi	r24, 0x0A	; 10
     a00:	91 e0       	ldi	r25, 0x01	; 1
     a02:	fc 01       	movw	r30, r24
     a04:	20 81       	ld	r18, Z
     a06:	8a e0       	ldi	r24, 0x0A	; 10
     a08:	91 e0       	ldi	r25, 0x01	; 1

00000a0a <.Loc.116>:
     a0a:	25 60       	ori	r18, 0x05	; 5
     a0c:	fc 01       	movw	r30, r24
     a0e:	20 83       	st	Z, r18

00000a10 <.Loc.117>:
    DDRB |= (1 << IN3) | (1 << IN4);
     a10:	84 e2       	ldi	r24, 0x24	; 36
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	fc 01       	movw	r30, r24
     a16:	20 81       	ld	r18, Z
     a18:	84 e2       	ldi	r24, 0x24	; 36
     a1a:	90 e0       	ldi	r25, 0x00	; 0

00000a1c <.Loc.118>:
     a1c:	25 60       	ori	r18, 0x05	; 5
     a1e:	fc 01       	movw	r30, r24
     a20:	20 83       	st	Z, r18

00000a22 <.Loc.119>:

    DDRH |= (1 << EN_A);
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	91 e0       	ldi	r25, 0x01	; 1
     a26:	fc 01       	movw	r30, r24
     a28:	20 81       	ld	r18, Z
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	91 e0       	ldi	r25, 0x01	; 1

00000a2e <.Loc.120>:
     a2e:	20 64       	ori	r18, 0x40	; 64
     a30:	fc 01       	movw	r30, r24
     a32:	20 83       	st	Z, r18

00000a34 <.Loc.121>:
    DDRE |= (1 << EN_B);
     a34:	8d e2       	ldi	r24, 0x2D	; 45
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	fc 01       	movw	r30, r24
     a3a:	20 81       	ld	r18, Z
     a3c:	8d e2       	ldi	r24, 0x2D	; 45
     a3e:	90 e0       	ldi	r25, 0x00	; 0

00000a40 <.Loc.122>:
     a40:	28 60       	ori	r18, 0x08	; 8
     a42:	fc 01       	movw	r30, r24
     a44:	20 83       	st	Z, r18

00000a46 <.Loc.123>:

    TCCR2A |= (1 << WGM20) | (1 << WGM21);
     a46:	80 eb       	ldi	r24, 0xB0	; 176
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	fc 01       	movw	r30, r24
     a4c:	20 81       	ld	r18, Z
     a4e:	80 eb       	ldi	r24, 0xB0	; 176
     a50:	90 e0       	ldi	r25, 0x00	; 0

00000a52 <.Loc.124>:
     a52:	23 60       	ori	r18, 0x03	; 3
     a54:	fc 01       	movw	r30, r24
     a56:	20 83       	st	Z, r18

00000a58 <.Loc.125>:
    TCCR2A |= (1 << COM2B1);
     a58:	80 eb       	ldi	r24, 0xB0	; 176
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	fc 01       	movw	r30, r24
     a5e:	20 81       	ld	r18, Z
     a60:	80 eb       	ldi	r24, 0xB0	; 176
     a62:	90 e0       	ldi	r25, 0x00	; 0

00000a64 <.Loc.126>:
     a64:	20 62       	ori	r18, 0x20	; 32
     a66:	fc 01       	movw	r30, r24
     a68:	20 83       	st	Z, r18

00000a6a <.Loc.127>:
    TCCR2B |= (1 << CS21);
     a6a:	81 eb       	ldi	r24, 0xB1	; 177
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	fc 01       	movw	r30, r24
     a70:	20 81       	ld	r18, Z
     a72:	81 eb       	ldi	r24, 0xB1	; 177
     a74:	90 e0       	ldi	r25, 0x00	; 0

00000a76 <.Loc.128>:
     a76:	22 60       	ori	r18, 0x02	; 2
     a78:	fc 01       	movw	r30, r24
     a7a:	20 83       	st	Z, r18

00000a7c <.Loc.129>:

    TCCR3A |= (1 << WGM30) | (1 << WGM32);
     a7c:	80 e9       	ldi	r24, 0x90	; 144
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	fc 01       	movw	r30, r24
     a82:	20 81       	ld	r18, Z
     a84:	80 e9       	ldi	r24, 0x90	; 144
     a86:	90 e0       	ldi	r25, 0x00	; 0

00000a88 <.Loc.130>:
     a88:	29 60       	ori	r18, 0x09	; 9
     a8a:	fc 01       	movw	r30, r24
     a8c:	20 83       	st	Z, r18

00000a8e <.Loc.131>:
    TCCR3A |= (1 << COM3A1);
     a8e:	80 e9       	ldi	r24, 0x90	; 144
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	fc 01       	movw	r30, r24
     a94:	20 81       	ld	r18, Z
     a96:	80 e9       	ldi	r24, 0x90	; 144
     a98:	90 e0       	ldi	r25, 0x00	; 0

00000a9a <.Loc.132>:
     a9a:	20 68       	ori	r18, 0x80	; 128
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 83       	st	Z, r18

00000aa0 <.Loc.133>:
    TCCR3B |= (1 << CS31);
     aa0:	81 e9       	ldi	r24, 0x91	; 145
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	fc 01       	movw	r30, r24
     aa6:	20 81       	ld	r18, Z
     aa8:	81 e9       	ldi	r24, 0x91	; 145
     aaa:	90 e0       	ldi	r25, 0x00	; 0

00000aac <.Loc.134>:
     aac:	22 60       	ori	r18, 0x02	; 2
     aae:	fc 01       	movw	r30, r24
     ab0:	20 83       	st	Z, r18

00000ab2 <.Loc.135>:

    OCR2B = 0;
     ab2:	84 eb       	ldi	r24, 0xB4	; 180
     ab4:	90 e0       	ldi	r25, 0x00	; 0

00000ab6 <.Loc.136>:
     ab6:	fc 01       	movw	r30, r24
     ab8:	10 82       	st	Z, r1

00000aba <.Loc.137>:
    OCR3A = 0;
     aba:	88 e9       	ldi	r24, 0x98	; 152
     abc:	90 e0       	ldi	r25, 0x00	; 0

00000abe <.Loc.138>:
     abe:	fc 01       	movw	r30, r24
     ac0:	11 82       	std	Z+1, r1	; 0x01
     ac2:	10 82       	st	Z, r1

00000ac4 <.Loc.139>:
}
     ac4:	00 00       	nop
     ac6:	df 91       	pop	r29
     ac8:	cf 91       	pop	r28
     aca:	08 95       	ret

00000acc <set_motor_speed>:

void set_motor_speed(uint8_t motor, uint8_t speed)
{
     acc:	cf 93       	push	r28
     ace:	df 93       	push	r29
     ad0:	0f 92       	push	r0
     ad2:	0f 92       	push	r0
     ad4:	cd b7       	in	r28, 0x3d	; 61
     ad6:	de b7       	in	r29, 0x3e	; 62
     ad8:	89 83       	std	Y+1, r24	; 0x01
     ada:	6a 83       	std	Y+2, r22	; 0x02

00000adc <.Loc.141>:
    if (motor == 1)
     adc:	89 81       	ldd	r24, Y+1	; 0x01
     ade:	81 30       	cpi	r24, 0x01	; 1
     ae0:	29 f4       	brne	.+10     	; 0xaec <.L81>

00000ae2 <.Loc.142>:
        {
            OCR2B = speed;
     ae2:	84 eb       	ldi	r24, 0xB4	; 180
     ae4:	90 e0       	ldi	r25, 0x00	; 0

00000ae6 <.Loc.143>:
     ae6:	2a 81       	ldd	r18, Y+2	; 0x02
     ae8:	fc 01       	movw	r30, r24
     aea:	20 83       	st	Z, r18

00000aec <.L81>:
        }
    if (motor == 2)
     aec:	89 81       	ldd	r24, Y+1	; 0x01
     aee:	82 30       	cpi	r24, 0x02	; 2
     af0:	41 f4       	brne	.+16     	; 0xb02 <.L83>

00000af2 <.Loc.145>:
        {
            OCR3A = speed;
     af2:	88 e9       	ldi	r24, 0x98	; 152
     af4:	90 e0       	ldi	r25, 0x00	; 0

00000af6 <.Loc.146>:
     af6:	2a 81       	ldd	r18, Y+2	; 0x02
     af8:	22 2f       	mov	r18, r18
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	fc 01       	movw	r30, r24
     afe:	31 83       	std	Z+1, r19	; 0x01
     b00:	20 83       	st	Z, r18

00000b02 <.L83>:
        }
}
     b02:	00 00       	nop
     b04:	0f 90       	pop	r0
     b06:	0f 90       	pop	r0
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <set_motor_direction>:

void set_motor_direction(uint8_t motor, uint8_t direction)
{
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	0f 92       	push	r0
     b14:	0f 92       	push	r0
     b16:	cd b7       	in	r28, 0x3d	; 61
     b18:	de b7       	in	r29, 0x3e	; 62
     b1a:	89 83       	std	Y+1, r24	; 0x01
     b1c:	6a 83       	std	Y+2, r22	; 0x02

00000b1e <.Loc.149>:
    if (motor == 1)
     b1e:	89 81       	ldd	r24, Y+1	; 0x01
     b20:	81 30       	cpi	r24, 0x01	; 1
     b22:	b1 f4       	brne	.+44     	; 0xb50 <.L85>

00000b24 <.Loc.150>:
    {
        if (direction == 1)
     b24:	8a 81       	ldd	r24, Y+2	; 0x02
     b26:	81 30       	cpi	r24, 0x01	; 1
     b28:	59 f5       	brne	.+86     	; 0xb80 <.L87>

00000b2a <.Loc.151>:
        {
            PORTL |= (1 << IN1);
     b2a:	8b e0       	ldi	r24, 0x0B	; 11
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	fc 01       	movw	r30, r24
     b30:	20 81       	ld	r18, Z
     b32:	8b e0       	ldi	r24, 0x0B	; 11
     b34:	91 e0       	ldi	r25, 0x01	; 1

00000b36 <.Loc.152>:
     b36:	24 60       	ori	r18, 0x04	; 4
     b38:	fc 01       	movw	r30, r24
     b3a:	20 83       	st	Z, r18

00000b3c <.Loc.153>:
            PORTL &= ~(1 << IN2);
     b3c:	8b e0       	ldi	r24, 0x0B	; 11
     b3e:	91 e0       	ldi	r25, 0x01	; 1
     b40:	fc 01       	movw	r30, r24
     b42:	20 81       	ld	r18, Z

00000b44 <.Loc.154>:
     b44:	8b e0       	ldi	r24, 0x0B	; 11
     b46:	91 e0       	ldi	r25, 0x01	; 1

00000b48 <.Loc.155>:
     b48:	2e 7f       	andi	r18, 0xFE	; 254
     b4a:	fc 01       	movw	r30, r24
     b4c:	20 83       	st	Z, r18

00000b4e <.Loc.156>:
        {
            PORTB |= (1 << IN3);
            PORTB &= ~(1 << IN4);
        }
    }
}
     b4e:	18 c0       	rjmp	.+48     	; 0xb80 <.L87>

00000b50 <.L85>:
    else if (motor == 2)
     b50:	89 81       	ldd	r24, Y+1	; 0x01
     b52:	82 30       	cpi	r24, 0x02	; 2
     b54:	a9 f4       	brne	.+42     	; 0xb80 <.L87>

00000b56 <.Loc.158>:
        if (direction == 1)
     b56:	8a 81       	ldd	r24, Y+2	; 0x02
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	91 f4       	brne	.+36     	; 0xb80 <.L87>

00000b5c <.Loc.159>:
            PORTB |= (1 << IN3);
     b5c:	85 e2       	ldi	r24, 0x25	; 37
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	fc 01       	movw	r30, r24
     b62:	20 81       	ld	r18, Z
     b64:	85 e2       	ldi	r24, 0x25	; 37
     b66:	90 e0       	ldi	r25, 0x00	; 0

00000b68 <.Loc.160>:
     b68:	24 60       	ori	r18, 0x04	; 4
     b6a:	fc 01       	movw	r30, r24
     b6c:	20 83       	st	Z, r18

00000b6e <.Loc.161>:
            PORTB &= ~(1 << IN4);
     b6e:	85 e2       	ldi	r24, 0x25	; 37
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	fc 01       	movw	r30, r24
     b74:	20 81       	ld	r18, Z

00000b76 <.Loc.162>:
     b76:	85 e2       	ldi	r24, 0x25	; 37
     b78:	90 e0       	ldi	r25, 0x00	; 0

00000b7a <.Loc.163>:
     b7a:	2e 7f       	andi	r18, 0xFE	; 254
     b7c:	fc 01       	movw	r30, r24
     b7e:	20 83       	st	Z, r18

00000b80 <.L87>:
}
     b80:	00 00       	nop
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	df 91       	pop	r29
     b88:	cf 91       	pop	r28
     b8a:	08 95       	ret

00000b8c <initm>:

void initm(void)
{
     b8c:	cf 93       	push	r28
     b8e:	df 93       	push	r29
     b90:	cd b7       	in	r28, 0x3d	; 61
     b92:	de b7       	in	r29, 0x3e	; 62

00000b94 <.Loc.166>:
    set_motor_direction(1, 1);
     b94:	61 e0       	ldi	r22, 0x01	; 1
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	0e 94 87 05 	call	0xb0e	; 0xb0e <set_motor_direction>

00000b9c <.Loc.167>:
    set_motor_direction(2, 1);
     b9c:	61 e0       	ldi	r22, 0x01	; 1
     b9e:	82 e0       	ldi	r24, 0x02	; 2
     ba0:	0e 94 87 05 	call	0xb0e	; 0xb0e <set_motor_direction>

00000ba4 <.Loc.168>:
}
     ba4:	00 00       	nop
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	08 95       	ret

00000bac <init_infrared>:
#include <avr/io.h>
#include "infrared.h"

void init_infrared(void)
{
     bac:	cf 93       	push	r28
     bae:	df 93       	push	r29
     bb0:	cd b7       	in	r28, 0x3d	; 61
     bb2:	de b7       	in	r29, 0x3e	; 62

00000bb4 <.Loc.1>:
    DDRF &= ~(1 << INFRARED_PIN); // Set as input
     bb4:	80 e3       	ldi	r24, 0x30	; 48
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	fc 01       	movw	r30, r24
     bba:	20 81       	ld	r18, Z

00000bbc <.Loc.2>:
     bbc:	80 e3       	ldi	r24, 0x30	; 48
     bbe:	90 e0       	ldi	r25, 0x00	; 0

00000bc0 <.Loc.3>:
     bc0:	2f 7d       	andi	r18, 0xDF	; 223
     bc2:	fc 01       	movw	r30, r24
     bc4:	20 83       	st	Z, r18

00000bc6 <.Loc.4>:
    DDRF &= ~(1 << INFRARED2_PIN);
     bc6:	80 e3       	ldi	r24, 0x30	; 48
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	fc 01       	movw	r30, r24
     bcc:	20 81       	ld	r18, Z

00000bce <.Loc.5>:
     bce:	80 e3       	ldi	r24, 0x30	; 48
     bd0:	90 e0       	ldi	r25, 0x00	; 0

00000bd2 <.Loc.6>:
     bd2:	2f 7b       	andi	r18, 0xBF	; 191
     bd4:	fc 01       	movw	r30, r24
     bd6:	20 83       	st	Z, r18

00000bd8 <.Loc.7>:
}
     bd8:	00 00       	nop
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	08 95       	ret

00000be0 <read_ir_left>:

int read_ir_left(void)
{
     be0:	cf 93       	push	r28
     be2:	df 93       	push	r29
     be4:	cd b7       	in	r28, 0x3d	; 61
     be6:	de b7       	in	r29, 0x3e	; 62

00000be8 <.Loc.9>:
    return (PINF & (1 << INFRARED_PIN)) == 0;
     be8:	8f e2       	ldi	r24, 0x2F	; 47
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	fc 01       	movw	r30, r24
     bee:	80 81       	ld	r24, Z

00000bf0 <.Loc.10>:
     bf0:	88 2f       	mov	r24, r24
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	80 72       	andi	r24, 0x20	; 32
     bf6:	99 27       	eor	r25, r25

00000bf8 <.Loc.11>:
     bf8:	21 e0       	ldi	r18, 0x01	; 1
     bfa:	00 97       	sbiw	r24, 0x00	; 0
     bfc:	09 f0       	breq	.+2      	; 0xc00 <.L3>
     bfe:	20 e0       	ldi	r18, 0x00	; 0

00000c00 <.L3>:
     c00:	82 2f       	mov	r24, r18
     c02:	90 e0       	ldi	r25, 0x00	; 0

00000c04 <.Loc.12>:
}
     c04:	df 91       	pop	r29
     c06:	cf 91       	pop	r28
     c08:	08 95       	ret

00000c0a <read_ir_right>:
int read_ir_right(void)
{
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	cd b7       	in	r28, 0x3d	; 61
     c10:	de b7       	in	r29, 0x3e	; 62

00000c12 <.Loc.14>:
    return (PINF & (1 << INFRARED2_PIN)) == 0;
     c12:	8f e2       	ldi	r24, 0x2F	; 47
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	fc 01       	movw	r30, r24
     c18:	80 81       	ld	r24, Z

00000c1a <.Loc.15>:
     c1a:	88 2f       	mov	r24, r24
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	80 74       	andi	r24, 0x40	; 64
     c20:	99 27       	eor	r25, r25

00000c22 <.Loc.16>:
     c22:	21 e0       	ldi	r18, 0x01	; 1
     c24:	00 97       	sbiw	r24, 0x00	; 0
     c26:	09 f0       	breq	.+2      	; 0xc2a <.L6>
     c28:	20 e0       	ldi	r18, 0x00	; 0

00000c2a <.L6>:
     c2a:	82 2f       	mov	r24, r18
     c2c:	90 e0       	ldi	r25, 0x00	; 0

00000c2e <.Loc.17>:
}
     c2e:	df 91       	pop	r29
     c30:	cf 91       	pop	r28
     c32:	08 95       	ret

00000c34 <init>:
volatile uint16_t ir_right_detected_flag = 0;
volatile uint16_t path_exit_flag = 0;
volatile uint16_t agv_can_go = 1; // Initialize to 1 to allow AGV to move initially

// Initialize system
void init(void) {
     c34:	cf 93       	push	r28
     c36:	df 93       	push	r29
     c38:	cd b7       	in	r28, 0x3d	; 61
     c3a:	de b7       	in	r29, 0x3e	; 62

00000c3c <.Loc.1>:
    // Initialize peripherals
    initm();
     c3c:	0e 94 c6 05 	call	0xb8c	; 0xb8c <initm>

00000c40 <.Loc.2>:
    init_motors();
     c40:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <init_motors>

00000c44 <.Loc.3>:
    init_infrared();
     c44:	0e 94 d6 05 	call	0xbac	; 0xbac <init_infrared>

00000c48 <.Loc.4>:
    init_ultrasonics();
     c48:	0e 94 67 0e 	call	0x1cce	; 0x1cce <init_ultrasonics>

00000c4c <.Loc.5>:
    init_timer_buzzer();
     c4c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <init_timer_buzzer>

00000c50 <.Loc.6>:

    // Initialize Timer0 for ultrasonic delay and cool-down
    TCCR0A = (1 << WGM01); // CTC mode
     c50:	84 e4       	ldi	r24, 0x44	; 68
     c52:	90 e0       	ldi	r25, 0x00	; 0

00000c54 <.Loc.7>:
     c54:	22 e0       	ldi	r18, 0x02	; 2
     c56:	fc 01       	movw	r30, r24
     c58:	20 83       	st	Z, r18

00000c5a <.Loc.8>:
    TCCR0B = (1 << CS02) | (1 << CS00); // Prescaler 1024
     c5a:	85 e4       	ldi	r24, 0x45	; 69
     c5c:	90 e0       	ldi	r25, 0x00	; 0

00000c5e <.Loc.9>:
     c5e:	25 e0       	ldi	r18, 0x05	; 5
     c60:	fc 01       	movw	r30, r24
     c62:	20 83       	st	Z, r18

00000c64 <.Loc.10>:
    OCR0A = 156; // 10ms interval (16000000/1024/100)
     c64:	87 e4       	ldi	r24, 0x47	; 71
     c66:	90 e0       	ldi	r25, 0x00	; 0

00000c68 <.Loc.11>:
     c68:	2c e9       	ldi	r18, 0x9C	; 156
     c6a:	fc 01       	movw	r30, r24
     c6c:	20 83       	st	Z, r18

00000c6e <.Loc.12>:
    TIMSK0 |= (1 << OCIE0A); // Enable Timer0 compare match A interrupt
     c6e:	8e e6       	ldi	r24, 0x6E	; 110
     c70:	90 e0       	ldi	r25, 0x00	; 0
     c72:	fc 01       	movw	r30, r24
     c74:	20 81       	ld	r18, Z
     c76:	8e e6       	ldi	r24, 0x6E	; 110
     c78:	90 e0       	ldi	r25, 0x00	; 0

00000c7a <.Loc.13>:
     c7a:	22 60       	ori	r18, 0x02	; 2
     c7c:	fc 01       	movw	r30, r24
     c7e:	20 83       	st	Z, r18

00000c80 <.Loc.14>:

    sei(); // Enable global interrupts
     c80:	78 94       	sei

00000c82 <.Loc.15>:
    init_buzzer(); // Initialize the buzzer
     c82:	0e 94 95 00 	call	0x12a	; 0x12a <init_buzzer>

00000c86 <.Loc.16>:
    buzzer_uit();  // Ensure the buzzer is off
     c86:	0e 94 c0 00 	call	0x180	; 0x180 <buzzer_uit>

00000c8a <.Loc.17>:
}
     c8a:	00 00       	nop
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	08 95       	ret

00000c92 <__vector_21>:

// Timer0 compare match interrupt service routine
ISR(TIMER0_COMPA_vect) {
     c92:	1f 92       	push	r1
     c94:	0f 92       	push	r0
     c96:	0f b6       	in	r0, 0x3f	; 63
     c98:	0f 92       	push	r0
     c9a:	11 24       	eor	r1, r1
     c9c:	0b b6       	in	r0, 0x3b	; 59
     c9e:	0f 92       	push	r0
     ca0:	2f 93       	push	r18
     ca2:	3f 93       	push	r19
     ca4:	4f 93       	push	r20
     ca6:	5f 93       	push	r21
     ca8:	6f 93       	push	r22
     caa:	7f 93       	push	r23
     cac:	8f 93       	push	r24
     cae:	9f 93       	push	r25
     cb0:	af 93       	push	r26
     cb2:	bf 93       	push	r27
     cb4:	ef 93       	push	r30
     cb6:	ff 93       	push	r31
     cb8:	cf 93       	push	r28
     cba:	df 93       	push	r29
     cbc:	cd b7       	in	r28, 0x3d	; 61
     cbe:	de b7       	in	r29, 0x3e	; 62

00000cc0 <.Loc.19>:
    static uint8_t tick_count = 0;

    if (boom_detected_flag) {
     cc0:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

00000cc4 <.Loc.20>:
     cc4:	88 23       	and	r24, r24
     cc6:	41 f1       	breq	.+80     	; 0xd18 <.L3>

00000cc8 <.Loc.21>:
        tick_count++;
     cc8:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <tick_count.0>
     ccc:	8f 5f       	subi	r24, 0xFF	; 255
     cce:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <tick_count.0>

00000cd2 <.Loc.22>:

        if (tick_count % 75 == 0) { // Toggle buzzer every 750ms
     cd2:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <tick_count.0>
     cd6:	8b ed       	ldi	r24, 0xDB	; 219
     cd8:	98 9f       	mul	r25, r24
     cda:	81 2d       	mov	r24, r1
     cdc:	11 24       	eor	r1, r1
     cde:	82 95       	swap	r24
     ce0:	86 95       	lsr	r24
     ce2:	86 95       	lsr	r24
     ce4:	83 70       	andi	r24, 0x03	; 3
     ce6:	2b e4       	ldi	r18, 0x4B	; 75
     ce8:	82 9f       	mul	r24, r18
     cea:	80 2d       	mov	r24, r0
     cec:	11 24       	eor	r1, r1
     cee:	29 2f       	mov	r18, r25
     cf0:	28 1b       	sub	r18, r24
     cf2:	82 2f       	mov	r24, r18

00000cf4 <.Loc.23>:
     cf4:	88 23       	and	r24, r24
     cf6:	11 f4       	brne	.+4      	; 0xcfc <.L4>

00000cf8 <.Loc.24>:
            buzzer_toggle();
     cf8:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <buzzer_toggle>

00000cfc <.L4>:
        }

        if (tick_count >= 150) { // 1.5 seconds
     cfc:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <tick_count.0>

00000d00 <.Loc.26>:
     d00:	85 39       	cpi	r24, 0x95	; 149
     d02:	51 f0       	breq	.+20     	; 0xd18 <.L3>
     d04:	48 f0       	brcs	.+18     	; 0xd18 <.L3>

00000d06 <.Loc.27>:
            boom_detected_flag = 0;
     d06:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <boom_detected_flag>

00000d0a <.Loc.28>:
            cool_down_flag = 1;
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <cool_down_flag>

00000d10 <.Loc.29>:
            tick_count = 0;
     d10:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <tick_count.0>

00000d14 <.Loc.30>:
            buzzer_uit();
     d14:	0e 94 c0 00 	call	0x180	; 0x180 <buzzer_uit>

00000d18 <.L3>:
        }
    }

    if (cool_down_flag) {
     d18:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <cool_down_flag>

00000d1c <.Loc.32>:
     d1c:	88 23       	and	r24, r24
     d1e:	f9 f0       	breq	.+62     	; 0xd5e <.L6>

00000d20 <.Loc.33>:
        cool_down_counter++;
     d20:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <cool_down_counter>
     d24:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <cool_down_counter+0x1>
     d28:	01 96       	adiw	r24, 0x01	; 1
     d2a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <cool_down_counter+0x1>
     d2e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <cool_down_counter>

00000d32 <.Loc.34>:
        if (cool_down_counter >= 75) { // Cool-down period of 1.5 seconds
     d32:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <cool_down_counter>
     d36:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <cool_down_counter+0x1>

00000d3a <.Loc.35>:
     d3a:	8a 34       	cpi	r24, 0x4A	; 74
     d3c:	91 05       	cpc	r25, r1
     d3e:	79 f0       	breq	.+30     	; 0xd5e <.L6>
     d40:	70 f0       	brcs	.+28     	; 0xd5e <.L6>

00000d42 <.LBB38>:
            cool_down_flag = 0;
     d42:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <cool_down_flag>

00000d46 <.Loc.37>:
            cool_down_counter = 0;
     d46:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <cool_down_counter+0x1>
     d4a:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <cool_down_counter>

00000d4e <.Loc.38>:
            disable_timer0();
     d4e:	0e 94 c5 06 	call	0xd8a	; 0xd8a <disable_timer0>

00000d52 <.Loc.39>:
            agv_can_go = 1;
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <agv_can_go+0x1>
     d5a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_can_go>

00000d5e <.L6>:
        }
    }
}
     d5e:	00 00       	nop
     d60:	df 91       	pop	r29
     d62:	cf 91       	pop	r28
     d64:	ff 91       	pop	r31
     d66:	ef 91       	pop	r30
     d68:	bf 91       	pop	r27
     d6a:	af 91       	pop	r26
     d6c:	9f 91       	pop	r25
     d6e:	8f 91       	pop	r24
     d70:	7f 91       	pop	r23
     d72:	6f 91       	pop	r22
     d74:	5f 91       	pop	r21
     d76:	4f 91       	pop	r20
     d78:	3f 91       	pop	r19
     d7a:	2f 91       	pop	r18
     d7c:	0f 90       	pop	r0
     d7e:	0b be       	out	0x3b, r0	; 59
     d80:	0f 90       	pop	r0
     d82:	0f be       	out	0x3f, r0	; 63
     d84:	0f 90       	pop	r0
     d86:	1f 90       	pop	r1
     d88:	18 95       	reti

00000d8a <disable_timer0>:

void disable_timer0() {
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	cd b7       	in	r28, 0x3d	; 61
     d90:	de b7       	in	r29, 0x3e	; 62

00000d92 <.Loc.42>:
    // Clear the Clock Select bits to stop the timer
    TCCR0B &= ~((1 << CS02) | (1 << CS01) | (1 << CS00));
     d92:	85 e4       	ldi	r24, 0x45	; 69
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	fc 01       	movw	r30, r24
     d98:	20 81       	ld	r18, Z

00000d9a <.Loc.43>:
     d9a:	85 e4       	ldi	r24, 0x45	; 69
     d9c:	90 e0       	ldi	r25, 0x00	; 0

00000d9e <.Loc.44>:
     d9e:	28 7f       	andi	r18, 0xF8	; 248
     da0:	fc 01       	movw	r30, r24
     da2:	20 83       	st	Z, r18

00000da4 <.Loc.45>:

    // Disable Timer0 interrupts
    //TIMSK0 &= ~((1 << OCIE0A));
}
     da4:	00 00       	nop
     da6:	df 91       	pop	r29
     da8:	cf 91       	pop	r28
     daa:	08 95       	ret

00000dac <main>:

int main(void) {
     dac:	0f 93       	push	r16
     dae:	1f 93       	push	r17
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
     db4:	cd b7       	in	r28, 0x3d	; 61
     db6:	de b7       	in	r29, 0x3e	; 62
     db8:	ca 5c       	subi	r28, 0xCA	; 202
     dba:	d1 09       	sbc	r29, r1
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	f8 94       	cli
     dc0:	de bf       	out	0x3e, r29	; 62
     dc2:	0f be       	out	0x3f, r0	; 63
     dc4:	cd bf       	out	0x3d, r28	; 61

00000dc6 <.Loc.47>:
    init();
     dc6:	0e 94 1a 06 	call	0xc34	; 0xc34 <init>

00000dca <.L61>:
    uint16_t distance1, distance2, distance3;

    while (1) {
        distance1 = measure_distance1();
     dca:	0e 94 c0 0e 	call	0x1d80	; 0x1d80 <measure_distance1>
     dce:	63 96       	adiw	r28, 0x13	; 19
     dd0:	6c af       	std	Y+60, r22	; 0x3c
     dd2:	7d af       	std	Y+61, r23	; 0x3d
     dd4:	8e af       	std	Y+62, r24	; 0x3e
     dd6:	9f af       	std	Y+63, r25	; 0x3f
     dd8:	63 97       	sbiw	r28, 0x13	; 19

00000dda <.Loc.49>:
     dda:	63 96       	adiw	r28, 0x13	; 19
     ddc:	6c ad       	ldd	r22, Y+60	; 0x3c
     dde:	7d ad       	ldd	r23, Y+61	; 0x3d
     de0:	8e ad       	ldd	r24, Y+62	; 0x3e
     de2:	9f ad       	ldd	r25, Y+63	; 0x3f
     de4:	63 97       	sbiw	r28, 0x13	; 19
     de6:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     dea:	e3 96       	adiw	r28, 0x33	; 51
     dec:	6c af       	std	Y+60, r22	; 0x3c
     dee:	7d af       	std	Y+61, r23	; 0x3d
     df0:	8e af       	std	Y+62, r24	; 0x3e
     df2:	9f af       	std	Y+63, r25	; 0x3f
     df4:	e3 97       	sbiw	r28, 0x33	; 51
     df6:	e1 96       	adiw	r28, 0x31	; 49
     df8:	8e ad       	ldd	r24, Y+62	; 0x3e
     dfa:	9f ad       	ldd	r25, Y+63	; 0x3f
     dfc:	e1 97       	sbiw	r28, 0x31	; 49
     dfe:	9c 83       	std	Y+4, r25	; 0x04
     e00:	8b 83       	std	Y+3, r24	; 0x03

00000e02 <.Loc.50>:
        distance2 = measure_distance2();
     e02:	0e 94 c4 10 	call	0x2188	; 0x2188 <measure_distance2>
     e06:	67 96       	adiw	r28, 0x17	; 23
     e08:	6c af       	std	Y+60, r22	; 0x3c
     e0a:	7d af       	std	Y+61, r23	; 0x3d
     e0c:	8e af       	std	Y+62, r24	; 0x3e
     e0e:	9f af       	std	Y+63, r25	; 0x3f
     e10:	67 97       	sbiw	r28, 0x17	; 23

00000e12 <.Loc.51>:
     e12:	67 96       	adiw	r28, 0x17	; 23
     e14:	6c ad       	ldd	r22, Y+60	; 0x3c
     e16:	7d ad       	ldd	r23, Y+61	; 0x3d
     e18:	8e ad       	ldd	r24, Y+62	; 0x3e
     e1a:	9f ad       	ldd	r25, Y+63	; 0x3f
     e1c:	67 97       	sbiw	r28, 0x17	; 23
     e1e:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     e22:	e7 96       	adiw	r28, 0x37	; 55
     e24:	6c af       	std	Y+60, r22	; 0x3c
     e26:	7d af       	std	Y+61, r23	; 0x3d
     e28:	8e af       	std	Y+62, r24	; 0x3e
     e2a:	9f af       	std	Y+63, r25	; 0x3f
     e2c:	e7 97       	sbiw	r28, 0x37	; 55
     e2e:	e5 96       	adiw	r28, 0x35	; 53
     e30:	ae ad       	ldd	r26, Y+62	; 0x3e
     e32:	bf ad       	ldd	r27, Y+63	; 0x3f
     e34:	e5 97       	sbiw	r28, 0x35	; 53
     e36:	be 83       	std	Y+6, r27	; 0x06
     e38:	ad 83       	std	Y+5, r26	; 0x05

00000e3a <.Loc.52>:
        distance3 = measure_distance3();
     e3a:	0e 94 c8 12 	call	0x2590	; 0x2590 <measure_distance3>
     e3e:	6b 96       	adiw	r28, 0x1b	; 27
     e40:	6c af       	std	Y+60, r22	; 0x3c
     e42:	7d af       	std	Y+61, r23	; 0x3d
     e44:	8e af       	std	Y+62, r24	; 0x3e
     e46:	9f af       	std	Y+63, r25	; 0x3f
     e48:	6b 97       	sbiw	r28, 0x1b	; 27

00000e4a <.Loc.53>:
     e4a:	6b 96       	adiw	r28, 0x1b	; 27
     e4c:	6c ad       	ldd	r22, Y+60	; 0x3c
     e4e:	7d ad       	ldd	r23, Y+61	; 0x3d
     e50:	8e ad       	ldd	r24, Y+62	; 0x3e
     e52:	9f ad       	ldd	r25, Y+63	; 0x3f
     e54:	6b 97       	sbiw	r28, 0x1b	; 27
     e56:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
     e5a:	eb 96       	adiw	r28, 0x3b	; 59
     e5c:	6c af       	std	Y+60, r22	; 0x3c
     e5e:	7d af       	std	Y+61, r23	; 0x3d
     e60:	8e af       	std	Y+62, r24	; 0x3e
     e62:	9f af       	std	Y+63, r25	; 0x3f
     e64:	eb 97       	sbiw	r28, 0x3b	; 59
     e66:	e9 96       	adiw	r28, 0x39	; 57
     e68:	ee ad       	ldd	r30, Y+62	; 0x3e
     e6a:	ff ad       	ldd	r31, Y+63	; 0x3f
     e6c:	e9 97       	sbiw	r28, 0x39	; 57
     e6e:	f8 87       	std	Y+8, r31	; 0x08
     e70:	ef 83       	std	Y+7, r30	; 0x07

00000e72 <.Loc.54>:
        // IR Sensor readings and path correction
        ir_left_detected_flag = read_ir_left(); // Function to read left IR sensor
     e72:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <read_ir_left>

00000e76 <.Loc.55>:
     e76:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <ir_left_detected_flag+0x1>
     e7a:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <ir_left_detected_flag>

00000e7e <.Loc.56>:
        ir_right_detected_flag = read_ir_right(); // Function to read right IR sensor
     e7e:	0e 94 05 06 	call	0xc0a	; 0xc0a <read_ir_right>

00000e82 <.Loc.57>:
     e82:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <ir_right_detected_flag+0x1>
     e86:	80 93 0a 02 	sts	0x020A, r24	; 0x80020a <ir_right_detected_flag>

00000e8a <.Loc.58>:

        // Handle obstacle detected by distance1 or distance2 sensor
        if ((distance1 < 15 || distance2 < 15) && !cool_down_flag && !boom_detected_flag) {
     e8a:	8b 81       	ldd	r24, Y+3	; 0x03
     e8c:	9c 81       	ldd	r25, Y+4	; 0x04
     e8e:	8e 30       	cpi	r24, 0x0E	; 14
     e90:	91 05       	cpc	r25, r1
     e92:	39 f0       	breq	.+14     	; 0xea2 <.L9>
     e94:	30 f0       	brcs	.+12     	; 0xea2 <.L9>

00000e96 <.Loc.59>:
     e96:	8d 81       	ldd	r24, Y+5	; 0x05
     e98:	9e 81       	ldd	r25, Y+6	; 0x06
     e9a:	8e 30       	cpi	r24, 0x0E	; 14
     e9c:	91 05       	cpc	r25, r1
     e9e:	09 f0       	breq	.+2      	; 0xea2 <.L9>

00000ea0 <L0^A>:
     ea0:	d0 f4       	brcc	.+52     	; 0xed6 <.L10>

00000ea2 <.L9>:
     ea2:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <cool_down_flag>

00000ea6 <.Loc.61>:
     ea6:	88 23       	and	r24, r24
     ea8:	b1 f4       	brne	.+44     	; 0xed6 <.L10>

00000eaa <.Loc.62>:
     eaa:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

00000eae <.Loc.63>:
     eae:	88 23       	and	r24, r24
     eb0:	91 f4       	brne	.+36     	; 0xed6 <.L10>

00000eb2 <.Loc.64>:
            agv_stoppen();
     eb2:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <agv_stoppen>

00000eb6 <.Loc.65>:
            agv_can_go = 0;
     eb6:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <agv_can_go+0x1>
     eba:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <agv_can_go>

00000ebe <.Loc.66>:
            boom_detected_flag = 1;
     ebe:	81 e0       	ldi	r24, 0x01	; 1
     ec0:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <boom_detected_flag>

00000ec4 <.Loc.67>:
            TCCR0B |= (1 << CS02) | (1 << CS00); // Start Timer0
     ec4:	85 e4       	ldi	r24, 0x45	; 69
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	dc 01       	movw	r26, r24
     eca:	2c 91       	ld	r18, X
     ecc:	85 e4       	ldi	r24, 0x45	; 69
     ece:	90 e0       	ldi	r25, 0x00	; 0

00000ed0 <.Loc.68>:
     ed0:	25 60       	ori	r18, 0x05	; 5
     ed2:	fc 01       	movw	r30, r24
     ed4:	20 83       	st	Z, r18

00000ed6 <.L10>:
            //TIMSK0 |= ((1 << OCIE0A));
        }

        // Handle obstacle detected by distance3 sensor
        if (distance3 < 15) {
     ed6:	8f 81       	ldd	r24, Y+7	; 0x07
     ed8:	98 85       	ldd	r25, Y+8	; 0x08
     eda:	8e 30       	cpi	r24, 0x0E	; 14
     edc:	91 05       	cpc	r25, r1
     ede:	09 f0       	breq	.+2      	; 0xee2 <.Loc.70>

00000ee0 <L0^A>:
     ee0:	78 f4       	brcc	.+30     	; 0xf00 <.L11>

00000ee2 <.Loc.70>:
            agv_stoppen();
     ee2:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <agv_stoppen>

00000ee6 <.Loc.71>:
            agv_can_go = 0;
     ee6:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <agv_can_go+0x1>
     eea:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <agv_can_go>

00000eee <.Loc.72>:
            buzzer_uit();
     eee:	0e 94 c0 00 	call	0x180	; 0x180 <buzzer_uit>

00000ef2 <.Loc.73>:
            ultrason_obstacle_flag = 1;
     ef2:	81 e0       	ldi	r24, 0x01	; 1
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <ultrason_obstacle_flag+0x1>
     efa:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <ultrason_obstacle_flag>
     efe:	0a c0       	rjmp	.+20     	; 0xf14 <.L12>

00000f00 <.L11>:
        } else {
            ultrason_obstacle_flag = 0;
     f00:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <ultrason_obstacle_flag+0x1>
     f04:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <ultrason_obstacle_flag>

00000f08 <.Loc.75>:
            agv_can_go = 1;
     f08:	81 e0       	ldi	r24, 0x01	; 1
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <agv_can_go+0x1>
     f10:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_can_go>

00000f14 <.L12>:
        }

        // Warning signal for close obstacles detected by distance3
        if (distance3 < 30 && distance3 > 15) {
     f14:	8f 81       	ldd	r24, Y+7	; 0x07
     f16:	98 85       	ldd	r25, Y+8	; 0x08
     f18:	8d 31       	cpi	r24, 0x1D	; 29
     f1a:	91 05       	cpc	r25, r1
     f1c:	11 f0       	breq	.+4      	; 0xf22 <.Loc.77>

00000f1e <L0^A>:
     f1e:	08 f0       	brcs	.+2      	; 0xf22 <.Loc.77>

00000f20 <L0^A>:
     f20:	df c0       	rjmp	.+446    	; 0x10e0 <.L13>

00000f22 <.Loc.77>:
     f22:	8f 81       	ldd	r24, Y+7	; 0x07
     f24:	98 85       	ldd	r25, Y+8	; 0x08
     f26:	8f 30       	cpi	r24, 0x0F	; 15
     f28:	91 05       	cpc	r25, r1
     f2a:	09 f0       	breq	.+2      	; 0xf2e <L0^A>

00000f2c <L0^A>:
     f2c:	08 f4       	brcc	.+2      	; 0xf30 <.LBB40>

00000f2e <L0^A>:
     f2e:	d8 c0       	rjmp	.+432    	; 0x10e0 <.L13>

00000f30 <.LBB40>:
            for (int i = 0; i < 2; i++) {
     f30:	1a 82       	std	Y+2, r1	; 0x02
     f32:	19 82       	std	Y+1, r1	; 0x01

00000f34 <.Loc.79>:
     f34:	ce c0       	rjmp	.+412    	; 0x10d2 <.L14>

00000f36 <.L24>:
                if (TIFR4 & (1 << TOV4)) {
     f36:	89 e3       	ldi	r24, 0x39	; 57
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	dc 01       	movw	r26, r24
     f3c:	8c 91       	ld	r24, X

00000f3e <.Loc.81>:
     f3e:	88 2f       	mov	r24, r24
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	81 70       	andi	r24, 0x01	; 1
     f44:	99 27       	eor	r25, r25

00000f46 <.Loc.82>:
     f46:	00 97       	sbiw	r24, 0x00	; 0
     f48:	09 f4       	brne	.+2      	; 0xf4c <.Loc.83>

00000f4a <L0^A>:
     f4a:	be c0       	rjmp	.+380    	; 0x10c8 <.L15>

00000f4c <.Loc.83>:
                    TCNT4 = TCNT_INIT;
     f4c:	84 ea       	ldi	r24, 0xA4	; 164
     f4e:	90 e0       	ldi	r25, 0x00	; 0

00000f50 <.Loc.84>:
     f50:	20 e4       	ldi	r18, 0x40	; 64
     f52:	3c e0       	ldi	r19, 0x0C	; 12
     f54:	fc 01       	movw	r30, r24
     f56:	31 83       	std	Z+1, r19	; 0x01
     f58:	20 83       	st	Z, r18

00000f5a <.Loc.85>:
                    TIFR4 = (1 << TOV4);
     f5a:	89 e3       	ldi	r24, 0x39	; 57
     f5c:	90 e0       	ldi	r25, 0x00	; 0

00000f5e <.Loc.86>:
     f5e:	21 e0       	ldi	r18, 0x01	; 1
     f60:	dc 01       	movw	r26, r24
     f62:	2c 93       	st	X, r18

00000f64 <.Loc.87>:
                    buzzer_toggle();
     f64:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <buzzer_toggle>
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	a8 ec       	ldi	r26, 0xC8	; 200
     f6e:	b2 e4       	ldi	r27, 0x42	; 66
     f70:	89 87       	std	Y+9, r24	; 0x09
     f72:	9a 87       	std	Y+10, r25	; 0x0a
     f74:	ab 87       	std	Y+11, r26	; 0x0b
     f76:	bc 87       	std	Y+12, r27	; 0x0c

00000f78 <.LBB41>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     f78:	20 e0       	ldi	r18, 0x00	; 0
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	4a e7       	ldi	r20, 0x7A	; 122
     f7e:	55 e4       	ldi	r21, 0x45	; 69
     f80:	69 85       	ldd	r22, Y+9	; 0x09
     f82:	7a 85       	ldd	r23, Y+10	; 0x0a
     f84:	8b 85       	ldd	r24, Y+11	; 0x0b
     f86:	9c 85       	ldd	r25, Y+12	; 0x0c
     f88:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     f8c:	ef 96       	adiw	r28, 0x3f	; 63
     f8e:	6c af       	std	Y+60, r22	; 0x3c
     f90:	7d af       	std	Y+61, r23	; 0x3d
     f92:	8e af       	std	Y+62, r24	; 0x3e
     f94:	9f af       	std	Y+63, r25	; 0x3f
     f96:	ef 97       	sbiw	r28, 0x3f	; 63
     f98:	ef 96       	adiw	r28, 0x3f	; 63
     f9a:	8c ad       	ldd	r24, Y+60	; 0x3c
     f9c:	9d ad       	ldd	r25, Y+61	; 0x3d
     f9e:	ae ad       	ldd	r26, Y+62	; 0x3e
     fa0:	bf ad       	ldd	r27, Y+63	; 0x3f
     fa2:	ef 97       	sbiw	r28, 0x3f	; 63
     fa4:	8d 87       	std	Y+13, r24	; 0x0d
     fa6:	9e 87       	std	Y+14, r25	; 0x0e
     fa8:	af 87       	std	Y+15, r26	; 0x0f
     faa:	b8 8b       	std	Y+16, r27	; 0x10

00000fac <.Loc.89>:
	if (__tmp < 1.0)
     fac:	20 e0       	ldi	r18, 0x00	; 0
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	40 e8       	ldi	r20, 0x80	; 128
     fb2:	5f e3       	ldi	r21, 0x3F	; 63
     fb4:	6d 85       	ldd	r22, Y+13	; 0x0d
     fb6:	7e 85       	ldd	r23, Y+14	; 0x0e
     fb8:	8f 85       	ldd	r24, Y+15	; 0x0f
     fba:	98 89       	ldd	r25, Y+16	; 0x10
     fbc:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
     fc0:	88 23       	and	r24, r24
     fc2:	2c f4       	brge	.+10     	; 0xfce <.L72>

00000fc4 <.Loc.90>:
		__ticks = 1;
     fc4:	81 e0       	ldi	r24, 0x01	; 1
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	9a 8b       	std	Y+18, r25	; 0x12
     fca:	89 8b       	std	Y+17, r24	; 0x11
     fcc:	72 c0       	rjmp	.+228    	; 0x10b2 <.L18>

00000fce <.L72>:
	else if (__tmp > 65535)
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	3f ef       	ldi	r19, 0xFF	; 255
     fd2:	4f e7       	ldi	r20, 0x7F	; 127
     fd4:	57 e4       	ldi	r21, 0x47	; 71
     fd6:	6d 85       	ldd	r22, Y+13	; 0x0d
     fd8:	7e 85       	ldd	r23, Y+14	; 0x0e
     fda:	8f 85       	ldd	r24, Y+15	; 0x0f
     fdc:	98 89       	ldd	r25, Y+16	; 0x10
     fde:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
     fe2:	88 23       	and	r24, r24
     fe4:	09 f0       	breq	.+2      	; 0xfe8 <L0^A>

00000fe6 <L0^A>:
     fe6:	0c f4       	brge	.+2      	; 0xfea <.Loc.92>

00000fe8 <L0^A>:
     fe8:	4e c0       	rjmp	.+156    	; 0x1086 <.L73>

00000fea <.Loc.92>:
		__ticks = (uint16_t) (__ms * 10.0);
     fea:	20 e0       	ldi	r18, 0x00	; 0
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	40 e2       	ldi	r20, 0x20	; 32
     ff0:	51 e4       	ldi	r21, 0x41	; 65
     ff2:	69 85       	ldd	r22, Y+9	; 0x09
     ff4:	7a 85       	ldd	r23, Y+10	; 0x0a
     ff6:	8b 85       	ldd	r24, Y+11	; 0x0b
     ff8:	9c 85       	ldd	r25, Y+12	; 0x0c
     ffa:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
     ffe:	c1 58       	subi	r28, 0x81	; 129
    1000:	df 4f       	sbci	r29, 0xFF	; 255
    1002:	68 83       	st	Y, r22
    1004:	79 83       	std	Y+1, r23	; 0x01
    1006:	8a 83       	std	Y+2, r24	; 0x02
    1008:	9b 83       	std	Y+3, r25	; 0x03
    100a:	cf 57       	subi	r28, 0x7F	; 127
    100c:	d0 40       	sbci	r29, 0x00	; 0
    100e:	c1 58       	subi	r28, 0x81	; 129
    1010:	df 4f       	sbci	r29, 0xFF	; 255
    1012:	88 81       	ld	r24, Y
    1014:	99 81       	ldd	r25, Y+1	; 0x01
    1016:	aa 81       	ldd	r26, Y+2	; 0x02
    1018:	bb 81       	ldd	r27, Y+3	; 0x03
    101a:	cf 57       	subi	r28, 0x7F	; 127
    101c:	d0 40       	sbci	r29, 0x00	; 0
    101e:	6f 96       	adiw	r28, 0x1f	; 31
    1020:	8c af       	std	Y+60, r24	; 0x3c
    1022:	9d af       	std	Y+61, r25	; 0x3d
    1024:	ae af       	std	Y+62, r26	; 0x3e
    1026:	bf af       	std	Y+63, r27	; 0x3f
    1028:	6f 97       	sbiw	r28, 0x1f	; 31

0000102a <.Loc.93>:
    102a:	6f 96       	adiw	r28, 0x1f	; 31
    102c:	6c ad       	ldd	r22, Y+60	; 0x3c
    102e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1030:	8e ad       	ldd	r24, Y+62	; 0x3e
    1032:	9f ad       	ldd	r25, Y+63	; 0x3f
    1034:	6f 97       	sbiw	r28, 0x1f	; 31
    1036:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    103a:	cd 57       	subi	r28, 0x7D	; 125
    103c:	df 4f       	sbci	r29, 0xFF	; 255
    103e:	68 83       	st	Y, r22
    1040:	79 83       	std	Y+1, r23	; 0x01
    1042:	8a 83       	std	Y+2, r24	; 0x02
    1044:	9b 83       	std	Y+3, r25	; 0x03
    1046:	c3 58       	subi	r28, 0x83	; 131
    1048:	d0 40       	sbci	r29, 0x00	; 0
    104a:	cd 57       	subi	r28, 0x7D	; 125
    104c:	df 4f       	sbci	r29, 0xFF	; 255
    104e:	a8 81       	ld	r26, Y
    1050:	b9 81       	ldd	r27, Y+1	; 0x01
    1052:	c3 58       	subi	r28, 0x83	; 131
    1054:	d0 40       	sbci	r29, 0x00	; 0
    1056:	ba 8b       	std	Y+18, r27	; 0x12
    1058:	a9 8b       	std	Y+17, r26	; 0x11

0000105a <.Loc.94>:
		while(__ticks)
    105a:	10 c0       	rjmp	.+32     	; 0x107c <.L21>

0000105c <.L22>:
    105c:	80 e9       	ldi	r24, 0x90	; 144
    105e:	91 e0       	ldi	r25, 0x01	; 1
    1060:	9c 8b       	std	Y+20, r25	; 0x14
    1062:	8b 8b       	std	Y+19, r24	; 0x13

00001064 <.LBB43>:
    1064:	8b 89       	ldd	r24, Y+19	; 0x13
    1066:	9c 89       	ldd	r25, Y+20	; 0x14

00001068 <.L1^B1>:
    1068:	01 97       	sbiw	r24, 0x01	; 1
    106a:	f1 f7       	brne	.-4      	; 0x1068 <.L1^B1>
    106c:	9c 8b       	std	Y+20, r25	; 0x14
    106e:	8b 8b       	std	Y+19, r24	; 0x13

00001070 <.Loc.96>:
	...

00001072 <.LBE43>:
			__ticks --;
    1072:	89 89       	ldd	r24, Y+17	; 0x11
    1074:	9a 89       	ldd	r25, Y+18	; 0x12
    1076:	01 97       	sbiw	r24, 0x01	; 1
    1078:	9a 8b       	std	Y+18, r25	; 0x12
    107a:	89 8b       	std	Y+17, r24	; 0x11

0000107c <.L21>:
		while(__ticks)
    107c:	89 89       	ldd	r24, Y+17	; 0x11
    107e:	9a 89       	ldd	r25, Y+18	; 0x12
    1080:	00 97       	sbiw	r24, 0x00	; 0
    1082:	61 f7       	brne	.-40     	; 0x105c <.L22>

00001084 <.Loc.99>:
		return;
    1084:	21 c0       	rjmp	.+66     	; 0x10c8 <.L15>

00001086 <.L73>:
		__ticks = (uint16_t)__tmp;
    1086:	6d 85       	ldd	r22, Y+13	; 0x0d
    1088:	7e 85       	ldd	r23, Y+14	; 0x0e
    108a:	8f 85       	ldd	r24, Y+15	; 0x0f
    108c:	98 89       	ldd	r25, Y+16	; 0x10
    108e:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1092:	c9 57       	subi	r28, 0x79	; 121
    1094:	df 4f       	sbci	r29, 0xFF	; 255
    1096:	68 83       	st	Y, r22
    1098:	79 83       	std	Y+1, r23	; 0x01
    109a:	8a 83       	std	Y+2, r24	; 0x02
    109c:	9b 83       	std	Y+3, r25	; 0x03
    109e:	c7 58       	subi	r28, 0x87	; 135
    10a0:	d0 40       	sbci	r29, 0x00	; 0
    10a2:	c9 57       	subi	r28, 0x79	; 121
    10a4:	df 4f       	sbci	r29, 0xFF	; 255
    10a6:	e8 81       	ld	r30, Y
    10a8:	f9 81       	ldd	r31, Y+1	; 0x01
    10aa:	c7 58       	subi	r28, 0x87	; 135
    10ac:	d0 40       	sbci	r29, 0x00	; 0
    10ae:	fa 8b       	std	Y+18, r31	; 0x12
    10b0:	e9 8b       	std	Y+17, r30	; 0x11

000010b2 <.L18>:
    10b2:	89 89       	ldd	r24, Y+17	; 0x11
    10b4:	9a 89       	ldd	r25, Y+18	; 0x12
    10b6:	9e 8b       	std	Y+22, r25	; 0x16
    10b8:	8d 8b       	std	Y+21, r24	; 0x15

000010ba <.LBB45>:
    10ba:	8d 89       	ldd	r24, Y+21	; 0x15
    10bc:	9e 89       	ldd	r25, Y+22	; 0x16

000010be <.L1^B2>:
    10be:	01 97       	sbiw	r24, 0x01	; 1
    10c0:	f1 f7       	brne	.-4      	; 0x10be <.L1^B2>
    10c2:	9e 8b       	std	Y+22, r25	; 0x16
    10c4:	8d 8b       	std	Y+21, r24	; 0x15

000010c6 <.Loc.102>:
	...

000010c8 <.L15>:
            for (int i = 0; i < 2; i++) {
    10c8:	89 81       	ldd	r24, Y+1	; 0x01
    10ca:	9a 81       	ldd	r25, Y+2	; 0x02
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	9a 83       	std	Y+2, r25	; 0x02
    10d0:	89 83       	std	Y+1, r24	; 0x01

000010d2 <.L14>:
    10d2:	89 81       	ldd	r24, Y+1	; 0x01
    10d4:	9a 81       	ldd	r25, Y+2	; 0x02
    10d6:	81 30       	cpi	r24, 0x01	; 1
    10d8:	91 05       	cpc	r25, r1
    10da:	09 f0       	breq	.+2      	; 0x10de <L0^A>

000010dc <L0^A>:
    10dc:	0c f4       	brge	.+2      	; 0x10e0 <.L13>

000010de <L0^A>:
    10de:	2b cf       	rjmp	.-426    	; 0xf36 <.L24>

000010e0 <.L13>:
                }
            }
        }

        // Path correction based on IR sensors
        if (ir_left_detected_flag && ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go) {
    10e0:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    10e4:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

000010e8 <.Loc.106>:
    10e8:	00 97       	sbiw	r24, 0x00	; 0
    10ea:	09 f4       	brne	.+2      	; 0x10ee <.Loc.107>

000010ec <L0^A>:
    10ec:	d5 c0       	rjmp	.+426    	; 0x1298 <.L25>

000010ee <.Loc.107>:
    10ee:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    10f2:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>
    10f6:	00 97       	sbiw	r24, 0x00	; 0
    10f8:	09 f4       	brne	.+2      	; 0x10fc <.Loc.108>

000010fa <L0^A>:
    10fa:	ce c0       	rjmp	.+412    	; 0x1298 <.L25>

000010fc <.Loc.108>:
    10fc:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

00001100 <.Loc.109>:
    1100:	88 23       	and	r24, r24
    1102:	09 f0       	breq	.+2      	; 0x1106 <.Loc.110>

00001104 <L0^A>:
    1104:	c9 c0       	rjmp	.+402    	; 0x1298 <.L25>

00001106 <.Loc.110>:
    1106:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    110a:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

0000110e <.Loc.111>:
    110e:	00 97       	sbiw	r24, 0x00	; 0
    1110:	09 f0       	breq	.+2      	; 0x1114 <.Loc.112>

00001112 <L0^A>:
    1112:	c2 c0       	rjmp	.+388    	; 0x1298 <.L25>

00001114 <.Loc.112>:
    1114:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    1118:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    111c:	00 97       	sbiw	r24, 0x00	; 0
    111e:	09 f4       	brne	.+2      	; 0x1122 <.Loc.113>

00001120 <L0^A>:
    1120:	bb c0       	rjmp	.+374    	; 0x1298 <.L25>

00001122 <.Loc.113>:
            agv_rechtdoor();
    1122:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <agv_rechtdoor>

00001126 <.Loc.114>:
            path_exit_flag = 0; // Reset path exit flag if both sensors detect the wall
    1126:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <path_exit_flag+0x1>
    112a:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <path_exit_flag>
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	a8 ec       	ldi	r26, 0xC8	; 200
    1134:	b2 e4       	ldi	r27, 0x42	; 66
    1136:	8f 8b       	std	Y+23, r24	; 0x17
    1138:	98 8f       	std	Y+24, r25	; 0x18
    113a:	a9 8f       	std	Y+25, r26	; 0x19
    113c:	ba 8f       	std	Y+26, r27	; 0x1a

0000113e <.LBB47>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    113e:	20 e0       	ldi	r18, 0x00	; 0
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	4a e7       	ldi	r20, 0x7A	; 122
    1144:	55 e4       	ldi	r21, 0x45	; 69
    1146:	6f 89       	ldd	r22, Y+23	; 0x17
    1148:	78 8d       	ldd	r23, Y+24	; 0x18
    114a:	89 8d       	ldd	r24, Y+25	; 0x19
    114c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    114e:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1152:	c5 57       	subi	r28, 0x75	; 117
    1154:	df 4f       	sbci	r29, 0xFF	; 255
    1156:	68 83       	st	Y, r22
    1158:	79 83       	std	Y+1, r23	; 0x01
    115a:	8a 83       	std	Y+2, r24	; 0x02
    115c:	9b 83       	std	Y+3, r25	; 0x03
    115e:	cb 58       	subi	r28, 0x8B	; 139
    1160:	d0 40       	sbci	r29, 0x00	; 0
    1162:	c5 57       	subi	r28, 0x75	; 117
    1164:	df 4f       	sbci	r29, 0xFF	; 255
    1166:	88 81       	ld	r24, Y
    1168:	99 81       	ldd	r25, Y+1	; 0x01
    116a:	aa 81       	ldd	r26, Y+2	; 0x02
    116c:	bb 81       	ldd	r27, Y+3	; 0x03
    116e:	cb 58       	subi	r28, 0x8B	; 139
    1170:	d0 40       	sbci	r29, 0x00	; 0
    1172:	8b 8f       	std	Y+27, r24	; 0x1b
    1174:	9c 8f       	std	Y+28, r25	; 0x1c
    1176:	ad 8f       	std	Y+29, r26	; 0x1d
    1178:	be 8f       	std	Y+30, r27	; 0x1e

0000117a <.Loc.116>:
	if (__tmp < 1.0)
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	40 e8       	ldi	r20, 0x80	; 128
    1180:	5f e3       	ldi	r21, 0x3F	; 63
    1182:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1184:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1186:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1188:	9e 8d       	ldd	r25, Y+30	; 0x1e
    118a:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    118e:	88 23       	and	r24, r24
    1190:	2c f4       	brge	.+10     	; 0x119c <.L74>

00001192 <.Loc.117>:
		__ticks = 1;
    1192:	81 e0       	ldi	r24, 0x01	; 1
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	98 a3       	std	Y+32, r25	; 0x20
    1198:	8f 8f       	std	Y+31, r24	; 0x1f
    119a:	72 c0       	rjmp	.+228    	; 0x1280 <.L28>

0000119c <.L74>:
	else if (__tmp > 65535)
    119c:	20 e0       	ldi	r18, 0x00	; 0
    119e:	3f ef       	ldi	r19, 0xFF	; 255
    11a0:	4f e7       	ldi	r20, 0x7F	; 127
    11a2:	57 e4       	ldi	r21, 0x47	; 71
    11a4:	6b 8d       	ldd	r22, Y+27	; 0x1b
    11a6:	7c 8d       	ldd	r23, Y+28	; 0x1c
    11a8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    11aa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    11ac:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    11b0:	88 23       	and	r24, r24
    11b2:	09 f0       	breq	.+2      	; 0x11b6 <L0^A>

000011b4 <L0^A>:
    11b4:	0c f4       	brge	.+2      	; 0x11b8 <.Loc.119>

000011b6 <L0^A>:
    11b6:	4e c0       	rjmp	.+156    	; 0x1254 <.L75>

000011b8 <.Loc.119>:
		__ticks = (uint16_t) (__ms * 10.0);
    11b8:	20 e0       	ldi	r18, 0x00	; 0
    11ba:	30 e0       	ldi	r19, 0x00	; 0
    11bc:	40 e2       	ldi	r20, 0x20	; 32
    11be:	51 e4       	ldi	r21, 0x41	; 65
    11c0:	6f 89       	ldd	r22, Y+23	; 0x17
    11c2:	78 8d       	ldd	r23, Y+24	; 0x18
    11c4:	89 8d       	ldd	r24, Y+25	; 0x19
    11c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    11c8:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    11cc:	c1 57       	subi	r28, 0x71	; 113
    11ce:	df 4f       	sbci	r29, 0xFF	; 255
    11d0:	68 83       	st	Y, r22
    11d2:	79 83       	std	Y+1, r23	; 0x01
    11d4:	8a 83       	std	Y+2, r24	; 0x02
    11d6:	9b 83       	std	Y+3, r25	; 0x03
    11d8:	cf 58       	subi	r28, 0x8F	; 143
    11da:	d0 40       	sbci	r29, 0x00	; 0
    11dc:	c1 57       	subi	r28, 0x71	; 113
    11de:	df 4f       	sbci	r29, 0xFF	; 255
    11e0:	88 81       	ld	r24, Y
    11e2:	99 81       	ldd	r25, Y+1	; 0x01
    11e4:	aa 81       	ldd	r26, Y+2	; 0x02
    11e6:	bb 81       	ldd	r27, Y+3	; 0x03
    11e8:	cf 58       	subi	r28, 0x8F	; 143
    11ea:	d0 40       	sbci	r29, 0x00	; 0
    11ec:	a3 96       	adiw	r28, 0x23	; 35
    11ee:	8c af       	std	Y+60, r24	; 0x3c
    11f0:	9d af       	std	Y+61, r25	; 0x3d
    11f2:	ae af       	std	Y+62, r26	; 0x3e
    11f4:	bf af       	std	Y+63, r27	; 0x3f
    11f6:	a3 97       	sbiw	r28, 0x23	; 35

000011f8 <.Loc.120>:
    11f8:	a3 96       	adiw	r28, 0x23	; 35
    11fa:	6c ad       	ldd	r22, Y+60	; 0x3c
    11fc:	7d ad       	ldd	r23, Y+61	; 0x3d
    11fe:	8e ad       	ldd	r24, Y+62	; 0x3e
    1200:	9f ad       	ldd	r25, Y+63	; 0x3f
    1202:	a3 97       	sbiw	r28, 0x23	; 35
    1204:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1208:	cd 56       	subi	r28, 0x6D	; 109
    120a:	df 4f       	sbci	r29, 0xFF	; 255
    120c:	68 83       	st	Y, r22
    120e:	79 83       	std	Y+1, r23	; 0x01
    1210:	8a 83       	std	Y+2, r24	; 0x02
    1212:	9b 83       	std	Y+3, r25	; 0x03
    1214:	c3 59       	subi	r28, 0x93	; 147
    1216:	d0 40       	sbci	r29, 0x00	; 0
    1218:	cd 56       	subi	r28, 0x6D	; 109
    121a:	df 4f       	sbci	r29, 0xFF	; 255
    121c:	a8 81       	ld	r26, Y
    121e:	b9 81       	ldd	r27, Y+1	; 0x01
    1220:	c3 59       	subi	r28, 0x93	; 147
    1222:	d0 40       	sbci	r29, 0x00	; 0
    1224:	b8 a3       	std	Y+32, r27	; 0x20
    1226:	af 8f       	std	Y+31, r26	; 0x1f

00001228 <.Loc.121>:
		while(__ticks)
    1228:	10 c0       	rjmp	.+32     	; 0x124a <.L31>

0000122a <.L32>:
    122a:	80 e9       	ldi	r24, 0x90	; 144
    122c:	91 e0       	ldi	r25, 0x01	; 1
    122e:	9a a3       	std	Y+34, r25	; 0x22
    1230:	89 a3       	std	Y+33, r24	; 0x21

00001232 <.LBB49>:
    1232:	89 a1       	ldd	r24, Y+33	; 0x21
    1234:	9a a1       	ldd	r25, Y+34	; 0x22

00001236 <.L1^B3>:
    1236:	01 97       	sbiw	r24, 0x01	; 1
    1238:	f1 f7       	brne	.-4      	; 0x1236 <.L1^B3>
    123a:	9a a3       	std	Y+34, r25	; 0x22
    123c:	89 a3       	std	Y+33, r24	; 0x21

0000123e <.Loc.123>:
	...

00001240 <.LBE49>:
			__ticks --;
    1240:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1242:	98 a1       	ldd	r25, Y+32	; 0x20
    1244:	01 97       	sbiw	r24, 0x01	; 1
    1246:	98 a3       	std	Y+32, r25	; 0x20
    1248:	8f 8f       	std	Y+31, r24	; 0x1f

0000124a <.L31>:
		while(__ticks)
    124a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    124c:	98 a1       	ldd	r25, Y+32	; 0x20
    124e:	00 97       	sbiw	r24, 0x00	; 0
    1250:	61 f7       	brne	.-40     	; 0x122a <.L32>

00001252 <.Loc.126>:
		return;
    1252:	21 c0       	rjmp	.+66     	; 0x1296 <.L33>

00001254 <.L75>:
		__ticks = (uint16_t)__tmp;
    1254:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1256:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1258:	8d 8d       	ldd	r24, Y+29	; 0x1d
    125a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    125c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1260:	c9 56       	subi	r28, 0x69	; 105
    1262:	df 4f       	sbci	r29, 0xFF	; 255
    1264:	68 83       	st	Y, r22
    1266:	79 83       	std	Y+1, r23	; 0x01
    1268:	8a 83       	std	Y+2, r24	; 0x02
    126a:	9b 83       	std	Y+3, r25	; 0x03
    126c:	c7 59       	subi	r28, 0x97	; 151
    126e:	d0 40       	sbci	r29, 0x00	; 0
    1270:	c9 56       	subi	r28, 0x69	; 105
    1272:	df 4f       	sbci	r29, 0xFF	; 255
    1274:	e8 81       	ld	r30, Y
    1276:	f9 81       	ldd	r31, Y+1	; 0x01
    1278:	c7 59       	subi	r28, 0x97	; 151
    127a:	d0 40       	sbci	r29, 0x00	; 0
    127c:	f8 a3       	std	Y+32, r31	; 0x20
    127e:	ef 8f       	std	Y+31, r30	; 0x1f

00001280 <.L28>:
    1280:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1282:	98 a1       	ldd	r25, Y+32	; 0x20
    1284:	9c a3       	std	Y+36, r25	; 0x24
    1286:	8b a3       	std	Y+35, r24	; 0x23

00001288 <.LBB51>:
    1288:	8b a1       	ldd	r24, Y+35	; 0x23
    128a:	9c a1       	ldd	r25, Y+36	; 0x24

0000128c <.L1^B4>:
    128c:	01 97       	sbiw	r24, 0x01	; 1
    128e:	f1 f7       	brne	.-4      	; 0x128c <.L1^B4>
    1290:	9c a3       	std	Y+36, r25	; 0x24
    1292:	8b a3       	std	Y+35, r24	; 0x23

00001294 <.Loc.129>:
	...

00001296 <.L33>:
            _delay_ms(100);
    1296:	f3 c2       	rjmp	.+1510   	; 0x187e <.L34>

00001298 <.L25>:
        } else if (!ir_left_detected_flag && ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go) {
    1298:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    129c:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

000012a0 <.Loc.132>:
    12a0:	00 97       	sbiw	r24, 0x00	; 0
    12a2:	09 f0       	breq	.+2      	; 0x12a6 <.Loc.133>

000012a4 <L0^A>:
    12a4:	d1 c0       	rjmp	.+418    	; 0x1448 <.L35>

000012a6 <.Loc.133>:
    12a6:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    12aa:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>
    12ae:	00 97       	sbiw	r24, 0x00	; 0
    12b0:	09 f4       	brne	.+2      	; 0x12b4 <.Loc.134>

000012b2 <L0^A>:
    12b2:	ca c0       	rjmp	.+404    	; 0x1448 <.L35>

000012b4 <.Loc.134>:
    12b4:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

000012b8 <.Loc.135>:
    12b8:	88 23       	and	r24, r24
    12ba:	09 f0       	breq	.+2      	; 0x12be <.Loc.136>

000012bc <L0^A>:
    12bc:	c5 c0       	rjmp	.+394    	; 0x1448 <.L35>

000012be <.Loc.136>:
    12be:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    12c2:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

000012c6 <.Loc.137>:
    12c6:	00 97       	sbiw	r24, 0x00	; 0
    12c8:	09 f0       	breq	.+2      	; 0x12cc <.Loc.138>

000012ca <L0^A>:
    12ca:	be c0       	rjmp	.+380    	; 0x1448 <.L35>

000012cc <.Loc.138>:
    12cc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    12d0:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    12d4:	00 97       	sbiw	r24, 0x00	; 0
    12d6:	09 f4       	brne	.+2      	; 0x12da <.Loc.139>

000012d8 <L0^A>:
    12d8:	b7 c0       	rjmp	.+366    	; 0x1448 <.L35>

000012da <.Loc.139>:
            agv_links_correctie(); // Correct to the left if right sensor sees the wall but left does not
    12da:	0e 94 50 04 	call	0x8a0	; 0x8a0 <agv_links_correctie>
    12de:	80 e0       	ldi	r24, 0x00	; 0
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	a8 ec       	ldi	r26, 0xC8	; 200
    12e4:	b2 e4       	ldi	r27, 0x42	; 66
    12e6:	8d a3       	std	Y+37, r24	; 0x25
    12e8:	9e a3       	std	Y+38, r25	; 0x26
    12ea:	af a3       	std	Y+39, r26	; 0x27
    12ec:	b8 a7       	std	Y+40, r27	; 0x28

000012ee <.LBB53>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	30 e0       	ldi	r19, 0x00	; 0
    12f2:	4a e7       	ldi	r20, 0x7A	; 122
    12f4:	55 e4       	ldi	r21, 0x45	; 69
    12f6:	6d a1       	ldd	r22, Y+37	; 0x25
    12f8:	7e a1       	ldd	r23, Y+38	; 0x26
    12fa:	8f a1       	ldd	r24, Y+39	; 0x27
    12fc:	98 a5       	ldd	r25, Y+40	; 0x28
    12fe:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1302:	c5 56       	subi	r28, 0x65	; 101
    1304:	df 4f       	sbci	r29, 0xFF	; 255
    1306:	68 83       	st	Y, r22
    1308:	79 83       	std	Y+1, r23	; 0x01
    130a:	8a 83       	std	Y+2, r24	; 0x02
    130c:	9b 83       	std	Y+3, r25	; 0x03
    130e:	cb 59       	subi	r28, 0x9B	; 155
    1310:	d0 40       	sbci	r29, 0x00	; 0
    1312:	c5 56       	subi	r28, 0x65	; 101
    1314:	df 4f       	sbci	r29, 0xFF	; 255
    1316:	88 81       	ld	r24, Y
    1318:	99 81       	ldd	r25, Y+1	; 0x01
    131a:	aa 81       	ldd	r26, Y+2	; 0x02
    131c:	bb 81       	ldd	r27, Y+3	; 0x03
    131e:	cb 59       	subi	r28, 0x9B	; 155
    1320:	d0 40       	sbci	r29, 0x00	; 0
    1322:	89 a7       	std	Y+41, r24	; 0x29
    1324:	9a a7       	std	Y+42, r25	; 0x2a
    1326:	ab a7       	std	Y+43, r26	; 0x2b
    1328:	bc a7       	std	Y+44, r27	; 0x2c

0000132a <.Loc.141>:
	if (__tmp < 1.0)
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	40 e8       	ldi	r20, 0x80	; 128
    1330:	5f e3       	ldi	r21, 0x3F	; 63
    1332:	69 a5       	ldd	r22, Y+41	; 0x29
    1334:	7a a5       	ldd	r23, Y+42	; 0x2a
    1336:	8b a5       	ldd	r24, Y+43	; 0x2b
    1338:	9c a5       	ldd	r25, Y+44	; 0x2c
    133a:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    133e:	88 23       	and	r24, r24
    1340:	2c f4       	brge	.+10     	; 0x134c <.L76>

00001342 <.Loc.142>:
		__ticks = 1;
    1342:	81 e0       	ldi	r24, 0x01	; 1
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	9e a7       	std	Y+46, r25	; 0x2e
    1348:	8d a7       	std	Y+45, r24	; 0x2d
    134a:	72 c0       	rjmp	.+228    	; 0x1430 <.L38>

0000134c <.L76>:
	else if (__tmp > 65535)
    134c:	20 e0       	ldi	r18, 0x00	; 0
    134e:	3f ef       	ldi	r19, 0xFF	; 255
    1350:	4f e7       	ldi	r20, 0x7F	; 127
    1352:	57 e4       	ldi	r21, 0x47	; 71
    1354:	69 a5       	ldd	r22, Y+41	; 0x29
    1356:	7a a5       	ldd	r23, Y+42	; 0x2a
    1358:	8b a5       	ldd	r24, Y+43	; 0x2b
    135a:	9c a5       	ldd	r25, Y+44	; 0x2c
    135c:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    1360:	88 23       	and	r24, r24
    1362:	09 f0       	breq	.+2      	; 0x1366 <L0^A>

00001364 <L0^A>:
    1364:	0c f4       	brge	.+2      	; 0x1368 <.Loc.144>

00001366 <L0^A>:
    1366:	4e c0       	rjmp	.+156    	; 0x1404 <.L77>

00001368 <.Loc.144>:
		__ticks = (uint16_t) (__ms * 10.0);
    1368:	20 e0       	ldi	r18, 0x00	; 0
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	40 e2       	ldi	r20, 0x20	; 32
    136e:	51 e4       	ldi	r21, 0x41	; 65
    1370:	6d a1       	ldd	r22, Y+37	; 0x25
    1372:	7e a1       	ldd	r23, Y+38	; 0x26
    1374:	8f a1       	ldd	r24, Y+39	; 0x27
    1376:	98 a5       	ldd	r25, Y+40	; 0x28
    1378:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    137c:	c1 56       	subi	r28, 0x61	; 97
    137e:	df 4f       	sbci	r29, 0xFF	; 255
    1380:	68 83       	st	Y, r22
    1382:	79 83       	std	Y+1, r23	; 0x01
    1384:	8a 83       	std	Y+2, r24	; 0x02
    1386:	9b 83       	std	Y+3, r25	; 0x03
    1388:	cf 59       	subi	r28, 0x9F	; 159
    138a:	d0 40       	sbci	r29, 0x00	; 0
    138c:	c1 56       	subi	r28, 0x61	; 97
    138e:	df 4f       	sbci	r29, 0xFF	; 255
    1390:	88 81       	ld	r24, Y
    1392:	99 81       	ldd	r25, Y+1	; 0x01
    1394:	aa 81       	ldd	r26, Y+2	; 0x02
    1396:	bb 81       	ldd	r27, Y+3	; 0x03
    1398:	cf 59       	subi	r28, 0x9F	; 159
    139a:	d0 40       	sbci	r29, 0x00	; 0
    139c:	a7 96       	adiw	r28, 0x27	; 39
    139e:	8c af       	std	Y+60, r24	; 0x3c
    13a0:	9d af       	std	Y+61, r25	; 0x3d
    13a2:	ae af       	std	Y+62, r26	; 0x3e
    13a4:	bf af       	std	Y+63, r27	; 0x3f
    13a6:	a7 97       	sbiw	r28, 0x27	; 39

000013a8 <.Loc.145>:
    13a8:	a7 96       	adiw	r28, 0x27	; 39
    13aa:	6c ad       	ldd	r22, Y+60	; 0x3c
    13ac:	7d ad       	ldd	r23, Y+61	; 0x3d
    13ae:	8e ad       	ldd	r24, Y+62	; 0x3e
    13b0:	9f ad       	ldd	r25, Y+63	; 0x3f
    13b2:	a7 97       	sbiw	r28, 0x27	; 39
    13b4:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    13b8:	cd 55       	subi	r28, 0x5D	; 93
    13ba:	df 4f       	sbci	r29, 0xFF	; 255
    13bc:	68 83       	st	Y, r22
    13be:	79 83       	std	Y+1, r23	; 0x01
    13c0:	8a 83       	std	Y+2, r24	; 0x02
    13c2:	9b 83       	std	Y+3, r25	; 0x03
    13c4:	c3 5a       	subi	r28, 0xA3	; 163
    13c6:	d0 40       	sbci	r29, 0x00	; 0
    13c8:	cd 55       	subi	r28, 0x5D	; 93
    13ca:	df 4f       	sbci	r29, 0xFF	; 255
    13cc:	a8 81       	ld	r26, Y
    13ce:	b9 81       	ldd	r27, Y+1	; 0x01
    13d0:	c3 5a       	subi	r28, 0xA3	; 163
    13d2:	d0 40       	sbci	r29, 0x00	; 0
    13d4:	be a7       	std	Y+46, r27	; 0x2e
    13d6:	ad a7       	std	Y+45, r26	; 0x2d

000013d8 <.Loc.146>:
		while(__ticks)
    13d8:	10 c0       	rjmp	.+32     	; 0x13fa <.L41>

000013da <.L42>:
    13da:	80 e9       	ldi	r24, 0x90	; 144
    13dc:	91 e0       	ldi	r25, 0x01	; 1
    13de:	98 ab       	std	Y+48, r25	; 0x30
    13e0:	8f a7       	std	Y+47, r24	; 0x2f

000013e2 <.LBB55>:
    13e2:	8f a5       	ldd	r24, Y+47	; 0x2f
    13e4:	98 a9       	ldd	r25, Y+48	; 0x30

000013e6 <.L1^B5>:
    13e6:	01 97       	sbiw	r24, 0x01	; 1
    13e8:	f1 f7       	brne	.-4      	; 0x13e6 <.L1^B5>
    13ea:	98 ab       	std	Y+48, r25	; 0x30
    13ec:	8f a7       	std	Y+47, r24	; 0x2f

000013ee <.Loc.148>:
	...

000013f0 <.LBE55>:
			__ticks --;
    13f0:	8d a5       	ldd	r24, Y+45	; 0x2d
    13f2:	9e a5       	ldd	r25, Y+46	; 0x2e
    13f4:	01 97       	sbiw	r24, 0x01	; 1
    13f6:	9e a7       	std	Y+46, r25	; 0x2e
    13f8:	8d a7       	std	Y+45, r24	; 0x2d

000013fa <.L41>:
		while(__ticks)
    13fa:	8d a5       	ldd	r24, Y+45	; 0x2d
    13fc:	9e a5       	ldd	r25, Y+46	; 0x2e
    13fe:	00 97       	sbiw	r24, 0x00	; 0
    1400:	61 f7       	brne	.-40     	; 0x13da <.L42>

00001402 <.Loc.151>:
		return;
    1402:	21 c0       	rjmp	.+66     	; 0x1446 <.L43>

00001404 <.L77>:
		__ticks = (uint16_t)__tmp;
    1404:	69 a5       	ldd	r22, Y+41	; 0x29
    1406:	7a a5       	ldd	r23, Y+42	; 0x2a
    1408:	8b a5       	ldd	r24, Y+43	; 0x2b
    140a:	9c a5       	ldd	r25, Y+44	; 0x2c
    140c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1410:	c9 55       	subi	r28, 0x59	; 89
    1412:	df 4f       	sbci	r29, 0xFF	; 255
    1414:	68 83       	st	Y, r22
    1416:	79 83       	std	Y+1, r23	; 0x01
    1418:	8a 83       	std	Y+2, r24	; 0x02
    141a:	9b 83       	std	Y+3, r25	; 0x03
    141c:	c7 5a       	subi	r28, 0xA7	; 167
    141e:	d0 40       	sbci	r29, 0x00	; 0
    1420:	c9 55       	subi	r28, 0x59	; 89
    1422:	df 4f       	sbci	r29, 0xFF	; 255
    1424:	e8 81       	ld	r30, Y
    1426:	f9 81       	ldd	r31, Y+1	; 0x01
    1428:	c7 5a       	subi	r28, 0xA7	; 167
    142a:	d0 40       	sbci	r29, 0x00	; 0
    142c:	fe a7       	std	Y+46, r31	; 0x2e
    142e:	ed a7       	std	Y+45, r30	; 0x2d

00001430 <.L38>:
    1430:	8d a5       	ldd	r24, Y+45	; 0x2d
    1432:	9e a5       	ldd	r25, Y+46	; 0x2e
    1434:	9a ab       	std	Y+50, r25	; 0x32
    1436:	89 ab       	std	Y+49, r24	; 0x31

00001438 <.LBB57>:
    1438:	89 a9       	ldd	r24, Y+49	; 0x31
    143a:	9a a9       	ldd	r25, Y+50	; 0x32

0000143c <.L1^B6>:
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	f1 f7       	brne	.-4      	; 0x143c <.L1^B6>
    1440:	9a ab       	std	Y+50, r25	; 0x32
    1442:	89 ab       	std	Y+49, r24	; 0x31

00001444 <.Loc.154>:
	...

00001446 <.L43>:
            _delay_ms(100);
    1446:	1b c2       	rjmp	.+1078   	; 0x187e <.L34>

00001448 <.L35>:
        } else if (ir_left_detected_flag && !ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go) {
    1448:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    144c:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

00001450 <.Loc.157>:
    1450:	00 97       	sbiw	r24, 0x00	; 0
    1452:	09 f4       	brne	.+2      	; 0x1456 <.Loc.158>

00001454 <L0^A>:
    1454:	dc c0       	rjmp	.+440    	; 0x160e <.L44>

00001456 <.Loc.158>:
    1456:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    145a:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>

0000145e <.Loc.159>:
    145e:	00 97       	sbiw	r24, 0x00	; 0
    1460:	09 f0       	breq	.+2      	; 0x1464 <.Loc.160>

00001462 <L0^A>:
    1462:	d5 c0       	rjmp	.+426    	; 0x160e <.L44>

00001464 <.Loc.160>:
    1464:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

00001468 <.Loc.161>:
    1468:	88 23       	and	r24, r24
    146a:	09 f0       	breq	.+2      	; 0x146e <.Loc.162>

0000146c <L0^A>:
    146c:	d0 c0       	rjmp	.+416    	; 0x160e <.L44>

0000146e <.Loc.162>:
    146e:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    1472:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

00001476 <.Loc.163>:
    1476:	00 97       	sbiw	r24, 0x00	; 0
    1478:	09 f0       	breq	.+2      	; 0x147c <.Loc.164>

0000147a <L0^A>:
    147a:	c9 c0       	rjmp	.+402    	; 0x160e <.L44>

0000147c <.Loc.164>:
    147c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    1480:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    1484:	00 97       	sbiw	r24, 0x00	; 0
    1486:	09 f4       	brne	.+2      	; 0x148a <.Loc.165>

00001488 <L0^A>:
    1488:	c2 c0       	rjmp	.+388    	; 0x160e <.L44>

0000148a <.Loc.165>:
            agv_rechts_correctie(); // Correct to the right if left sensor sees the wall but right does not
    148a:	0e 94 a5 03 	call	0x74a	; 0x74a <agv_rechts_correctie>
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	a8 ec       	ldi	r26, 0xC8	; 200
    1494:	b2 e4       	ldi	r27, 0x42	; 66
    1496:	8b ab       	std	Y+51, r24	; 0x33
    1498:	9c ab       	std	Y+52, r25	; 0x34
    149a:	ad ab       	std	Y+53, r26	; 0x35
    149c:	be ab       	std	Y+54, r27	; 0x36

0000149e <.LBB59>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	4a e7       	ldi	r20, 0x7A	; 122
    14a4:	55 e4       	ldi	r21, 0x45	; 69
    14a6:	6b a9       	ldd	r22, Y+51	; 0x33
    14a8:	7c a9       	ldd	r23, Y+52	; 0x34
    14aa:	8d a9       	ldd	r24, Y+53	; 0x35
    14ac:	9e a9       	ldd	r25, Y+54	; 0x36
    14ae:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    14b2:	c5 55       	subi	r28, 0x55	; 85
    14b4:	df 4f       	sbci	r29, 0xFF	; 255
    14b6:	68 83       	st	Y, r22
    14b8:	79 83       	std	Y+1, r23	; 0x01
    14ba:	8a 83       	std	Y+2, r24	; 0x02
    14bc:	9b 83       	std	Y+3, r25	; 0x03
    14be:	cb 5a       	subi	r28, 0xAB	; 171
    14c0:	d0 40       	sbci	r29, 0x00	; 0
    14c2:	c5 55       	subi	r28, 0x55	; 85
    14c4:	df 4f       	sbci	r29, 0xFF	; 255
    14c6:	88 81       	ld	r24, Y
    14c8:	99 81       	ldd	r25, Y+1	; 0x01
    14ca:	aa 81       	ldd	r26, Y+2	; 0x02
    14cc:	bb 81       	ldd	r27, Y+3	; 0x03
    14ce:	cb 5a       	subi	r28, 0xAB	; 171
    14d0:	d0 40       	sbci	r29, 0x00	; 0
    14d2:	8f ab       	std	Y+55, r24	; 0x37
    14d4:	98 af       	std	Y+56, r25	; 0x38
    14d6:	a9 af       	std	Y+57, r26	; 0x39
    14d8:	ba af       	std	Y+58, r27	; 0x3a

000014da <.Loc.167>:
	if (__tmp < 1.0)
    14da:	20 e0       	ldi	r18, 0x00	; 0
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	40 e8       	ldi	r20, 0x80	; 128
    14e0:	5f e3       	ldi	r21, 0x3F	; 63
    14e2:	6f a9       	ldd	r22, Y+55	; 0x37
    14e4:	78 ad       	ldd	r23, Y+56	; 0x38
    14e6:	89 ad       	ldd	r24, Y+57	; 0x39
    14e8:	9a ad       	ldd	r25, Y+58	; 0x3a
    14ea:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    14ee:	88 23       	and	r24, r24
    14f0:	2c f4       	brge	.+10     	; 0x14fc <.L78>

000014f2 <.Loc.168>:
		__ticks = 1;
    14f2:	81 e0       	ldi	r24, 0x01	; 1
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	9c af       	std	Y+60, r25	; 0x3c
    14f8:	8b af       	std	Y+59, r24	; 0x3b
    14fa:	72 c0       	rjmp	.+228    	; 0x15e0 <.L47>

000014fc <.L78>:
	else if (__tmp > 65535)
    14fc:	20 e0       	ldi	r18, 0x00	; 0
    14fe:	3f ef       	ldi	r19, 0xFF	; 255
    1500:	4f e7       	ldi	r20, 0x7F	; 127
    1502:	57 e4       	ldi	r21, 0x47	; 71
    1504:	6f a9       	ldd	r22, Y+55	; 0x37
    1506:	78 ad       	ldd	r23, Y+56	; 0x38
    1508:	89 ad       	ldd	r24, Y+57	; 0x39
    150a:	9a ad       	ldd	r25, Y+58	; 0x3a
    150c:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    1510:	88 23       	and	r24, r24
    1512:	09 f0       	breq	.+2      	; 0x1516 <L0^A>

00001514 <L0^A>:
    1514:	0c f4       	brge	.+2      	; 0x1518 <.Loc.170>

00001516 <L0^A>:
    1516:	4e c0       	rjmp	.+156    	; 0x15b4 <.L79>

00001518 <.Loc.170>:
		__ticks = (uint16_t) (__ms * 10.0);
    1518:	20 e0       	ldi	r18, 0x00	; 0
    151a:	30 e0       	ldi	r19, 0x00	; 0
    151c:	40 e2       	ldi	r20, 0x20	; 32
    151e:	51 e4       	ldi	r21, 0x41	; 65
    1520:	6b a9       	ldd	r22, Y+51	; 0x33
    1522:	7c a9       	ldd	r23, Y+52	; 0x34
    1524:	8d a9       	ldd	r24, Y+53	; 0x35
    1526:	9e a9       	ldd	r25, Y+54	; 0x36
    1528:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    152c:	c1 55       	subi	r28, 0x51	; 81
    152e:	df 4f       	sbci	r29, 0xFF	; 255
    1530:	68 83       	st	Y, r22
    1532:	79 83       	std	Y+1, r23	; 0x01
    1534:	8a 83       	std	Y+2, r24	; 0x02
    1536:	9b 83       	std	Y+3, r25	; 0x03
    1538:	cf 5a       	subi	r28, 0xAF	; 175
    153a:	d0 40       	sbci	r29, 0x00	; 0
    153c:	c1 55       	subi	r28, 0x51	; 81
    153e:	df 4f       	sbci	r29, 0xFF	; 255
    1540:	88 81       	ld	r24, Y
    1542:	99 81       	ldd	r25, Y+1	; 0x01
    1544:	aa 81       	ldd	r26, Y+2	; 0x02
    1546:	bb 81       	ldd	r27, Y+3	; 0x03
    1548:	cf 5a       	subi	r28, 0xAF	; 175
    154a:	d0 40       	sbci	r29, 0x00	; 0
    154c:	ab 96       	adiw	r28, 0x2b	; 43
    154e:	8c af       	std	Y+60, r24	; 0x3c
    1550:	9d af       	std	Y+61, r25	; 0x3d
    1552:	ae af       	std	Y+62, r26	; 0x3e
    1554:	bf af       	std	Y+63, r27	; 0x3f
    1556:	ab 97       	sbiw	r28, 0x2b	; 43

00001558 <.Loc.171>:
    1558:	ab 96       	adiw	r28, 0x2b	; 43
    155a:	6c ad       	ldd	r22, Y+60	; 0x3c
    155c:	7d ad       	ldd	r23, Y+61	; 0x3d
    155e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1560:	9f ad       	ldd	r25, Y+63	; 0x3f
    1562:	ab 97       	sbiw	r28, 0x2b	; 43
    1564:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1568:	cd 54       	subi	r28, 0x4D	; 77
    156a:	df 4f       	sbci	r29, 0xFF	; 255
    156c:	68 83       	st	Y, r22
    156e:	79 83       	std	Y+1, r23	; 0x01
    1570:	8a 83       	std	Y+2, r24	; 0x02
    1572:	9b 83       	std	Y+3, r25	; 0x03
    1574:	c3 5b       	subi	r28, 0xB3	; 179
    1576:	d0 40       	sbci	r29, 0x00	; 0
    1578:	cd 54       	subi	r28, 0x4D	; 77
    157a:	df 4f       	sbci	r29, 0xFF	; 255
    157c:	a8 81       	ld	r26, Y
    157e:	b9 81       	ldd	r27, Y+1	; 0x01
    1580:	c3 5b       	subi	r28, 0xB3	; 179
    1582:	d0 40       	sbci	r29, 0x00	; 0
    1584:	bc af       	std	Y+60, r27	; 0x3c
    1586:	ab af       	std	Y+59, r26	; 0x3b

00001588 <.Loc.172>:
		while(__ticks)
    1588:	10 c0       	rjmp	.+32     	; 0x15aa <.L50>

0000158a <.L51>:
    158a:	80 e9       	ldi	r24, 0x90	; 144
    158c:	91 e0       	ldi	r25, 0x01	; 1
    158e:	9e af       	std	Y+62, r25	; 0x3e
    1590:	8d af       	std	Y+61, r24	; 0x3d

00001592 <.LBB61>:
    1592:	8d ad       	ldd	r24, Y+61	; 0x3d
    1594:	9e ad       	ldd	r25, Y+62	; 0x3e

00001596 <.L1^B7>:
    1596:	01 97       	sbiw	r24, 0x01	; 1
    1598:	f1 f7       	brne	.-4      	; 0x1596 <.L1^B7>
    159a:	9e af       	std	Y+62, r25	; 0x3e
    159c:	8d af       	std	Y+61, r24	; 0x3d

0000159e <.Loc.174>:
	...

000015a0 <.LBE61>:
			__ticks --;
    15a0:	8b ad       	ldd	r24, Y+59	; 0x3b
    15a2:	9c ad       	ldd	r25, Y+60	; 0x3c
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	9c af       	std	Y+60, r25	; 0x3c
    15a8:	8b af       	std	Y+59, r24	; 0x3b

000015aa <.L50>:
		while(__ticks)
    15aa:	8b ad       	ldd	r24, Y+59	; 0x3b
    15ac:	9c ad       	ldd	r25, Y+60	; 0x3c
    15ae:	00 97       	sbiw	r24, 0x00	; 0
    15b0:	61 f7       	brne	.-40     	; 0x158a <.L51>

000015b2 <.Loc.177>:
		return;
    15b2:	2c c0       	rjmp	.+88     	; 0x160c <.L52>

000015b4 <.L79>:
		__ticks = (uint16_t)__tmp;
    15b4:	6f a9       	ldd	r22, Y+55	; 0x37
    15b6:	78 ad       	ldd	r23, Y+56	; 0x38
    15b8:	89 ad       	ldd	r24, Y+57	; 0x39
    15ba:	9a ad       	ldd	r25, Y+58	; 0x3a
    15bc:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    15c0:	c9 54       	subi	r28, 0x49	; 73
    15c2:	df 4f       	sbci	r29, 0xFF	; 255
    15c4:	68 83       	st	Y, r22
    15c6:	79 83       	std	Y+1, r23	; 0x01
    15c8:	8a 83       	std	Y+2, r24	; 0x02
    15ca:	9b 83       	std	Y+3, r25	; 0x03
    15cc:	c7 5b       	subi	r28, 0xB7	; 183
    15ce:	d0 40       	sbci	r29, 0x00	; 0
    15d0:	c9 54       	subi	r28, 0x49	; 73
    15d2:	df 4f       	sbci	r29, 0xFF	; 255
    15d4:	e8 81       	ld	r30, Y
    15d6:	f9 81       	ldd	r31, Y+1	; 0x01
    15d8:	c7 5b       	subi	r28, 0xB7	; 183
    15da:	d0 40       	sbci	r29, 0x00	; 0
    15dc:	fc af       	std	Y+60, r31	; 0x3c
    15de:	eb af       	std	Y+59, r30	; 0x3b

000015e0 <.L47>:
    15e0:	2b ad       	ldd	r18, Y+59	; 0x3b
    15e2:	3c ad       	ldd	r19, Y+60	; 0x3c
    15e4:	ce 01       	movw	r24, r28
    15e6:	cf 96       	adiw	r24, 0x3f	; 63
    15e8:	dc 01       	movw	r26, r24
    15ea:	2d 93       	st	X+, r18
    15ec:	3c 93       	st	X, r19

000015ee <.LBB63>:
    15ee:	ce 01       	movw	r24, r28
    15f0:	cf 96       	adiw	r24, 0x3f	; 63
    15f2:	fc 01       	movw	r30, r24
    15f4:	80 81       	ld	r24, Z
    15f6:	91 81       	ldd	r25, Z+1	; 0x01

000015f8 <.L1^B8>:
    15f8:	01 97       	sbiw	r24, 0x01	; 1
    15fa:	f1 f7       	brne	.-4      	; 0x15f8 <.L1^B8>
    15fc:	9e 01       	movw	r18, r28
    15fe:	21 5c       	subi	r18, 0xC1	; 193
    1600:	3f 4f       	sbci	r19, 0xFF	; 255
    1602:	d9 01       	movw	r26, r18
    1604:	11 96       	adiw	r26, 0x01	; 1
    1606:	9c 93       	st	X, r25
    1608:	8e 93       	st	-X, r24

0000160a <.Loc.180>:
	...

0000160c <.L52>:
            _delay_ms(100);
    160c:	38 c1       	rjmp	.+624    	; 0x187e <.L34>

0000160e <.L44>:
        } else if (!ir_left_detected_flag && !ir_right_detected_flag && !boom_detected_flag && !ultrason_obstacle_flag && agv_can_go) {
    160e:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ir_left_detected_flag>
    1612:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <ir_left_detected_flag+0x1>

00001616 <.Loc.183>:
    1616:	00 97       	sbiw	r24, 0x00	; 0
    1618:	09 f0       	breq	.+2      	; 0x161c <.Loc.184>

0000161a <L0^A>:
    161a:	d7 cb       	rjmp	.-2130   	; 0xdca <.L61>

0000161c <.Loc.184>:
    161c:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <ir_right_detected_flag>
    1620:	90 91 0b 02 	lds	r25, 0x020B	; 0x80020b <ir_right_detected_flag+0x1>

00001624 <.Loc.185>:
    1624:	00 97       	sbiw	r24, 0x00	; 0
    1626:	09 f0       	breq	.+2      	; 0x162a <.Loc.186>

00001628 <L0^A>:
    1628:	d0 cb       	rjmp	.-2144   	; 0xdca <.L61>

0000162a <.Loc.186>:
    162a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <boom_detected_flag>

0000162e <.Loc.187>:
    162e:	88 23       	and	r24, r24
    1630:	09 f0       	breq	.+2      	; 0x1634 <.Loc.188>

00001632 <L0^A>:
    1632:	cb cb       	rjmp	.-2154   	; 0xdca <.L61>

00001634 <.Loc.188>:
    1634:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrason_obstacle_flag>
    1638:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrason_obstacle_flag+0x1>

0000163c <.Loc.189>:
    163c:	00 97       	sbiw	r24, 0x00	; 0
    163e:	09 f0       	breq	.+2      	; 0x1642 <.Loc.190>

00001640 <L0^A>:
    1640:	c4 cb       	rjmp	.-2168   	; 0xdca <.L61>

00001642 <.Loc.190>:
    1642:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_can_go>
    1646:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <agv_can_go+0x1>
    164a:	00 97       	sbiw	r24, 0x00	; 0
    164c:	09 f4       	brne	.+2      	; 0x1650 <.Loc.191>

0000164e <L0^A>:
    164e:	bd cb       	rjmp	.-2182   	; 0xdca <.L61>

00001650 <.Loc.191>:
            if (!path_exit_flag) {
    1650:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <path_exit_flag>
    1654:	90 91 0d 02 	lds	r25, 0x020D	; 0x80020d <path_exit_flag+0x1>

00001658 <.Loc.192>:
    1658:	00 97       	sbiw	r24, 0x00	; 0
    165a:	09 f0       	breq	.+2      	; 0x165e <.Loc.193>

0000165c <L0^A>:
    165c:	b6 cb       	rjmp	.-2196   	; 0xdca <.L61>

0000165e <.Loc.193>:
                agv_links_bocht();
    165e:	0e 94 4f 02 	call	0x49e	; 0x49e <agv_links_bocht>

00001662 <.Loc.194>:
                path_exit_flag = 1; // Set flag to indicate AGV has exited the path
    1662:	81 e0       	ldi	r24, 0x01	; 1
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <path_exit_flag+0x1>
    166a:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <path_exit_flag>
    166e:	9e 01       	movw	r18, r28
    1670:	2f 5b       	subi	r18, 0xBF	; 191
    1672:	3f 4f       	sbci	r19, 0xFF	; 255
    1674:	80 e0       	ldi	r24, 0x00	; 0
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	a8 ec       	ldi	r26, 0xC8	; 200
    167a:	b2 e4       	ldi	r27, 0x42	; 66
    167c:	f9 01       	movw	r30, r18
    167e:	80 83       	st	Z, r24
    1680:	91 83       	std	Z+1, r25	; 0x01
    1682:	a2 83       	std	Z+2, r26	; 0x02
    1684:	b3 83       	std	Z+3, r27	; 0x03

00001686 <.LBB65>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1686:	8e 01       	movw	r16, r28
    1688:	0b 5b       	subi	r16, 0xBB	; 187
    168a:	1f 4f       	sbci	r17, 0xFF	; 255
    168c:	ce 01       	movw	r24, r28
    168e:	8f 5b       	subi	r24, 0xBF	; 191
    1690:	9f 4f       	sbci	r25, 0xFF	; 255
    1692:	20 e0       	ldi	r18, 0x00	; 0
    1694:	30 e0       	ldi	r19, 0x00	; 0
    1696:	4a e7       	ldi	r20, 0x7A	; 122
    1698:	55 e4       	ldi	r21, 0x45	; 69
    169a:	dc 01       	movw	r26, r24
    169c:	6d 91       	ld	r22, X+
    169e:	7d 91       	ld	r23, X+
    16a0:	8d 91       	ld	r24, X+
    16a2:	9c 91       	ld	r25, X
    16a4:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    16a8:	c5 54       	subi	r28, 0x45	; 69
    16aa:	df 4f       	sbci	r29, 0xFF	; 255
    16ac:	68 83       	st	Y, r22
    16ae:	79 83       	std	Y+1, r23	; 0x01
    16b0:	8a 83       	std	Y+2, r24	; 0x02
    16b2:	9b 83       	std	Y+3, r25	; 0x03
    16b4:	cb 5b       	subi	r28, 0xBB	; 187
    16b6:	d0 40       	sbci	r29, 0x00	; 0
    16b8:	c5 54       	subi	r28, 0x45	; 69
    16ba:	df 4f       	sbci	r29, 0xFF	; 255
    16bc:	88 81       	ld	r24, Y
    16be:	99 81       	ldd	r25, Y+1	; 0x01
    16c0:	aa 81       	ldd	r26, Y+2	; 0x02
    16c2:	bb 81       	ldd	r27, Y+3	; 0x03
    16c4:	cb 5b       	subi	r28, 0xBB	; 187
    16c6:	d0 40       	sbci	r29, 0x00	; 0
    16c8:	f8 01       	movw	r30, r16
    16ca:	80 83       	st	Z, r24
    16cc:	91 83       	std	Z+1, r25	; 0x01
    16ce:	a2 83       	std	Z+2, r26	; 0x02
    16d0:	b3 83       	std	Z+3, r27	; 0x03

000016d2 <.Loc.196>:
	if (__tmp < 1.0)
    16d2:	ce 01       	movw	r24, r28
    16d4:	8b 5b       	subi	r24, 0xBB	; 187
    16d6:	9f 4f       	sbci	r25, 0xFF	; 255
    16d8:	20 e0       	ldi	r18, 0x00	; 0
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	40 e8       	ldi	r20, 0x80	; 128
    16de:	5f e3       	ldi	r21, 0x3F	; 63
    16e0:	dc 01       	movw	r26, r24
    16e2:	6d 91       	ld	r22, X+
    16e4:	7d 91       	ld	r23, X+
    16e6:	8d 91       	ld	r24, X+
    16e8:	9c 91       	ld	r25, X
    16ea:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    16ee:	88 23       	and	r24, r24
    16f0:	4c f4       	brge	.+18     	; 0x1704 <.L80>

000016f2 <.Loc.197>:
		__ticks = 1;
    16f2:	ce 01       	movw	r24, r28
    16f4:	87 5b       	subi	r24, 0xB7	; 183
    16f6:	9f 4f       	sbci	r25, 0xFF	; 255
    16f8:	21 e0       	ldi	r18, 0x01	; 1
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	fc 01       	movw	r30, r24
    16fe:	31 83       	std	Z+1, r19	; 0x01
    1700:	20 83       	st	Z, r18
    1702:	a1 c0       	rjmp	.+322    	; 0x1846 <.L55>

00001704 <.L80>:
	else if (__tmp > 65535)
    1704:	ce 01       	movw	r24, r28
    1706:	8b 5b       	subi	r24, 0xBB	; 187
    1708:	9f 4f       	sbci	r25, 0xFF	; 255
    170a:	20 e0       	ldi	r18, 0x00	; 0
    170c:	3f ef       	ldi	r19, 0xFF	; 255
    170e:	4f e7       	ldi	r20, 0x7F	; 127
    1710:	57 e4       	ldi	r21, 0x47	; 71
    1712:	dc 01       	movw	r26, r24
    1714:	6d 91       	ld	r22, X+
    1716:	7d 91       	ld	r23, X+
    1718:	8d 91       	ld	r24, X+
    171a:	9c 91       	ld	r25, X
    171c:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    1720:	88 23       	and	r24, r24
    1722:	09 f0       	breq	.+2      	; 0x1726 <L0^A>

00001724 <L0^A>:
    1724:	0c f4       	brge	.+2      	; 0x1728 <.Loc.199>

00001726 <L0^A>:
    1726:	71 c0       	rjmp	.+226    	; 0x180a <.L81>

00001728 <.Loc.199>:
		__ticks = (uint16_t) (__ms * 10.0);
    1728:	ce 01       	movw	r24, r28
    172a:	8f 5b       	subi	r24, 0xBF	; 191
    172c:	9f 4f       	sbci	r25, 0xFF	; 255
    172e:	20 e0       	ldi	r18, 0x00	; 0
    1730:	30 e0       	ldi	r19, 0x00	; 0
    1732:	40 e2       	ldi	r20, 0x20	; 32
    1734:	51 e4       	ldi	r21, 0x41	; 65
    1736:	fc 01       	movw	r30, r24
    1738:	60 81       	ld	r22, Z
    173a:	71 81       	ldd	r23, Z+1	; 0x01
    173c:	82 81       	ldd	r24, Z+2	; 0x02
    173e:	93 81       	ldd	r25, Z+3	; 0x03
    1740:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1744:	c1 54       	subi	r28, 0x41	; 65
    1746:	df 4f       	sbci	r29, 0xFF	; 255
    1748:	68 83       	st	Y, r22
    174a:	79 83       	std	Y+1, r23	; 0x01
    174c:	8a 83       	std	Y+2, r24	; 0x02
    174e:	9b 83       	std	Y+3, r25	; 0x03
    1750:	cf 5b       	subi	r28, 0xBF	; 191
    1752:	d0 40       	sbci	r29, 0x00	; 0
    1754:	c1 54       	subi	r28, 0x41	; 65
    1756:	df 4f       	sbci	r29, 0xFF	; 255
    1758:	88 81       	ld	r24, Y
    175a:	99 81       	ldd	r25, Y+1	; 0x01
    175c:	aa 81       	ldd	r26, Y+2	; 0x02
    175e:	bb 81       	ldd	r27, Y+3	; 0x03
    1760:	cf 5b       	subi	r28, 0xBF	; 191
    1762:	d0 40       	sbci	r29, 0x00	; 0
    1764:	af 96       	adiw	r28, 0x2f	; 47
    1766:	8c af       	std	Y+60, r24	; 0x3c
    1768:	9d af       	std	Y+61, r25	; 0x3d
    176a:	ae af       	std	Y+62, r26	; 0x3e
    176c:	bf af       	std	Y+63, r27	; 0x3f
    176e:	af 97       	sbiw	r28, 0x2f	; 47

00001770 <.Loc.200>:
    1770:	8e 01       	movw	r16, r28
    1772:	07 5b       	subi	r16, 0xB7	; 183
    1774:	1f 4f       	sbci	r17, 0xFF	; 255
    1776:	af 96       	adiw	r28, 0x2f	; 47
    1778:	6c ad       	ldd	r22, Y+60	; 0x3c
    177a:	7d ad       	ldd	r23, Y+61	; 0x3d
    177c:	8e ad       	ldd	r24, Y+62	; 0x3e
    177e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1780:	af 97       	sbiw	r28, 0x2f	; 47
    1782:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1786:	cd 53       	subi	r28, 0x3D	; 61
    1788:	df 4f       	sbci	r29, 0xFF	; 255
    178a:	68 83       	st	Y, r22
    178c:	79 83       	std	Y+1, r23	; 0x01
    178e:	8a 83       	std	Y+2, r24	; 0x02
    1790:	9b 83       	std	Y+3, r25	; 0x03
    1792:	c3 5c       	subi	r28, 0xC3	; 195
    1794:	d0 40       	sbci	r29, 0x00	; 0
    1796:	cd 53       	subi	r28, 0x3D	; 61
    1798:	df 4f       	sbci	r29, 0xFF	; 255
    179a:	e8 81       	ld	r30, Y
    179c:	f9 81       	ldd	r31, Y+1	; 0x01
    179e:	c3 5c       	subi	r28, 0xC3	; 195
    17a0:	d0 40       	sbci	r29, 0x00	; 0
    17a2:	d8 01       	movw	r26, r16
    17a4:	11 96       	adiw	r26, 0x01	; 1
    17a6:	fc 93       	st	X, r31
    17a8:	ee 93       	st	-X, r30

000017aa <.Loc.201>:
		while(__ticks)
    17aa:	26 c0       	rjmp	.+76     	; 0x17f8 <.L58>

000017ac <.L59>:
    17ac:	ce 01       	movw	r24, r28
    17ae:	85 5b       	subi	r24, 0xB5	; 181
    17b0:	9f 4f       	sbci	r25, 0xFF	; 255
    17b2:	20 e9       	ldi	r18, 0x90	; 144
    17b4:	31 e0       	ldi	r19, 0x01	; 1
    17b6:	dc 01       	movw	r26, r24
    17b8:	2d 93       	st	X+, r18
    17ba:	3c 93       	st	X, r19

000017bc <.LBB67>:
    17bc:	ce 01       	movw	r24, r28
    17be:	85 5b       	subi	r24, 0xB5	; 181
    17c0:	9f 4f       	sbci	r25, 0xFF	; 255
    17c2:	fc 01       	movw	r30, r24
    17c4:	80 81       	ld	r24, Z
    17c6:	91 81       	ldd	r25, Z+1	; 0x01

000017c8 <.L1^B9>:
    17c8:	01 97       	sbiw	r24, 0x01	; 1
    17ca:	f1 f7       	brne	.-4      	; 0x17c8 <.L1^B9>
    17cc:	9e 01       	movw	r18, r28
    17ce:	25 5b       	subi	r18, 0xB5	; 181
    17d0:	3f 4f       	sbci	r19, 0xFF	; 255
    17d2:	d9 01       	movw	r26, r18
    17d4:	8d 93       	st	X+, r24
    17d6:	9c 93       	st	X, r25

000017d8 <.Loc.203>:
	...

000017da <.LBE67>:
			__ticks --;
    17da:	ce 01       	movw	r24, r28
    17dc:	87 5b       	subi	r24, 0xB7	; 183
    17de:	9f 4f       	sbci	r25, 0xFF	; 255
    17e0:	9e 01       	movw	r18, r28
    17e2:	27 5b       	subi	r18, 0xB7	; 183
    17e4:	3f 4f       	sbci	r19, 0xFF	; 255
    17e6:	f9 01       	movw	r30, r18
    17e8:	20 81       	ld	r18, Z
    17ea:	31 81       	ldd	r19, Z+1	; 0x01
    17ec:	21 50       	subi	r18, 0x01	; 1
    17ee:	31 09       	sbc	r19, r1
    17f0:	dc 01       	movw	r26, r24
    17f2:	11 96       	adiw	r26, 0x01	; 1
    17f4:	3c 93       	st	X, r19
    17f6:	2e 93       	st	-X, r18

000017f8 <.L58>:
		while(__ticks)
    17f8:	ce 01       	movw	r24, r28
    17fa:	87 5b       	subi	r24, 0xB7	; 183
    17fc:	9f 4f       	sbci	r25, 0xFF	; 255
    17fe:	fc 01       	movw	r30, r24
    1800:	80 81       	ld	r24, Z
    1802:	91 81       	ldd	r25, Z+1	; 0x01
    1804:	00 97       	sbiw	r24, 0x00	; 0
    1806:	91 f6       	brne	.-92     	; 0x17ac <.L59>

00001808 <.Loc.206>:
		return;
    1808:	3a c0       	rjmp	.+116    	; 0x187e <.L34>

0000180a <.L81>:
		__ticks = (uint16_t)__tmp;
    180a:	8e 01       	movw	r16, r28
    180c:	07 5b       	subi	r16, 0xB7	; 183
    180e:	1f 4f       	sbci	r17, 0xFF	; 255
    1810:	ce 01       	movw	r24, r28
    1812:	8b 5b       	subi	r24, 0xBB	; 187
    1814:	9f 4f       	sbci	r25, 0xFF	; 255
    1816:	dc 01       	movw	r26, r24
    1818:	6d 91       	ld	r22, X+
    181a:	7d 91       	ld	r23, X+
    181c:	8d 91       	ld	r24, X+
    181e:	9c 91       	ld	r25, X
    1820:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1824:	c9 53       	subi	r28, 0x39	; 57
    1826:	df 4f       	sbci	r29, 0xFF	; 255
    1828:	68 83       	st	Y, r22
    182a:	79 83       	std	Y+1, r23	; 0x01
    182c:	8a 83       	std	Y+2, r24	; 0x02
    182e:	9b 83       	std	Y+3, r25	; 0x03
    1830:	c7 5c       	subi	r28, 0xC7	; 199
    1832:	d0 40       	sbci	r29, 0x00	; 0
    1834:	c9 53       	subi	r28, 0x39	; 57
    1836:	df 4f       	sbci	r29, 0xFF	; 255
    1838:	88 81       	ld	r24, Y
    183a:	99 81       	ldd	r25, Y+1	; 0x01
    183c:	c7 5c       	subi	r28, 0xC7	; 199
    183e:	d0 40       	sbci	r29, 0x00	; 0
    1840:	f8 01       	movw	r30, r16
    1842:	91 83       	std	Z+1, r25	; 0x01
    1844:	80 83       	st	Z, r24

00001846 <.L55>:
    1846:	ce 01       	movw	r24, r28
    1848:	83 5b       	subi	r24, 0xB3	; 179
    184a:	9f 4f       	sbci	r25, 0xFF	; 255
    184c:	9e 01       	movw	r18, r28
    184e:	27 5b       	subi	r18, 0xB7	; 183
    1850:	3f 4f       	sbci	r19, 0xFF	; 255
    1852:	d9 01       	movw	r26, r18
    1854:	2d 91       	ld	r18, X+
    1856:	3c 91       	ld	r19, X
    1858:	fc 01       	movw	r30, r24
    185a:	31 83       	std	Z+1, r19	; 0x01
    185c:	20 83       	st	Z, r18

0000185e <.LBB69>:
    185e:	ce 01       	movw	r24, r28
    1860:	83 5b       	subi	r24, 0xB3	; 179
    1862:	9f 4f       	sbci	r25, 0xFF	; 255
    1864:	dc 01       	movw	r26, r24
    1866:	8d 91       	ld	r24, X+
    1868:	9c 91       	ld	r25, X
    186a:	11 97       	sbiw	r26, 0x01	; 1

0000186c <.L1^B10>:
    186c:	01 97       	sbiw	r24, 0x01	; 1
    186e:	f1 f7       	brne	.-4      	; 0x186c <.L1^B10>
    1870:	9e 01       	movw	r18, r28
    1872:	23 5b       	subi	r18, 0xB3	; 179
    1874:	3f 4f       	sbci	r19, 0xFF	; 255
    1876:	f9 01       	movw	r30, r18
    1878:	91 83       	std	Z+1, r25	; 0x01
    187a:	80 83       	st	Z, r24

0000187c <.Loc.209>:
	...

0000187e <.L34>:
    while (1) {
    187e:	a5 ca       	rjmp	.-2742   	; 0xdca <.L61>

00001880 <PIDController_Init>:
#include <avr/io.h>
#include "PID.h"

void PIDController_Init(PIDController* pid, float Kp, float Ki, float Kd, float output_min, float output_max) {
    1880:	8f 92       	push	r8
    1882:	9f 92       	push	r9
    1884:	af 92       	push	r10
    1886:	bf 92       	push	r11
    1888:	cf 92       	push	r12
    188a:	df 92       	push	r13
    188c:	ef 92       	push	r14
    188e:	ff 92       	push	r15
    1890:	0f 93       	push	r16
    1892:	1f 93       	push	r17
    1894:	cf 93       	push	r28
    1896:	df 93       	push	r29
    1898:	cd b7       	in	r28, 0x3d	; 61
    189a:	de b7       	in	r29, 0x3e	; 62
    189c:	62 97       	sbiw	r28, 0x12	; 18
    189e:	0f b6       	in	r0, 0x3f	; 63
    18a0:	f8 94       	cli
    18a2:	de bf       	out	0x3e, r29	; 62
    18a4:	0f be       	out	0x3f, r0	; 63
    18a6:	cd bf       	out	0x3d, r28	; 61
    18a8:	9a 83       	std	Y+2, r25	; 0x02
    18aa:	89 83       	std	Y+1, r24	; 0x01
    18ac:	4b 83       	std	Y+3, r20	; 0x03
    18ae:	5c 83       	std	Y+4, r21	; 0x04
    18b0:	6d 83       	std	Y+5, r22	; 0x05
    18b2:	7e 83       	std	Y+6, r23	; 0x06
    18b4:	0f 83       	std	Y+7, r16	; 0x07
    18b6:	18 87       	std	Y+8, r17	; 0x08
    18b8:	29 87       	std	Y+9, r18	; 0x09
    18ba:	3a 87       	std	Y+10, r19	; 0x0a
    18bc:	cb 86       	std	Y+11, r12	; 0x0b
    18be:	dc 86       	std	Y+12, r13	; 0x0c
    18c0:	ed 86       	std	Y+13, r14	; 0x0d
    18c2:	fe 86       	std	Y+14, r15	; 0x0e
    18c4:	8f 86       	std	Y+15, r8	; 0x0f
    18c6:	98 8a       	std	Y+16, r9	; 0x10
    18c8:	a9 8a       	std	Y+17, r10	; 0x11
    18ca:	ba 8a       	std	Y+18, r11	; 0x12

000018cc <.Loc.1>:
    pid->Kp = Kp;
    18cc:	29 81       	ldd	r18, Y+1	; 0x01
    18ce:	3a 81       	ldd	r19, Y+2	; 0x02
    18d0:	8b 81       	ldd	r24, Y+3	; 0x03
    18d2:	9c 81       	ldd	r25, Y+4	; 0x04
    18d4:	ad 81       	ldd	r26, Y+5	; 0x05
    18d6:	be 81       	ldd	r27, Y+6	; 0x06
    18d8:	f9 01       	movw	r30, r18
    18da:	80 83       	st	Z, r24
    18dc:	91 83       	std	Z+1, r25	; 0x01
    18de:	a2 83       	std	Z+2, r26	; 0x02
    18e0:	b3 83       	std	Z+3, r27	; 0x03

000018e2 <.Loc.2>:
    pid->Ki = Ki;
    18e2:	29 81       	ldd	r18, Y+1	; 0x01
    18e4:	3a 81       	ldd	r19, Y+2	; 0x02
    18e6:	8f 81       	ldd	r24, Y+7	; 0x07
    18e8:	98 85       	ldd	r25, Y+8	; 0x08
    18ea:	a9 85       	ldd	r26, Y+9	; 0x09
    18ec:	ba 85       	ldd	r27, Y+10	; 0x0a
    18ee:	f9 01       	movw	r30, r18
    18f0:	84 83       	std	Z+4, r24	; 0x04
    18f2:	95 83       	std	Z+5, r25	; 0x05
    18f4:	a6 83       	std	Z+6, r26	; 0x06
    18f6:	b7 83       	std	Z+7, r27	; 0x07

000018f8 <.Loc.3>:
    pid->Kd = Kd;
    18f8:	29 81       	ldd	r18, Y+1	; 0x01
    18fa:	3a 81       	ldd	r19, Y+2	; 0x02
    18fc:	8b 85       	ldd	r24, Y+11	; 0x0b
    18fe:	9c 85       	ldd	r25, Y+12	; 0x0c
    1900:	ad 85       	ldd	r26, Y+13	; 0x0d
    1902:	be 85       	ldd	r27, Y+14	; 0x0e
    1904:	f9 01       	movw	r30, r18
    1906:	80 87       	std	Z+8, r24	; 0x08
    1908:	91 87       	std	Z+9, r25	; 0x09
    190a:	a2 87       	std	Z+10, r26	; 0x0a
    190c:	b3 87       	std	Z+11, r27	; 0x0b

0000190e <.Loc.4>:
    pid->previous_error = 0;
    190e:	89 81       	ldd	r24, Y+1	; 0x01
    1910:	9a 81       	ldd	r25, Y+2	; 0x02
    1912:	fc 01       	movw	r30, r24
    1914:	14 86       	std	Z+12, r1	; 0x0c
    1916:	15 86       	std	Z+13, r1	; 0x0d
    1918:	16 86       	std	Z+14, r1	; 0x0e
    191a:	17 86       	std	Z+15, r1	; 0x0f

0000191c <.Loc.5>:
    pid->integral = 0;
    191c:	89 81       	ldd	r24, Y+1	; 0x01
    191e:	9a 81       	ldd	r25, Y+2	; 0x02
    1920:	fc 01       	movw	r30, r24
    1922:	10 8a       	std	Z+16, r1	; 0x10
    1924:	11 8a       	std	Z+17, r1	; 0x11
    1926:	12 8a       	std	Z+18, r1	; 0x12
    1928:	13 8a       	std	Z+19, r1	; 0x13

0000192a <.Loc.6>:
    pid->setpoint = 0;
    192a:	89 81       	ldd	r24, Y+1	; 0x01
    192c:	9a 81       	ldd	r25, Y+2	; 0x02
    192e:	fc 01       	movw	r30, r24
    1930:	14 8a       	std	Z+20, r1	; 0x14
    1932:	15 8a       	std	Z+21, r1	; 0x15
    1934:	16 8a       	std	Z+22, r1	; 0x16
    1936:	17 8a       	std	Z+23, r1	; 0x17

00001938 <.Loc.7>:
    pid->output_min = output_min;
    1938:	29 81       	ldd	r18, Y+1	; 0x01
    193a:	3a 81       	ldd	r19, Y+2	; 0x02
    193c:	8f 85       	ldd	r24, Y+15	; 0x0f
    193e:	98 89       	ldd	r25, Y+16	; 0x10
    1940:	a9 89       	ldd	r26, Y+17	; 0x11
    1942:	ba 89       	ldd	r27, Y+18	; 0x12
    1944:	f9 01       	movw	r30, r18
    1946:	84 8f       	std	Z+28, r24	; 0x1c
    1948:	95 8f       	std	Z+29, r25	; 0x1d
    194a:	a6 8f       	std	Z+30, r26	; 0x1e
    194c:	b7 8f       	std	Z+31, r27	; 0x1f

0000194e <.Loc.8>:
    pid->output_max = output_max;
    194e:	29 81       	ldd	r18, Y+1	; 0x01
    1950:	3a 81       	ldd	r19, Y+2	; 0x02
    1952:	8a a1       	ldd	r24, Y+34	; 0x22
    1954:	9b a1       	ldd	r25, Y+35	; 0x23
    1956:	ac a1       	ldd	r26, Y+36	; 0x24
    1958:	bd a1       	ldd	r27, Y+37	; 0x25
    195a:	f9 01       	movw	r30, r18
    195c:	80 a3       	std	Z+32, r24	; 0x20
    195e:	91 a3       	std	Z+33, r25	; 0x21
    1960:	a2 a3       	std	Z+34, r26	; 0x22
    1962:	b3 a3       	std	Z+35, r27	; 0x23

00001964 <.Loc.9>:
    pid->output = 0;
    1964:	89 81       	ldd	r24, Y+1	; 0x01
    1966:	9a 81       	ldd	r25, Y+2	; 0x02
    1968:	fc 01       	movw	r30, r24
    196a:	10 8e       	std	Z+24, r1	; 0x18
    196c:	11 8e       	std	Z+25, r1	; 0x19
    196e:	12 8e       	std	Z+26, r1	; 0x1a
    1970:	13 8e       	std	Z+27, r1	; 0x1b

00001972 <.Loc.10>:
}
    1972:	00 00       	nop
    1974:	62 96       	adiw	r28, 0x12	; 18
    1976:	0f b6       	in	r0, 0x3f	; 63
    1978:	f8 94       	cli
    197a:	de bf       	out	0x3e, r29	; 62
    197c:	0f be       	out	0x3f, r0	; 63
    197e:	cd bf       	out	0x3d, r28	; 61
    1980:	df 91       	pop	r29
    1982:	cf 91       	pop	r28
    1984:	1f 91       	pop	r17
    1986:	0f 91       	pop	r16
    1988:	ff 90       	pop	r15
    198a:	ef 90       	pop	r14
    198c:	df 90       	pop	r13
    198e:	cf 90       	pop	r12
    1990:	bf 90       	pop	r11
    1992:	af 90       	pop	r10
    1994:	9f 90       	pop	r9
    1996:	8f 90       	pop	r8
    1998:	08 95       	ret

0000199a <PIDController_Update>:

float PIDController_Update(PIDController* pid, float measured_value) {
    199a:	cf 93       	push	r28
    199c:	df 93       	push	r29
    199e:	cd b7       	in	r28, 0x3d	; 61
    19a0:	de b7       	in	r29, 0x3e	; 62
    19a2:	c6 55       	subi	r28, 0x56	; 86
    19a4:	d1 09       	sbc	r29, r1
    19a6:	0f b6       	in	r0, 0x3f	; 63
    19a8:	f8 94       	cli
    19aa:	de bf       	out	0x3e, r29	; 62
    19ac:	0f be       	out	0x3f, r0	; 63
    19ae:	cd bf       	out	0x3d, r28	; 61
    19b0:	9a 87       	std	Y+10, r25	; 0x0a
    19b2:	89 87       	std	Y+9, r24	; 0x09
    19b4:	4b 87       	std	Y+11, r20	; 0x0b
    19b6:	5c 87       	std	Y+12, r21	; 0x0c
    19b8:	6d 87       	std	Y+13, r22	; 0x0d
    19ba:	7e 87       	std	Y+14, r23	; 0x0e

000019bc <.Loc.12>:
    float error = pid->setpoint - measured_value;
    19bc:	89 85       	ldd	r24, Y+9	; 0x09
    19be:	9a 85       	ldd	r25, Y+10	; 0x0a
    19c0:	dc 01       	movw	r26, r24
    19c2:	54 96       	adiw	r26, 0x14	; 20
    19c4:	2d 91       	ld	r18, X+
    19c6:	3d 91       	ld	r19, X+
    19c8:	4d 91       	ld	r20, X+
    19ca:	5c 91       	ld	r21, X
    19cc:	57 97       	sbiw	r26, 0x17	; 23
    19ce:	2f 87       	std	Y+15, r18	; 0x0f
    19d0:	38 8b       	std	Y+16, r19	; 0x10
    19d2:	49 8b       	std	Y+17, r20	; 0x11
    19d4:	5a 8b       	std	Y+18, r21	; 0x12

000019d6 <.Loc.13>:
    19d6:	2b 85       	ldd	r18, Y+11	; 0x0b
    19d8:	3c 85       	ldd	r19, Y+12	; 0x0c
    19da:	4d 85       	ldd	r20, Y+13	; 0x0d
    19dc:	5e 85       	ldd	r21, Y+14	; 0x0e
    19de:	6f 85       	ldd	r22, Y+15	; 0x0f
    19e0:	78 89       	ldd	r23, Y+16	; 0x10
    19e2:	89 89       	ldd	r24, Y+17	; 0x11
    19e4:	9a 89       	ldd	r25, Y+18	; 0x12
    19e6:	0e 94 cc 14 	call	0x2998	; 0x2998 <__subsf3>
    19ea:	6f ab       	std	Y+55, r22	; 0x37
    19ec:	78 af       	std	Y+56, r23	; 0x38
    19ee:	89 af       	std	Y+57, r24	; 0x39
    19f0:	9a af       	std	Y+58, r25	; 0x3a
    19f2:	2f a9       	ldd	r18, Y+55	; 0x37
    19f4:	38 ad       	ldd	r19, Y+56	; 0x38
    19f6:	49 ad       	ldd	r20, Y+57	; 0x39
    19f8:	5a ad       	ldd	r21, Y+58	; 0x3a
    19fa:	29 83       	std	Y+1, r18	; 0x01
    19fc:	3a 83       	std	Y+2, r19	; 0x02
    19fe:	4b 83       	std	Y+3, r20	; 0x03
    1a00:	5c 83       	std	Y+4, r21	; 0x04

00001a02 <.Loc.14>:
    pid->integral += error;
    1a02:	89 85       	ldd	r24, Y+9	; 0x09
    1a04:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a06:	dc 01       	movw	r26, r24
    1a08:	50 96       	adiw	r26, 0x10	; 16
    1a0a:	2d 91       	ld	r18, X+
    1a0c:	3d 91       	ld	r19, X+
    1a0e:	4d 91       	ld	r20, X+
    1a10:	5c 91       	ld	r21, X
    1a12:	53 97       	sbiw	r26, 0x13	; 19
    1a14:	2b 8b       	std	Y+19, r18	; 0x13
    1a16:	3c 8b       	std	Y+20, r19	; 0x14
    1a18:	4d 8b       	std	Y+21, r20	; 0x15
    1a1a:	5e 8b       	std	Y+22, r21	; 0x16

00001a1c <.Loc.15>:
    1a1c:	29 81       	ldd	r18, Y+1	; 0x01
    1a1e:	3a 81       	ldd	r19, Y+2	; 0x02
    1a20:	4b 81       	ldd	r20, Y+3	; 0x03
    1a22:	5c 81       	ldd	r21, Y+4	; 0x04
    1a24:	6b 89       	ldd	r22, Y+19	; 0x13
    1a26:	7c 89       	ldd	r23, Y+20	; 0x14
    1a28:	8d 89       	ldd	r24, Y+21	; 0x15
    1a2a:	9e 89       	ldd	r25, Y+22	; 0x16
    1a2c:	0e 94 cd 14 	call	0x299a	; 0x299a <__addsf3>
    1a30:	6b af       	std	Y+59, r22	; 0x3b
    1a32:	7c af       	std	Y+60, r23	; 0x3c
    1a34:	8d af       	std	Y+61, r24	; 0x3d
    1a36:	9e af       	std	Y+62, r25	; 0x3e
    1a38:	8b ad       	ldd	r24, Y+59	; 0x3b
    1a3a:	9c ad       	ldd	r25, Y+60	; 0x3c
    1a3c:	ad ad       	ldd	r26, Y+61	; 0x3d
    1a3e:	be ad       	ldd	r27, Y+62	; 0x3e
    1a40:	29 85       	ldd	r18, Y+9	; 0x09
    1a42:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a44:	f9 01       	movw	r30, r18
    1a46:	80 8b       	std	Z+16, r24	; 0x10
    1a48:	91 8b       	std	Z+17, r25	; 0x11
    1a4a:	a2 8b       	std	Z+18, r26	; 0x12
    1a4c:	b3 8b       	std	Z+19, r27	; 0x13

00001a4e <.Loc.16>:
    float derivative = error - pid->previous_error;
    1a4e:	89 85       	ldd	r24, Y+9	; 0x09
    1a50:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a52:	fc 01       	movw	r30, r24
    1a54:	84 85       	ldd	r24, Z+12	; 0x0c
    1a56:	95 85       	ldd	r25, Z+13	; 0x0d
    1a58:	a6 85       	ldd	r26, Z+14	; 0x0e
    1a5a:	b7 85       	ldd	r27, Z+15	; 0x0f

00001a5c <.Loc.17>:
    1a5c:	9c 01       	movw	r18, r24
    1a5e:	ad 01       	movw	r20, r26
    1a60:	69 81       	ldd	r22, Y+1	; 0x01
    1a62:	7a 81       	ldd	r23, Y+2	; 0x02
    1a64:	8b 81       	ldd	r24, Y+3	; 0x03
    1a66:	9c 81       	ldd	r25, Y+4	; 0x04
    1a68:	0e 94 cc 14 	call	0x2998	; 0x2998 <__subsf3>
    1a6c:	23 96       	adiw	r28, 0x03	; 3
    1a6e:	6c af       	std	Y+60, r22	; 0x3c
    1a70:	7d af       	std	Y+61, r23	; 0x3d
    1a72:	8e af       	std	Y+62, r24	; 0x3e
    1a74:	9f af       	std	Y+63, r25	; 0x3f
    1a76:	23 97       	sbiw	r28, 0x03	; 3
    1a78:	23 96       	adiw	r28, 0x03	; 3
    1a7a:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a7c:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a7e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a80:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a82:	23 97       	sbiw	r28, 0x03	; 3
    1a84:	2d 83       	std	Y+5, r18	; 0x05
    1a86:	3e 83       	std	Y+6, r19	; 0x06
    1a88:	4f 83       	std	Y+7, r20	; 0x07
    1a8a:	58 87       	std	Y+8, r21	; 0x08

00001a8c <.Loc.18>:
    pid->output = (pid->Kp * error) + (pid->Ki * pid->integral) + (pid->Kd * derivative);
    1a8c:	89 85       	ldd	r24, Y+9	; 0x09
    1a8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a90:	dc 01       	movw	r26, r24
    1a92:	2d 91       	ld	r18, X+
    1a94:	3d 91       	ld	r19, X+
    1a96:	4d 91       	ld	r20, X+
    1a98:	5c 91       	ld	r21, X
    1a9a:	2f 8b       	std	Y+23, r18	; 0x17
    1a9c:	38 8f       	std	Y+24, r19	; 0x18
    1a9e:	49 8f       	std	Y+25, r20	; 0x19
    1aa0:	5a 8f       	std	Y+26, r21	; 0x1a

00001aa2 <.Loc.19>:
    1aa2:	29 81       	ldd	r18, Y+1	; 0x01
    1aa4:	3a 81       	ldd	r19, Y+2	; 0x02
    1aa6:	4b 81       	ldd	r20, Y+3	; 0x03
    1aa8:	5c 81       	ldd	r21, Y+4	; 0x04
    1aaa:	6f 89       	ldd	r22, Y+23	; 0x17
    1aac:	78 8d       	ldd	r23, Y+24	; 0x18
    1aae:	89 8d       	ldd	r24, Y+25	; 0x19
    1ab0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ab2:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1ab6:	27 96       	adiw	r28, 0x07	; 7
    1ab8:	6c af       	std	Y+60, r22	; 0x3c
    1aba:	7d af       	std	Y+61, r23	; 0x3d
    1abc:	8e af       	std	Y+62, r24	; 0x3e
    1abe:	9f af       	std	Y+63, r25	; 0x3f
    1ac0:	27 97       	sbiw	r28, 0x07	; 7
    1ac2:	27 96       	adiw	r28, 0x07	; 7
    1ac4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ac6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ac8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1aca:	5f ad       	ldd	r21, Y+63	; 0x3f
    1acc:	27 97       	sbiw	r28, 0x07	; 7
    1ace:	2b 8f       	std	Y+27, r18	; 0x1b
    1ad0:	3c 8f       	std	Y+28, r19	; 0x1c
    1ad2:	4d 8f       	std	Y+29, r20	; 0x1d
    1ad4:	5e 8f       	std	Y+30, r21	; 0x1e

00001ad6 <.Loc.20>:
    1ad6:	89 85       	ldd	r24, Y+9	; 0x09
    1ad8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ada:	dc 01       	movw	r26, r24
    1adc:	14 96       	adiw	r26, 0x04	; 4
    1ade:	2d 91       	ld	r18, X+
    1ae0:	3d 91       	ld	r19, X+
    1ae2:	4d 91       	ld	r20, X+
    1ae4:	5c 91       	ld	r21, X
    1ae6:	17 97       	sbiw	r26, 0x07	; 7
    1ae8:	2f 8f       	std	Y+31, r18	; 0x1f
    1aea:	38 a3       	std	Y+32, r19	; 0x20
    1aec:	49 a3       	std	Y+33, r20	; 0x21
    1aee:	5a a3       	std	Y+34, r21	; 0x22

00001af0 <.Loc.21>:
    1af0:	89 85       	ldd	r24, Y+9	; 0x09
    1af2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af4:	fc 01       	movw	r30, r24
    1af6:	80 89       	ldd	r24, Z+16	; 0x10
    1af8:	91 89       	ldd	r25, Z+17	; 0x11
    1afa:	a2 89       	ldd	r26, Z+18	; 0x12
    1afc:	b3 89       	ldd	r27, Z+19	; 0x13

00001afe <.Loc.22>:
    1afe:	9c 01       	movw	r18, r24
    1b00:	ad 01       	movw	r20, r26
    1b02:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1b04:	78 a1       	ldd	r23, Y+32	; 0x20
    1b06:	89 a1       	ldd	r24, Y+33	; 0x21
    1b08:	9a a1       	ldd	r25, Y+34	; 0x22
    1b0a:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1b0e:	2b 96       	adiw	r28, 0x0b	; 11
    1b10:	6c af       	std	Y+60, r22	; 0x3c
    1b12:	7d af       	std	Y+61, r23	; 0x3d
    1b14:	8e af       	std	Y+62, r24	; 0x3e
    1b16:	9f af       	std	Y+63, r25	; 0x3f
    1b18:	2b 97       	sbiw	r28, 0x0b	; 11
    1b1a:	2b 96       	adiw	r28, 0x0b	; 11
    1b1c:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b1e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1b20:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b22:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b24:	2b 97       	sbiw	r28, 0x0b	; 11

00001b26 <.Loc.23>:
    1b26:	9c 01       	movw	r18, r24
    1b28:	ad 01       	movw	r20, r26
    1b2a:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b2c:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b2e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1b30:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1b32:	0e 94 cd 14 	call	0x299a	; 0x299a <__addsf3>
    1b36:	2f 96       	adiw	r28, 0x0f	; 15
    1b38:	6c af       	std	Y+60, r22	; 0x3c
    1b3a:	7d af       	std	Y+61, r23	; 0x3d
    1b3c:	8e af       	std	Y+62, r24	; 0x3e
    1b3e:	9f af       	std	Y+63, r25	; 0x3f
    1b40:	2f 97       	sbiw	r28, 0x0f	; 15
    1b42:	2f 96       	adiw	r28, 0x0f	; 15
    1b44:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b46:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b48:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b4a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b4c:	2f 97       	sbiw	r28, 0x0f	; 15
    1b4e:	2b a3       	std	Y+35, r18	; 0x23
    1b50:	3c a3       	std	Y+36, r19	; 0x24
    1b52:	4d a3       	std	Y+37, r20	; 0x25
    1b54:	5e a3       	std	Y+38, r21	; 0x26

00001b56 <.Loc.24>:
    1b56:	89 85       	ldd	r24, Y+9	; 0x09
    1b58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b5a:	dc 01       	movw	r26, r24
    1b5c:	18 96       	adiw	r26, 0x08	; 8
    1b5e:	2d 91       	ld	r18, X+
    1b60:	3d 91       	ld	r19, X+
    1b62:	4d 91       	ld	r20, X+
    1b64:	5c 91       	ld	r21, X
    1b66:	1b 97       	sbiw	r26, 0x0b	; 11
    1b68:	2f a3       	std	Y+39, r18	; 0x27
    1b6a:	38 a7       	std	Y+40, r19	; 0x28
    1b6c:	49 a7       	std	Y+41, r20	; 0x29
    1b6e:	5a a7       	std	Y+42, r21	; 0x2a

00001b70 <.Loc.25>:
    1b70:	2d 81       	ldd	r18, Y+5	; 0x05
    1b72:	3e 81       	ldd	r19, Y+6	; 0x06
    1b74:	4f 81       	ldd	r20, Y+7	; 0x07
    1b76:	58 85       	ldd	r21, Y+8	; 0x08
    1b78:	6f a1       	ldd	r22, Y+39	; 0x27
    1b7a:	78 a5       	ldd	r23, Y+40	; 0x28
    1b7c:	89 a5       	ldd	r24, Y+41	; 0x29
    1b7e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b80:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1b84:	63 96       	adiw	r28, 0x13	; 19
    1b86:	6c af       	std	Y+60, r22	; 0x3c
    1b88:	7d af       	std	Y+61, r23	; 0x3d
    1b8a:	8e af       	std	Y+62, r24	; 0x3e
    1b8c:	9f af       	std	Y+63, r25	; 0x3f
    1b8e:	63 97       	sbiw	r28, 0x13	; 19
    1b90:	63 96       	adiw	r28, 0x13	; 19
    1b92:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b94:	9d ad       	ldd	r25, Y+61	; 0x3d
    1b96:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b98:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b9a:	63 97       	sbiw	r28, 0x13	; 19

00001b9c <.Loc.26>:
    1b9c:	9c 01       	movw	r18, r24
    1b9e:	ad 01       	movw	r20, r26
    1ba0:	6b a1       	ldd	r22, Y+35	; 0x23
    1ba2:	7c a1       	ldd	r23, Y+36	; 0x24
    1ba4:	8d a1       	ldd	r24, Y+37	; 0x25
    1ba6:	9e a1       	ldd	r25, Y+38	; 0x26
    1ba8:	0e 94 cd 14 	call	0x299a	; 0x299a <__addsf3>
    1bac:	67 96       	adiw	r28, 0x17	; 23
    1bae:	6c af       	std	Y+60, r22	; 0x3c
    1bb0:	7d af       	std	Y+61, r23	; 0x3d
    1bb2:	8e af       	std	Y+62, r24	; 0x3e
    1bb4:	9f af       	std	Y+63, r25	; 0x3f
    1bb6:	67 97       	sbiw	r28, 0x17	; 23
    1bb8:	67 96       	adiw	r28, 0x17	; 23
    1bba:	8c ad       	ldd	r24, Y+60	; 0x3c
    1bbc:	9d ad       	ldd	r25, Y+61	; 0x3d
    1bbe:	ae ad       	ldd	r26, Y+62	; 0x3e
    1bc0:	bf ad       	ldd	r27, Y+63	; 0x3f
    1bc2:	67 97       	sbiw	r28, 0x17	; 23

00001bc4 <.Loc.27>:
    1bc4:	29 85       	ldd	r18, Y+9	; 0x09
    1bc6:	3a 85       	ldd	r19, Y+10	; 0x0a
    1bc8:	f9 01       	movw	r30, r18
    1bca:	80 8f       	std	Z+24, r24	; 0x18
    1bcc:	91 8f       	std	Z+25, r25	; 0x19
    1bce:	a2 8f       	std	Z+26, r26	; 0x1a
    1bd0:	b3 8f       	std	Z+27, r27	; 0x1b

00001bd2 <.Loc.28>:

    // Clamp output to min/max
    if (pid->output > pid->output_max) {
    1bd2:	89 85       	ldd	r24, Y+9	; 0x09
    1bd4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bd6:	dc 01       	movw	r26, r24
    1bd8:	58 96       	adiw	r26, 0x18	; 24
    1bda:	2d 91       	ld	r18, X+
    1bdc:	3d 91       	ld	r19, X+
    1bde:	4d 91       	ld	r20, X+
    1be0:	5c 91       	ld	r21, X
    1be2:	5b 97       	sbiw	r26, 0x1b	; 27
    1be4:	2b a7       	std	Y+43, r18	; 0x2b
    1be6:	3c a7       	std	Y+44, r19	; 0x2c
    1be8:	4d a7       	std	Y+45, r20	; 0x2d
    1bea:	5e a7       	std	Y+46, r21	; 0x2e

00001bec <.Loc.29>:
    1bec:	89 85       	ldd	r24, Y+9	; 0x09
    1bee:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bf0:	fc 01       	movw	r30, r24
    1bf2:	80 a1       	ldd	r24, Z+32	; 0x20
    1bf4:	91 a1       	ldd	r25, Z+33	; 0x21
    1bf6:	a2 a1       	ldd	r26, Z+34	; 0x22
    1bf8:	b3 a1       	ldd	r27, Z+35	; 0x23

00001bfa <.Loc.30>:
    1bfa:	9c 01       	movw	r18, r24
    1bfc:	ad 01       	movw	r20, r26
    1bfe:	6b a5       	ldd	r22, Y+43	; 0x2b
    1c00:	7c a5       	ldd	r23, Y+44	; 0x2c
    1c02:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c04:	9e a5       	ldd	r25, Y+46	; 0x2e
    1c06:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    1c0a:	88 23       	and	r24, r24
    1c0c:	81 f0       	breq	.+32     	; 0x1c2e <.L10>
    1c0e:	7c f0       	brlt	.+30     	; 0x1c2e <.L10>

00001c10 <.Loc.31>:
        pid->output = pid->output_max;
    1c10:	89 85       	ldd	r24, Y+9	; 0x09
    1c12:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c14:	fc 01       	movw	r30, r24
    1c16:	80 a1       	ldd	r24, Z+32	; 0x20
    1c18:	91 a1       	ldd	r25, Z+33	; 0x21
    1c1a:	a2 a1       	ldd	r26, Z+34	; 0x22
    1c1c:	b3 a1       	ldd	r27, Z+35	; 0x23

00001c1e <.Loc.32>:
    1c1e:	29 85       	ldd	r18, Y+9	; 0x09
    1c20:	3a 85       	ldd	r19, Y+10	; 0x0a
    1c22:	f9 01       	movw	r30, r18
    1c24:	80 8f       	std	Z+24, r24	; 0x18
    1c26:	91 8f       	std	Z+25, r25	; 0x19
    1c28:	a2 8f       	std	Z+26, r26	; 0x1a
    1c2a:	b3 8f       	std	Z+27, r27	; 0x1b
    1c2c:	2c c0       	rjmp	.+88     	; 0x1c86 <.L5>

00001c2e <.L10>:
    } else if (pid->output < pid->output_min) {
    1c2e:	89 85       	ldd	r24, Y+9	; 0x09
    1c30:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c32:	dc 01       	movw	r26, r24
    1c34:	58 96       	adiw	r26, 0x18	; 24
    1c36:	2d 91       	ld	r18, X+
    1c38:	3d 91       	ld	r19, X+
    1c3a:	4d 91       	ld	r20, X+
    1c3c:	5c 91       	ld	r21, X
    1c3e:	5b 97       	sbiw	r26, 0x1b	; 27
    1c40:	2f a7       	std	Y+47, r18	; 0x2f
    1c42:	38 ab       	std	Y+48, r19	; 0x30
    1c44:	49 ab       	std	Y+49, r20	; 0x31
    1c46:	5a ab       	std	Y+50, r21	; 0x32

00001c48 <.Loc.34>:
    1c48:	89 85       	ldd	r24, Y+9	; 0x09
    1c4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c4c:	fc 01       	movw	r30, r24
    1c4e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1c50:	95 8d       	ldd	r25, Z+29	; 0x1d
    1c52:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1c54:	b7 8d       	ldd	r27, Z+31	; 0x1f

00001c56 <.Loc.35>:
    1c56:	9c 01       	movw	r18, r24
    1c58:	ad 01       	movw	r20, r26
    1c5a:	6f a5       	ldd	r22, Y+47	; 0x2f
    1c5c:	78 a9       	ldd	r23, Y+48	; 0x30
    1c5e:	89 a9       	ldd	r24, Y+49	; 0x31
    1c60:	9a a9       	ldd	r25, Y+50	; 0x32
    1c62:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    1c66:	88 23       	and	r24, r24
    1c68:	74 f4       	brge	.+28     	; 0x1c86 <.L5>

00001c6a <.Loc.36>:
        pid->output = pid->output_min;
    1c6a:	89 85       	ldd	r24, Y+9	; 0x09
    1c6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c6e:	fc 01       	movw	r30, r24
    1c70:	84 8d       	ldd	r24, Z+28	; 0x1c
    1c72:	95 8d       	ldd	r25, Z+29	; 0x1d
    1c74:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1c76:	b7 8d       	ldd	r27, Z+31	; 0x1f

00001c78 <.Loc.37>:
    1c78:	29 85       	ldd	r18, Y+9	; 0x09
    1c7a:	3a 85       	ldd	r19, Y+10	; 0x0a
    1c7c:	f9 01       	movw	r30, r18
    1c7e:	80 8f       	std	Z+24, r24	; 0x18
    1c80:	91 8f       	std	Z+25, r25	; 0x19
    1c82:	a2 8f       	std	Z+26, r26	; 0x1a
    1c84:	b3 8f       	std	Z+27, r27	; 0x1b

00001c86 <.L5>:
    }

    pid->previous_error = error;
    1c86:	29 85       	ldd	r18, Y+9	; 0x09
    1c88:	3a 85       	ldd	r19, Y+10	; 0x0a
    1c8a:	89 81       	ldd	r24, Y+1	; 0x01
    1c8c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c8e:	ab 81       	ldd	r26, Y+3	; 0x03
    1c90:	bc 81       	ldd	r27, Y+4	; 0x04
    1c92:	f9 01       	movw	r30, r18
    1c94:	84 87       	std	Z+12, r24	; 0x0c
    1c96:	95 87       	std	Z+13, r25	; 0x0d
    1c98:	a6 87       	std	Z+14, r26	; 0x0e
    1c9a:	b7 87       	std	Z+15, r27	; 0x0f

00001c9c <.Loc.39>:

    return pid->output;
    1c9c:	89 85       	ldd	r24, Y+9	; 0x09
    1c9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ca0:	fc 01       	movw	r30, r24
    1ca2:	80 8d       	ldd	r24, Z+24	; 0x18
    1ca4:	91 8d       	ldd	r25, Z+25	; 0x19
    1ca6:	a2 8d       	ldd	r26, Z+26	; 0x1a
    1ca8:	b3 8d       	ldd	r27, Z+27	; 0x1b
    1caa:	8b ab       	std	Y+51, r24	; 0x33
    1cac:	9c ab       	std	Y+52, r25	; 0x34
    1cae:	ad ab       	std	Y+53, r26	; 0x35
    1cb0:	be ab       	std	Y+54, r27	; 0x36

00001cb2 <.Loc.40>:
}
    1cb2:	6b a9       	ldd	r22, Y+51	; 0x33
    1cb4:	7c a9       	ldd	r23, Y+52	; 0x34
    1cb6:	8d a9       	ldd	r24, Y+53	; 0x35
    1cb8:	9e a9       	ldd	r25, Y+54	; 0x36
    1cba:	ca 5a       	subi	r28, 0xAA	; 170
    1cbc:	df 4f       	sbci	r29, 0xFF	; 255
    1cbe:	0f b6       	in	r0, 0x3f	; 63
    1cc0:	f8 94       	cli
    1cc2:	de bf       	out	0x3e, r29	; 62
    1cc4:	0f be       	out	0x3f, r0	; 63
    1cc6:	cd bf       	out	0x3d, r28	; 61
    1cc8:	df 91       	pop	r29
    1cca:	cf 91       	pop	r28
    1ccc:	08 95       	ret

00001cce <init_ultrasonics>:
#include "ultrasone.h"
#include <avr/io.h>
#include <util/delay.h>

// Initialize all three ultrasonic sensors
void init_ultrasonics(void) {
    1cce:	cf 93       	push	r28
    1cd0:	df 93       	push	r29
    1cd2:	cd b7       	in	r28, 0x3d	; 61
    1cd4:	de b7       	in	r29, 0x3e	; 62

00001cd6 <.Loc.1>:
    // Sensor 1
    DDRH |= (1 << US1_TRIG_PIN);  // Set trigger pin as output
    1cd6:	81 e0       	ldi	r24, 0x01	; 1
    1cd8:	91 e0       	ldi	r25, 0x01	; 1
    1cda:	fc 01       	movw	r30, r24
    1cdc:	20 81       	ld	r18, Z
    1cde:	81 e0       	ldi	r24, 0x01	; 1
    1ce0:	91 e0       	ldi	r25, 0x01	; 1

00001ce2 <.Loc.2>:
    1ce2:	21 60       	ori	r18, 0x01	; 1
    1ce4:	fc 01       	movw	r30, r24
    1ce6:	20 83       	st	Z, r18

00001ce8 <.Loc.3>:
    DDRH &= ~(1 << US1_ECHO_PIN); // Set echo pin as input
    1ce8:	81 e0       	ldi	r24, 0x01	; 1
    1cea:	91 e0       	ldi	r25, 0x01	; 1
    1cec:	fc 01       	movw	r30, r24
    1cee:	20 81       	ld	r18, Z

00001cf0 <.Loc.4>:
    1cf0:	81 e0       	ldi	r24, 0x01	; 1
    1cf2:	91 e0       	ldi	r25, 0x01	; 1

00001cf4 <.Loc.5>:
    1cf4:	2d 7f       	andi	r18, 0xFD	; 253
    1cf6:	fc 01       	movw	r30, r24
    1cf8:	20 83       	st	Z, r18

00001cfa <.Loc.6>:
    PORTH &= ~(1 << US1_TRIG_PIN);
    1cfa:	82 e0       	ldi	r24, 0x02	; 2
    1cfc:	91 e0       	ldi	r25, 0x01	; 1
    1cfe:	fc 01       	movw	r30, r24
    1d00:	20 81       	ld	r18, Z

00001d02 <.Loc.7>:
    1d02:	82 e0       	ldi	r24, 0x02	; 2
    1d04:	91 e0       	ldi	r25, 0x01	; 1

00001d06 <.Loc.8>:
    1d06:	2e 7f       	andi	r18, 0xFE	; 254
    1d08:	fc 01       	movw	r30, r24
    1d0a:	20 83       	st	Z, r18

00001d0c <.Loc.9>:

    // Sensor 2
    DDRJ |= (1 << US2_TRIG_PIN);  // Set trigger pin as output
    1d0c:	84 e0       	ldi	r24, 0x04	; 4
    1d0e:	91 e0       	ldi	r25, 0x01	; 1
    1d10:	fc 01       	movw	r30, r24
    1d12:	20 81       	ld	r18, Z
    1d14:	84 e0       	ldi	r24, 0x04	; 4
    1d16:	91 e0       	ldi	r25, 0x01	; 1

00001d18 <.Loc.10>:
    1d18:	22 60       	ori	r18, 0x02	; 2
    1d1a:	fc 01       	movw	r30, r24
    1d1c:	20 83       	st	Z, r18

00001d1e <.Loc.11>:
    DDRJ &= ~(1 << US2_ECHO_PIN); // Set echo pin as input
    1d1e:	84 e0       	ldi	r24, 0x04	; 4
    1d20:	91 e0       	ldi	r25, 0x01	; 1
    1d22:	fc 01       	movw	r30, r24
    1d24:	20 81       	ld	r18, Z

00001d26 <.Loc.12>:
    1d26:	84 e0       	ldi	r24, 0x04	; 4
    1d28:	91 e0       	ldi	r25, 0x01	; 1

00001d2a <.Loc.13>:
    1d2a:	2e 7f       	andi	r18, 0xFE	; 254
    1d2c:	fc 01       	movw	r30, r24
    1d2e:	20 83       	st	Z, r18

00001d30 <.Loc.14>:
    PORTJ &= ~(1 << US2_TRIG_PIN);
    1d30:	85 e0       	ldi	r24, 0x05	; 5
    1d32:	91 e0       	ldi	r25, 0x01	; 1
    1d34:	fc 01       	movw	r30, r24
    1d36:	20 81       	ld	r18, Z

00001d38 <.Loc.15>:
    1d38:	85 e0       	ldi	r24, 0x05	; 5
    1d3a:	91 e0       	ldi	r25, 0x01	; 1

00001d3c <.Loc.16>:
    1d3c:	2d 7f       	andi	r18, 0xFD	; 253
    1d3e:	fc 01       	movw	r30, r24
    1d40:	20 83       	st	Z, r18

00001d42 <.Loc.17>:

    // Sensor 3
    DDRH |= (1 << US3_TRIG_PIN);  // Set trigger pin as output
    1d42:	81 e0       	ldi	r24, 0x01	; 1
    1d44:	91 e0       	ldi	r25, 0x01	; 1
    1d46:	fc 01       	movw	r30, r24
    1d48:	20 81       	ld	r18, Z
    1d4a:	81 e0       	ldi	r24, 0x01	; 1
    1d4c:	91 e0       	ldi	r25, 0x01	; 1

00001d4e <.Loc.18>:
    1d4e:	20 61       	ori	r18, 0x10	; 16
    1d50:	fc 01       	movw	r30, r24
    1d52:	20 83       	st	Z, r18

00001d54 <.Loc.19>:
    DDRH &= ~(1 << US3_ECHO_PIN); // Set echo pin as input
    1d54:	81 e0       	ldi	r24, 0x01	; 1
    1d56:	91 e0       	ldi	r25, 0x01	; 1
    1d58:	fc 01       	movw	r30, r24
    1d5a:	20 81       	ld	r18, Z

00001d5c <.Loc.20>:
    1d5c:	81 e0       	ldi	r24, 0x01	; 1
    1d5e:	91 e0       	ldi	r25, 0x01	; 1

00001d60 <.Loc.21>:
    1d60:	2f 7d       	andi	r18, 0xDF	; 223
    1d62:	fc 01       	movw	r30, r24
    1d64:	20 83       	st	Z, r18

00001d66 <.Loc.22>:
    PORTH &= ~(1 << US3_TRIG_PIN);
    1d66:	82 e0       	ldi	r24, 0x02	; 2
    1d68:	91 e0       	ldi	r25, 0x01	; 1
    1d6a:	fc 01       	movw	r30, r24
    1d6c:	20 81       	ld	r18, Z

00001d6e <.Loc.23>:
    1d6e:	82 e0       	ldi	r24, 0x02	; 2
    1d70:	91 e0       	ldi	r25, 0x01	; 1

00001d72 <.Loc.24>:
    1d72:	2f 7e       	andi	r18, 0xEF	; 239
    1d74:	fc 01       	movw	r30, r24
    1d76:	20 83       	st	Z, r18

00001d78 <.Loc.25>:
/*
       // Sensor 4
    DDRD |= (1 << US4_TRIG_PIN);  // Set trigger pin as output
    DDRD &= ~(1 << US4_ECHO_PIN); // Set echo pin as input
    PORTD &= ~(1 << US4_TRIG_PIN);*/
}
    1d78:	00 00       	nop
    1d7a:	df 91       	pop	r29
    1d7c:	cf 91       	pop	r28
    1d7e:	08 95       	ret

00001d80 <measure_distance1>:

// Measure distance with sensor 1
float measure_distance1(void) {
    1d80:	cf 93       	push	r28
    1d82:	df 93       	push	r29
    1d84:	cd b7       	in	r28, 0x3d	; 61
    1d86:	de b7       	in	r29, 0x3e	; 62
    1d88:	c6 56       	subi	r28, 0x66	; 102
    1d8a:	d1 09       	sbc	r29, r1
    1d8c:	0f b6       	in	r0, 0x3f	; 63
    1d8e:	f8 94       	cli
    1d90:	de bf       	out	0x3e, r29	; 62
    1d92:	0f be       	out	0x3f, r0	; 63
    1d94:	cd bf       	out	0x3d, r28	; 61

00001d96 <.Loc.27>:
    uint16_t duration;

    // Trigger pulse
    PORTH |= (1 << US1_TRIG_PIN);
    1d96:	82 e0       	ldi	r24, 0x02	; 2
    1d98:	91 e0       	ldi	r25, 0x01	; 1
    1d9a:	dc 01       	movw	r26, r24
    1d9c:	2c 91       	ld	r18, X
    1d9e:	82 e0       	ldi	r24, 0x02	; 2
    1da0:	91 e0       	ldi	r25, 0x01	; 1

00001da2 <.Loc.28>:
    1da2:	21 60       	ori	r18, 0x01	; 1
    1da4:	fc 01       	movw	r30, r24
    1da6:	20 83       	st	Z, r18
    1da8:	80 e0       	ldi	r24, 0x00	; 0
    1daa:	90 e0       	ldi	r25, 0x00	; 0
    1dac:	a0 e2       	ldi	r26, 0x20	; 32
    1dae:	b1 e4       	ldi	r27, 0x41	; 65
    1db0:	8f 83       	std	Y+7, r24	; 0x07
    1db2:	98 87       	std	Y+8, r25	; 0x08
    1db4:	a9 87       	std	Y+9, r26	; 0x09
    1db6:	ba 87       	std	Y+10, r27	; 0x0a

00001db8 <.LBB56>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
    1db8:	2b ea       	ldi	r18, 0xAB	; 171
    1dba:	3a ea       	ldi	r19, 0xAA	; 170
    1dbc:	4a ea       	ldi	r20, 0xAA	; 170
    1dbe:	50 e4       	ldi	r21, 0x40	; 64
    1dc0:	6f 81       	ldd	r22, Y+7	; 0x07
    1dc2:	78 85       	ldd	r23, Y+8	; 0x08
    1dc4:	89 85       	ldd	r24, Y+9	; 0x09
    1dc6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dc8:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1dcc:	6f ab       	std	Y+55, r22	; 0x37
    1dce:	78 af       	std	Y+56, r23	; 0x38
    1dd0:	89 af       	std	Y+57, r24	; 0x39
    1dd2:	9a af       	std	Y+58, r25	; 0x3a
    1dd4:	2f a9       	ldd	r18, Y+55	; 0x37
    1dd6:	38 ad       	ldd	r19, Y+56	; 0x38
    1dd8:	49 ad       	ldd	r20, Y+57	; 0x39
    1dda:	5a ad       	ldd	r21, Y+58	; 0x3a
    1ddc:	2b 87       	std	Y+11, r18	; 0x0b
    1dde:	3c 87       	std	Y+12, r19	; 0x0c
    1de0:	4d 87       	std	Y+13, r20	; 0x0d
    1de2:	5e 87       	std	Y+14, r21	; 0x0e

00001de4 <.Loc.30>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1de4:	20 e0       	ldi	r18, 0x00	; 0
    1de6:	30 e0       	ldi	r19, 0x00	; 0
    1de8:	40 e8       	ldi	r20, 0x80	; 128
    1dea:	50 e4       	ldi	r21, 0x40	; 64
    1dec:	6f 81       	ldd	r22, Y+7	; 0x07
    1dee:	78 85       	ldd	r23, Y+8	; 0x08
    1df0:	89 85       	ldd	r24, Y+9	; 0x09
    1df2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1df4:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1df8:	6b af       	std	Y+59, r22	; 0x3b
    1dfa:	7c af       	std	Y+60, r23	; 0x3c
    1dfc:	8d af       	std	Y+61, r24	; 0x3d
    1dfe:	9e af       	std	Y+62, r25	; 0x3e
    1e00:	8b ad       	ldd	r24, Y+59	; 0x3b
    1e02:	9c ad       	ldd	r25, Y+60	; 0x3c
    1e04:	ad ad       	ldd	r26, Y+61	; 0x3d
    1e06:	be ad       	ldd	r27, Y+62	; 0x3e
    1e08:	8f 87       	std	Y+15, r24	; 0x0f
    1e0a:	98 8b       	std	Y+16, r25	; 0x10
    1e0c:	a9 8b       	std	Y+17, r26	; 0x11
    1e0e:	ba 8b       	std	Y+18, r27	; 0x12

00001e10 <.Loc.31>:
	if (__tmp < 1.0)
    1e10:	20 e0       	ldi	r18, 0x00	; 0
    1e12:	30 e0       	ldi	r19, 0x00	; 0
    1e14:	40 e8       	ldi	r20, 0x80	; 128
    1e16:	5f e3       	ldi	r21, 0x3F	; 63
    1e18:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e1a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e20:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    1e24:	88 23       	and	r24, r24
    1e26:	1c f4       	brge	.+6      	; 0x1e2e <.L29>

00001e28 <.Loc.32>:
		__ticks = 1;
    1e28:	81 e0       	ldi	r24, 0x01	; 1
    1e2a:	8b 8b       	std	Y+19, r24	; 0x13
    1e2c:	fb c0       	rjmp	.+502    	; 0x2024 <.L5>

00001e2e <.L29>:
	else if (__tmp2 > 65535)
    1e2e:	20 e0       	ldi	r18, 0x00	; 0
    1e30:	3f ef       	ldi	r19, 0xFF	; 255
    1e32:	4f e7       	ldi	r20, 0x7F	; 127
    1e34:	57 e4       	ldi	r21, 0x47	; 71
    1e36:	6f 85       	ldd	r22, Y+15	; 0x0f
    1e38:	78 89       	ldd	r23, Y+16	; 0x10
    1e3a:	89 89       	ldd	r24, Y+17	; 0x11
    1e3c:	9a 89       	ldd	r25, Y+18	; 0x12
    1e3e:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    1e42:	88 23       	and	r24, r24
    1e44:	09 f0       	breq	.+2      	; 0x1e48 <L0^A>

00001e46 <L0^A>:
    1e46:	0c f4       	brge	.+2      	; 0x1e4a <.Loc.34>

00001e48 <L0^A>:
    1e48:	b2 c0       	rjmp	.+356    	; 0x1fae <.L30>

00001e4a <.Loc.34>:
	{
		_delay_ms(__us / 1000.0);
    1e4a:	20 e0       	ldi	r18, 0x00	; 0
    1e4c:	30 e0       	ldi	r19, 0x00	; 0
    1e4e:	4a e7       	ldi	r20, 0x7A	; 122
    1e50:	54 e4       	ldi	r21, 0x44	; 68
    1e52:	6f 81       	ldd	r22, Y+7	; 0x07
    1e54:	78 85       	ldd	r23, Y+8	; 0x08
    1e56:	89 85       	ldd	r24, Y+9	; 0x09
    1e58:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e5a:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    1e5e:	23 96       	adiw	r28, 0x03	; 3
    1e60:	6c af       	std	Y+60, r22	; 0x3c
    1e62:	7d af       	std	Y+61, r23	; 0x3d
    1e64:	8e af       	std	Y+62, r24	; 0x3e
    1e66:	9f af       	std	Y+63, r25	; 0x3f
    1e68:	23 97       	sbiw	r28, 0x03	; 3
    1e6a:	23 96       	adiw	r28, 0x03	; 3
    1e6c:	8c ad       	ldd	r24, Y+60	; 0x3c
    1e6e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1e70:	ae ad       	ldd	r26, Y+62	; 0x3e
    1e72:	bf ad       	ldd	r27, Y+63	; 0x3f
    1e74:	23 97       	sbiw	r28, 0x03	; 3
    1e76:	8c 8b       	std	Y+20, r24	; 0x14
    1e78:	9d 8b       	std	Y+21, r25	; 0x15
    1e7a:	ae 8b       	std	Y+22, r26	; 0x16
    1e7c:	bf 8b       	std	Y+23, r27	; 0x17

00001e7e <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    1e7e:	20 e0       	ldi	r18, 0x00	; 0
    1e80:	30 e0       	ldi	r19, 0x00	; 0
    1e82:	4a e7       	ldi	r20, 0x7A	; 122
    1e84:	55 e4       	ldi	r21, 0x45	; 69
    1e86:	6c 89       	ldd	r22, Y+20	; 0x14
    1e88:	7d 89       	ldd	r23, Y+21	; 0x15
    1e8a:	8e 89       	ldd	r24, Y+22	; 0x16
    1e8c:	9f 89       	ldd	r25, Y+23	; 0x17
    1e8e:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1e92:	27 96       	adiw	r28, 0x07	; 7
    1e94:	6c af       	std	Y+60, r22	; 0x3c
    1e96:	7d af       	std	Y+61, r23	; 0x3d
    1e98:	8e af       	std	Y+62, r24	; 0x3e
    1e9a:	9f af       	std	Y+63, r25	; 0x3f
    1e9c:	27 97       	sbiw	r28, 0x07	; 7
    1e9e:	27 96       	adiw	r28, 0x07	; 7
    1ea0:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ea2:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ea4:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ea6:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ea8:	27 97       	sbiw	r28, 0x07	; 7
    1eaa:	28 8f       	std	Y+24, r18	; 0x18
    1eac:	39 8f       	std	Y+25, r19	; 0x19
    1eae:	4a 8f       	std	Y+26, r20	; 0x1a
    1eb0:	5b 8f       	std	Y+27, r21	; 0x1b

00001eb2 <.Loc.36>:
	if (__tmp < 1.0)
    1eb2:	20 e0       	ldi	r18, 0x00	; 0
    1eb4:	30 e0       	ldi	r19, 0x00	; 0
    1eb6:	40 e8       	ldi	r20, 0x80	; 128
    1eb8:	5f e3       	ldi	r21, 0x3F	; 63
    1eba:	68 8d       	ldd	r22, Y+24	; 0x18
    1ebc:	79 8d       	ldd	r23, Y+25	; 0x19
    1ebe:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1ec0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1ec2:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    1ec6:	88 23       	and	r24, r24
    1ec8:	2c f4       	brge	.+10     	; 0x1ed4 <.L31>

00001eca <.Loc.37>:
		__ticks = 1;
    1eca:	81 e0       	ldi	r24, 0x01	; 1
    1ecc:	90 e0       	ldi	r25, 0x00	; 0
    1ece:	9d 8f       	std	Y+29, r25	; 0x1d
    1ed0:	8c 8f       	std	Y+28, r24	; 0x1c
    1ed2:	62 c0       	rjmp	.+196    	; 0x1f98 <.L10>

00001ed4 <.L31>:
	else if (__tmp > 65535)
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	3f ef       	ldi	r19, 0xFF	; 255
    1ed8:	4f e7       	ldi	r20, 0x7F	; 127
    1eda:	57 e4       	ldi	r21, 0x47	; 71
    1edc:	68 8d       	ldd	r22, Y+24	; 0x18
    1ede:	79 8d       	ldd	r23, Y+25	; 0x19
    1ee0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1ee2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1ee4:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    1ee8:	88 23       	and	r24, r24
    1eea:	09 f0       	breq	.+2      	; 0x1eee <L0^A>

00001eec <L0^A>:
    1eec:	0c f4       	brge	.+2      	; 0x1ef0 <.Loc.39>

00001eee <L0^A>:
    1eee:	42 c0       	rjmp	.+132    	; 0x1f74 <.L32>

00001ef0 <.Loc.39>:
		__ticks = (uint16_t) (__ms * 10.0);
    1ef0:	20 e0       	ldi	r18, 0x00	; 0
    1ef2:	30 e0       	ldi	r19, 0x00	; 0
    1ef4:	40 e2       	ldi	r20, 0x20	; 32
    1ef6:	51 e4       	ldi	r21, 0x41	; 65
    1ef8:	6c 89       	ldd	r22, Y+20	; 0x14
    1efa:	7d 89       	ldd	r23, Y+21	; 0x15
    1efc:	8e 89       	ldd	r24, Y+22	; 0x16
    1efe:	9f 89       	ldd	r25, Y+23	; 0x17
    1f00:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    1f04:	2b 96       	adiw	r28, 0x0b	; 11
    1f06:	6c af       	std	Y+60, r22	; 0x3c
    1f08:	7d af       	std	Y+61, r23	; 0x3d
    1f0a:	8e af       	std	Y+62, r24	; 0x3e
    1f0c:	9f af       	std	Y+63, r25	; 0x3f
    1f0e:	2b 97       	sbiw	r28, 0x0b	; 11
    1f10:	2b 96       	adiw	r28, 0x0b	; 11
    1f12:	8c ad       	ldd	r24, Y+60	; 0x3c
    1f14:	9d ad       	ldd	r25, Y+61	; 0x3d
    1f16:	ae ad       	ldd	r26, Y+62	; 0x3e
    1f18:	bf ad       	ldd	r27, Y+63	; 0x3f
    1f1a:	2b 97       	sbiw	r28, 0x0b	; 11
    1f1c:	8f a7       	std	Y+47, r24	; 0x2f
    1f1e:	98 ab       	std	Y+48, r25	; 0x30
    1f20:	a9 ab       	std	Y+49, r26	; 0x31
    1f22:	ba ab       	std	Y+50, r27	; 0x32

00001f24 <.Loc.40>:
    1f24:	6f a5       	ldd	r22, Y+47	; 0x2f
    1f26:	78 a9       	ldd	r23, Y+48	; 0x30
    1f28:	89 a9       	ldd	r24, Y+49	; 0x31
    1f2a:	9a a9       	ldd	r25, Y+50	; 0x32
    1f2c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1f30:	2f 96       	adiw	r28, 0x0f	; 15
    1f32:	6c af       	std	Y+60, r22	; 0x3c
    1f34:	7d af       	std	Y+61, r23	; 0x3d
    1f36:	8e af       	std	Y+62, r24	; 0x3e
    1f38:	9f af       	std	Y+63, r25	; 0x3f
    1f3a:	2f 97       	sbiw	r28, 0x0f	; 15
    1f3c:	2d 96       	adiw	r28, 0x0d	; 13
    1f3e:	ae ad       	ldd	r26, Y+62	; 0x3e
    1f40:	bf ad       	ldd	r27, Y+63	; 0x3f
    1f42:	2d 97       	sbiw	r28, 0x0d	; 13
    1f44:	bd 8f       	std	Y+29, r27	; 0x1d
    1f46:	ac 8f       	std	Y+28, r26	; 0x1c

00001f48 <.Loc.41>:
		while(__ticks)
    1f48:	10 c0       	rjmp	.+32     	; 0x1f6a <.L13>

00001f4a <.L14>:
    1f4a:	80 e9       	ldi	r24, 0x90	; 144
    1f4c:	91 e0       	ldi	r25, 0x01	; 1
    1f4e:	9f 8f       	std	Y+31, r25	; 0x1f
    1f50:	8e 8f       	std	Y+30, r24	; 0x1e

00001f52 <.LBB60>:
    1f52:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f54:	9f 8d       	ldd	r25, Y+31	; 0x1f

00001f56 <.L1^B1>:
    1f56:	01 97       	sbiw	r24, 0x01	; 1
    1f58:	f1 f7       	brne	.-4      	; 0x1f56 <.L1^B1>
    1f5a:	9f 8f       	std	Y+31, r25	; 0x1f
    1f5c:	8e 8f       	std	Y+30, r24	; 0x1e

00001f5e <.Loc.43>:
	...

00001f60 <.LBE60>:
			__ticks --;
    1f60:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f62:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1f64:	01 97       	sbiw	r24, 0x01	; 1
    1f66:	9d 8f       	std	Y+29, r25	; 0x1d
    1f68:	8c 8f       	std	Y+28, r24	; 0x1c

00001f6a <.L13>:
		while(__ticks)
    1f6a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f6c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1f6e:	00 97       	sbiw	r24, 0x00	; 0
    1f70:	61 f7       	brne	.-40     	; 0x1f4a <.L14>

00001f72 <.Loc.46>:
		return;
    1f72:	58 c0       	rjmp	.+176    	; 0x2024 <.L5>

00001f74 <.L32>:
		__ticks = (uint16_t)__tmp;
    1f74:	68 8d       	ldd	r22, Y+24	; 0x18
    1f76:	79 8d       	ldd	r23, Y+25	; 0x19
    1f78:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1f7a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1f7c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1f80:	63 96       	adiw	r28, 0x13	; 19
    1f82:	6c af       	std	Y+60, r22	; 0x3c
    1f84:	7d af       	std	Y+61, r23	; 0x3d
    1f86:	8e af       	std	Y+62, r24	; 0x3e
    1f88:	9f af       	std	Y+63, r25	; 0x3f
    1f8a:	63 97       	sbiw	r28, 0x13	; 19
    1f8c:	61 96       	adiw	r28, 0x11	; 17
    1f8e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1f90:	ff ad       	ldd	r31, Y+63	; 0x3f
    1f92:	61 97       	sbiw	r28, 0x11	; 17
    1f94:	fd 8f       	std	Y+29, r31	; 0x1d
    1f96:	ec 8f       	std	Y+28, r30	; 0x1c

00001f98 <.L10>:
    1f98:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f9a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1f9c:	99 a3       	std	Y+33, r25	; 0x21
    1f9e:	88 a3       	std	Y+32, r24	; 0x20

00001fa0 <.LBB62>:
    1fa0:	88 a1       	ldd	r24, Y+32	; 0x20
    1fa2:	99 a1       	ldd	r25, Y+33	; 0x21

00001fa4 <.L1^B2>:
    1fa4:	01 97       	sbiw	r24, 0x01	; 1
    1fa6:	f1 f7       	brne	.-4      	; 0x1fa4 <.L1^B2>
    1fa8:	99 a3       	std	Y+33, r25	; 0x21
    1faa:	88 a3       	std	Y+32, r24	; 0x20

00001fac <.Loc.49>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
    1fac:	3b c0       	rjmp	.+118    	; 0x2024 <.L5>

00001fae <.L30>:
	}
	else if (__tmp > 255)
    1fae:	20 e0       	ldi	r18, 0x00	; 0
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	4f e7       	ldi	r20, 0x7F	; 127
    1fb4:	53 e4       	ldi	r21, 0x43	; 67
    1fb6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fb8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fba:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fbc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fbe:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    1fc2:	88 23       	and	r24, r24
    1fc4:	f9 f0       	breq	.+62     	; 0x2004 <.L33>
    1fc6:	f4 f0       	brlt	.+60     	; 0x2004 <.L33>

00001fc8 <.LBB64>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1fc8:	6f 85       	ldd	r22, Y+15	; 0x0f
    1fca:	78 89       	ldd	r23, Y+16	; 0x10
    1fcc:	89 89       	ldd	r24, Y+17	; 0x11
    1fce:	9a 89       	ldd	r25, Y+18	; 0x12
    1fd0:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    1fd4:	67 96       	adiw	r28, 0x17	; 23
    1fd6:	6c af       	std	Y+60, r22	; 0x3c
    1fd8:	7d af       	std	Y+61, r23	; 0x3d
    1fda:	8e af       	std	Y+62, r24	; 0x3e
    1fdc:	9f af       	std	Y+63, r25	; 0x3f
    1fde:	67 97       	sbiw	r28, 0x17	; 23
    1fe0:	65 96       	adiw	r28, 0x15	; 21
    1fe2:	2e ad       	ldd	r18, Y+62	; 0x3e
    1fe4:	3f ad       	ldd	r19, Y+63	; 0x3f
    1fe6:	65 97       	sbiw	r28, 0x15	; 21
    1fe8:	3b a3       	std	Y+35, r19	; 0x23
    1fea:	2a a3       	std	Y+34, r18	; 0x22
    1fec:	8a a1       	ldd	r24, Y+34	; 0x22
    1fee:	9b a1       	ldd	r25, Y+35	; 0x23
    1ff0:	9d a3       	std	Y+37, r25	; 0x25
    1ff2:	8c a3       	std	Y+36, r24	; 0x24

00001ff4 <.LBB65>:
	__asm__ volatile (
    1ff4:	8c a1       	ldd	r24, Y+36	; 0x24
    1ff6:	9d a1       	ldd	r25, Y+37	; 0x25

00001ff8 <.L1^B3>:
    1ff8:	01 97       	sbiw	r24, 0x01	; 1
    1ffa:	f1 f7       	brne	.-4      	; 0x1ff8 <.L1^B3>
    1ffc:	9d a3       	std	Y+37, r25	; 0x25
    1ffe:	8c a3       	std	Y+36, r24	; 0x24

00002000 <.Loc.53>:
	...

00002002 <.LBE65>:
		_delay_loop_2(__ticks);
		return;
    2002:	17 c0       	rjmp	.+46     	; 0x2032 <.L18>

00002004 <.L33>:
	}
	else
		__ticks = (uint8_t)__tmp;
    2004:	6b 85       	ldd	r22, Y+11	; 0x0b
    2006:	7c 85       	ldd	r23, Y+12	; 0x0c
    2008:	8d 85       	ldd	r24, Y+13	; 0x0d
    200a:	9e 85       	ldd	r25, Y+14	; 0x0e
    200c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    2010:	6b 96       	adiw	r28, 0x1b	; 27
    2012:	6c af       	std	Y+60, r22	; 0x3c
    2014:	7d af       	std	Y+61, r23	; 0x3d
    2016:	8e af       	std	Y+62, r24	; 0x3e
    2018:	9f af       	std	Y+63, r25	; 0x3f
    201a:	6b 97       	sbiw	r28, 0x1b	; 27
    201c:	68 96       	adiw	r28, 0x18	; 24
    201e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2020:	68 97       	sbiw	r28, 0x18	; 24
    2022:	3b 8b       	std	Y+19, r19	; 0x13

00002024 <.L5>:
    2024:	8b 89       	ldd	r24, Y+19	; 0x13
    2026:	8e a3       	std	Y+38, r24	; 0x26

00002028 <.LBB67>:
	__asm__ volatile (
    2028:	8e a1       	ldd	r24, Y+38	; 0x26

0000202a <.L1^B4>:
    202a:	8a 95       	dec	r24
    202c:	f1 f7       	brne	.-4      	; 0x202a <.L1^B4>
    202e:	8e a3       	std	Y+38, r24	; 0x26

00002030 <.Loc.57>:
	...

00002032 <.L18>:
    _delay_us(10);
    PORTH &= ~(1 << US1_TRIG_PIN);
    2032:	82 e0       	ldi	r24, 0x02	; 2
    2034:	91 e0       	ldi	r25, 0x01	; 1
    2036:	dc 01       	movw	r26, r24
    2038:	2c 91       	ld	r18, X

0000203a <.Loc.59>:
    203a:	82 e0       	ldi	r24, 0x02	; 2
    203c:	91 e0       	ldi	r25, 0x01	; 1

0000203e <.Loc.60>:
    203e:	2e 7f       	andi	r18, 0xFE	; 254
    2040:	fc 01       	movw	r30, r24
    2042:	20 83       	st	Z, r18

00002044 <.Loc.61>:
	...

00002046 <.L19>:

    // Wait for echo pin to go high
    while (!(PINH & (1 << US1_ECHO_PIN)));
    2046:	80 e0       	ldi	r24, 0x00	; 0
    2048:	91 e0       	ldi	r25, 0x01	; 1
    204a:	dc 01       	movw	r26, r24
    204c:	8c 91       	ld	r24, X

0000204e <.Loc.63>:
    204e:	88 2f       	mov	r24, r24
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	82 70       	andi	r24, 0x02	; 2
    2054:	99 27       	eor	r25, r25

00002056 <.Loc.64>:
    2056:	00 97       	sbiw	r24, 0x00	; 0
    2058:	b1 f3       	breq	.-20     	; 0x2046 <.L19>

0000205a <.Loc.65>:

    // Start timer
    TCNT1 = 0;
    205a:	84 e8       	ldi	r24, 0x84	; 132
    205c:	90 e0       	ldi	r25, 0x00	; 0

0000205e <.Loc.66>:
    205e:	fc 01       	movw	r30, r24
    2060:	11 82       	std	Z+1, r1	; 0x01
    2062:	10 82       	st	Z, r1

00002064 <.Loc.67>:
    TCCR1B |= (1 << CS11); // Prescaler of 8
    2064:	81 e8       	ldi	r24, 0x81	; 129
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	dc 01       	movw	r26, r24
    206a:	2c 91       	ld	r18, X
    206c:	81 e8       	ldi	r24, 0x81	; 129
    206e:	90 e0       	ldi	r25, 0x00	; 0

00002070 <.Loc.68>:
    2070:	22 60       	ori	r18, 0x02	; 2
    2072:	fc 01       	movw	r30, r24
    2074:	20 83       	st	Z, r18

00002076 <.Loc.69>:

    // Wait for echo pin to go low
    while (PINH & (1 << US1_ECHO_PIN)) {
    2076:	0b c0       	rjmp	.+22     	; 0x208e <.L20>

00002078 <.L22>:
        if (TCNT1 > 60000) {
    2078:	84 e8       	ldi	r24, 0x84	; 132
    207a:	90 e0       	ldi	r25, 0x00	; 0
    207c:	dc 01       	movw	r26, r24
    207e:	8d 91       	ld	r24, X+
    2080:	9c 91       	ld	r25, X
    2082:	11 97       	sbiw	r26, 0x01	; 1

00002084 <.Loc.71>:
    2084:	80 36       	cpi	r24, 0x60	; 96
    2086:	ba ee       	ldi	r27, 0xEA	; 234
    2088:	9b 07       	cpc	r25, r27
    208a:	09 f0       	breq	.+2      	; 0x208e <.L20>

0000208c <L0^A>:
    208c:	58 f4       	brcc	.+22     	; 0x20a4 <.L34>

0000208e <.L20>:
    while (PINH & (1 << US1_ECHO_PIN)) {
    208e:	80 e0       	ldi	r24, 0x00	; 0
    2090:	91 e0       	ldi	r25, 0x01	; 1
    2092:	fc 01       	movw	r30, r24
    2094:	80 81       	ld	r24, Z

00002096 <.Loc.73>:
    2096:	88 2f       	mov	r24, r24
    2098:	90 e0       	ldi	r25, 0x00	; 0
    209a:	82 70       	andi	r24, 0x02	; 2
    209c:	99 27       	eor	r25, r25

0000209e <.Loc.74>:
    209e:	00 97       	sbiw	r24, 0x00	; 0
    20a0:	59 f7       	brne	.-42     	; 0x2078 <.L22>
    20a2:	01 c0       	rjmp	.+2      	; 0x20a6 <.L21>

000020a4 <.L34>:
	...

000020a6 <.L21>:
            break;
        }
    }

    // Stop timer
    TCCR1B &= ~(1 << CS11);
    20a6:	81 e8       	ldi	r24, 0x81	; 129
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	dc 01       	movw	r26, r24
    20ac:	2c 91       	ld	r18, X

000020ae <.Loc.77>:
    20ae:	81 e8       	ldi	r24, 0x81	; 129
    20b0:	90 e0       	ldi	r25, 0x00	; 0

000020b2 <.Loc.78>:
    20b2:	2d 7f       	andi	r18, 0xFD	; 253
    20b4:	fc 01       	movw	r30, r24
    20b6:	20 83       	st	Z, r18

000020b8 <.Loc.79>:

    // Read timer value
    duration = TCNT1;
    20b8:	84 e8       	ldi	r24, 0x84	; 132
    20ba:	90 e0       	ldi	r25, 0x00	; 0

000020bc <.Loc.80>:
    20bc:	dc 01       	movw	r26, r24
    20be:	8d 91       	ld	r24, X+
    20c0:	9c 91       	ld	r25, X
    20c2:	9a 83       	std	Y+2, r25	; 0x02
    20c4:	89 83       	std	Y+1, r24	; 0x01

000020c6 <.Loc.81>:

    // Convert duration to distance in cm
    float distance = duration / 58.0 / 2.0;
    20c6:	89 81       	ldd	r24, Y+1	; 0x01
    20c8:	9a 81       	ldd	r25, Y+2	; 0x02
    20ca:	9c 01       	movw	r18, r24
    20cc:	40 e0       	ldi	r20, 0x00	; 0
    20ce:	50 e0       	ldi	r21, 0x00	; 0
    20d0:	6f 96       	adiw	r28, 0x1f	; 31
    20d2:	2c af       	std	Y+60, r18	; 0x3c
    20d4:	3d af       	std	Y+61, r19	; 0x3d
    20d6:	4e af       	std	Y+62, r20	; 0x3e
    20d8:	5f af       	std	Y+63, r21	; 0x3f
    20da:	6f 97       	sbiw	r28, 0x1f	; 31
    20dc:	6f 96       	adiw	r28, 0x1f	; 31
    20de:	6c ad       	ldd	r22, Y+60	; 0x3c
    20e0:	7d ad       	ldd	r23, Y+61	; 0x3d
    20e2:	8e ad       	ldd	r24, Y+62	; 0x3e
    20e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    20e6:	6f 97       	sbiw	r28, 0x1f	; 31
    20e8:	0e 94 df 15 	call	0x2bbe	; 0x2bbe <__floatunsisf>
    20ec:	6f a3       	std	Y+39, r22	; 0x27
    20ee:	78 a7       	std	Y+40, r23	; 0x28
    20f0:	89 a7       	std	Y+41, r24	; 0x29
    20f2:	9a a7       	std	Y+42, r25	; 0x2a
    20f4:	20 e0       	ldi	r18, 0x00	; 0
    20f6:	30 e0       	ldi	r19, 0x00	; 0
    20f8:	48 e6       	ldi	r20, 0x68	; 104
    20fa:	52 e4       	ldi	r21, 0x42	; 66
    20fc:	6f a1       	ldd	r22, Y+39	; 0x27
    20fe:	78 a5       	ldd	r23, Y+40	; 0x28
    2100:	89 a5       	ldd	r24, Y+41	; 0x29
    2102:	9a a5       	ldd	r25, Y+42	; 0x2a
    2104:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    2108:	a3 96       	adiw	r28, 0x23	; 35
    210a:	6c af       	std	Y+60, r22	; 0x3c
    210c:	7d af       	std	Y+61, r23	; 0x3d
    210e:	8e af       	std	Y+62, r24	; 0x3e
    2110:	9f af       	std	Y+63, r25	; 0x3f
    2112:	a3 97       	sbiw	r28, 0x23	; 35
    2114:	a3 96       	adiw	r28, 0x23	; 35
    2116:	8c ad       	ldd	r24, Y+60	; 0x3c
    2118:	9d ad       	ldd	r25, Y+61	; 0x3d
    211a:	ae ad       	ldd	r26, Y+62	; 0x3e
    211c:	bf ad       	ldd	r27, Y+63	; 0x3f
    211e:	a3 97       	sbiw	r28, 0x23	; 35
    2120:	8b a7       	std	Y+43, r24	; 0x2b
    2122:	9c a7       	std	Y+44, r25	; 0x2c
    2124:	ad a7       	std	Y+45, r26	; 0x2d
    2126:	be a7       	std	Y+46, r27	; 0x2e

00002128 <.Loc.82>:
    2128:	20 e0       	ldi	r18, 0x00	; 0
    212a:	30 e0       	ldi	r19, 0x00	; 0
    212c:	40 e0       	ldi	r20, 0x00	; 0
    212e:	50 e4       	ldi	r21, 0x40	; 64
    2130:	6b a5       	ldd	r22, Y+43	; 0x2b
    2132:	7c a5       	ldd	r23, Y+44	; 0x2c
    2134:	8d a5       	ldd	r24, Y+45	; 0x2d
    2136:	9e a5       	ldd	r25, Y+46	; 0x2e
    2138:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    213c:	a7 96       	adiw	r28, 0x27	; 39
    213e:	6c af       	std	Y+60, r22	; 0x3c
    2140:	7d af       	std	Y+61, r23	; 0x3d
    2142:	8e af       	std	Y+62, r24	; 0x3e
    2144:	9f af       	std	Y+63, r25	; 0x3f
    2146:	a7 97       	sbiw	r28, 0x27	; 39
    2148:	a7 96       	adiw	r28, 0x27	; 39
    214a:	2c ad       	ldd	r18, Y+60	; 0x3c
    214c:	3d ad       	ldd	r19, Y+61	; 0x3d
    214e:	4e ad       	ldd	r20, Y+62	; 0x3e
    2150:	5f ad       	ldd	r21, Y+63	; 0x3f
    2152:	a7 97       	sbiw	r28, 0x27	; 39
    2154:	2b 83       	std	Y+3, r18	; 0x03
    2156:	3c 83       	std	Y+4, r19	; 0x04
    2158:	4d 83       	std	Y+5, r20	; 0x05
    215a:	5e 83       	std	Y+6, r21	; 0x06

0000215c <.Loc.83>:

    return distance;
    215c:	8b 81       	ldd	r24, Y+3	; 0x03
    215e:	9c 81       	ldd	r25, Y+4	; 0x04
    2160:	ad 81       	ldd	r26, Y+5	; 0x05
    2162:	be 81       	ldd	r27, Y+6	; 0x06
    2164:	8b ab       	std	Y+51, r24	; 0x33
    2166:	9c ab       	std	Y+52, r25	; 0x34
    2168:	ad ab       	std	Y+53, r26	; 0x35
    216a:	be ab       	std	Y+54, r27	; 0x36

0000216c <.Loc.84>:
}
    216c:	6b a9       	ldd	r22, Y+51	; 0x33
    216e:	7c a9       	ldd	r23, Y+52	; 0x34
    2170:	8d a9       	ldd	r24, Y+53	; 0x35
    2172:	9e a9       	ldd	r25, Y+54	; 0x36
    2174:	ca 59       	subi	r28, 0x9A	; 154
    2176:	df 4f       	sbci	r29, 0xFF	; 255
    2178:	0f b6       	in	r0, 0x3f	; 63
    217a:	f8 94       	cli
    217c:	de bf       	out	0x3e, r29	; 62
    217e:	0f be       	out	0x3f, r0	; 63
    2180:	cd bf       	out	0x3d, r28	; 61
    2182:	df 91       	pop	r29
    2184:	cf 91       	pop	r28
    2186:	08 95       	ret

00002188 <measure_distance2>:

// Measure distance with sensor 2
float measure_distance2(void) {
    2188:	cf 93       	push	r28
    218a:	df 93       	push	r29
    218c:	cd b7       	in	r28, 0x3d	; 61
    218e:	de b7       	in	r29, 0x3e	; 62
    2190:	c6 56       	subi	r28, 0x66	; 102
    2192:	d1 09       	sbc	r29, r1
    2194:	0f b6       	in	r0, 0x3f	; 63
    2196:	f8 94       	cli
    2198:	de bf       	out	0x3e, r29	; 62
    219a:	0f be       	out	0x3f, r0	; 63
    219c:	cd bf       	out	0x3d, r28	; 61

0000219e <.Loc.86>:
    uint16_t duration;

    // Trigger pulse
    PORTJ |= (1 << US2_TRIG_PIN);
    219e:	85 e0       	ldi	r24, 0x05	; 5
    21a0:	91 e0       	ldi	r25, 0x01	; 1
    21a2:	dc 01       	movw	r26, r24
    21a4:	2c 91       	ld	r18, X
    21a6:	85 e0       	ldi	r24, 0x05	; 5
    21a8:	91 e0       	ldi	r25, 0x01	; 1

000021aa <.Loc.87>:
    21aa:	22 60       	ori	r18, 0x02	; 2
    21ac:	fc 01       	movw	r30, r24
    21ae:	20 83       	st	Z, r18
    21b0:	80 e0       	ldi	r24, 0x00	; 0
    21b2:	90 e0       	ldi	r25, 0x00	; 0
    21b4:	a0 e2       	ldi	r26, 0x20	; 32
    21b6:	b1 e4       	ldi	r27, 0x41	; 65
    21b8:	8f 83       	std	Y+7, r24	; 0x07
    21ba:	98 87       	std	Y+8, r25	; 0x08
    21bc:	a9 87       	std	Y+9, r26	; 0x09
    21be:	ba 87       	std	Y+10, r27	; 0x0a

000021c0 <.LBB69>:
	__tmp = ((F_CPU) / 3e6) * __us;
    21c0:	2b ea       	ldi	r18, 0xAB	; 171
    21c2:	3a ea       	ldi	r19, 0xAA	; 170
    21c4:	4a ea       	ldi	r20, 0xAA	; 170
    21c6:	50 e4       	ldi	r21, 0x40	; 64
    21c8:	6f 81       	ldd	r22, Y+7	; 0x07
    21ca:	78 85       	ldd	r23, Y+8	; 0x08
    21cc:	89 85       	ldd	r24, Y+9	; 0x09
    21ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    21d0:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    21d4:	6f ab       	std	Y+55, r22	; 0x37
    21d6:	78 af       	std	Y+56, r23	; 0x38
    21d8:	89 af       	std	Y+57, r24	; 0x39
    21da:	9a af       	std	Y+58, r25	; 0x3a
    21dc:	2f a9       	ldd	r18, Y+55	; 0x37
    21de:	38 ad       	ldd	r19, Y+56	; 0x38
    21e0:	49 ad       	ldd	r20, Y+57	; 0x39
    21e2:	5a ad       	ldd	r21, Y+58	; 0x3a
    21e4:	2b 87       	std	Y+11, r18	; 0x0b
    21e6:	3c 87       	std	Y+12, r19	; 0x0c
    21e8:	4d 87       	std	Y+13, r20	; 0x0d
    21ea:	5e 87       	std	Y+14, r21	; 0x0e

000021ec <.Loc.89>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    21ec:	20 e0       	ldi	r18, 0x00	; 0
    21ee:	30 e0       	ldi	r19, 0x00	; 0
    21f0:	40 e8       	ldi	r20, 0x80	; 128
    21f2:	50 e4       	ldi	r21, 0x40	; 64
    21f4:	6f 81       	ldd	r22, Y+7	; 0x07
    21f6:	78 85       	ldd	r23, Y+8	; 0x08
    21f8:	89 85       	ldd	r24, Y+9	; 0x09
    21fa:	9a 85       	ldd	r25, Y+10	; 0x0a
    21fc:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    2200:	6b af       	std	Y+59, r22	; 0x3b
    2202:	7c af       	std	Y+60, r23	; 0x3c
    2204:	8d af       	std	Y+61, r24	; 0x3d
    2206:	9e af       	std	Y+62, r25	; 0x3e
    2208:	8b ad       	ldd	r24, Y+59	; 0x3b
    220a:	9c ad       	ldd	r25, Y+60	; 0x3c
    220c:	ad ad       	ldd	r26, Y+61	; 0x3d
    220e:	be ad       	ldd	r27, Y+62	; 0x3e
    2210:	8f 87       	std	Y+15, r24	; 0x0f
    2212:	98 8b       	std	Y+16, r25	; 0x10
    2214:	a9 8b       	std	Y+17, r26	; 0x11
    2216:	ba 8b       	std	Y+18, r27	; 0x12

00002218 <.Loc.90>:
	if (__tmp < 1.0)
    2218:	20 e0       	ldi	r18, 0x00	; 0
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	40 e8       	ldi	r20, 0x80	; 128
    221e:	5f e3       	ldi	r21, 0x3F	; 63
    2220:	6b 85       	ldd	r22, Y+11	; 0x0b
    2222:	7c 85       	ldd	r23, Y+12	; 0x0c
    2224:	8d 85       	ldd	r24, Y+13	; 0x0d
    2226:	9e 85       	ldd	r25, Y+14	; 0x0e
    2228:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    222c:	88 23       	and	r24, r24
    222e:	1c f4       	brge	.+6      	; 0x2236 <.L62>

00002230 <.Loc.91>:
		__ticks = 1;
    2230:	81 e0       	ldi	r24, 0x01	; 1
    2232:	8b 8b       	std	Y+19, r24	; 0x13
    2234:	fb c0       	rjmp	.+502    	; 0x242c <.L38>

00002236 <.L62>:
	else if (__tmp2 > 65535)
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	3f ef       	ldi	r19, 0xFF	; 255
    223a:	4f e7       	ldi	r20, 0x7F	; 127
    223c:	57 e4       	ldi	r21, 0x47	; 71
    223e:	6f 85       	ldd	r22, Y+15	; 0x0f
    2240:	78 89       	ldd	r23, Y+16	; 0x10
    2242:	89 89       	ldd	r24, Y+17	; 0x11
    2244:	9a 89       	ldd	r25, Y+18	; 0x12
    2246:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    224a:	88 23       	and	r24, r24
    224c:	09 f0       	breq	.+2      	; 0x2250 <L0^A>

0000224e <L0^A>:
    224e:	0c f4       	brge	.+2      	; 0x2252 <.Loc.93>

00002250 <L0^A>:
    2250:	b2 c0       	rjmp	.+356    	; 0x23b6 <.L63>

00002252 <.Loc.93>:
		_delay_ms(__us / 1000.0);
    2252:	20 e0       	ldi	r18, 0x00	; 0
    2254:	30 e0       	ldi	r19, 0x00	; 0
    2256:	4a e7       	ldi	r20, 0x7A	; 122
    2258:	54 e4       	ldi	r21, 0x44	; 68
    225a:	6f 81       	ldd	r22, Y+7	; 0x07
    225c:	78 85       	ldd	r23, Y+8	; 0x08
    225e:	89 85       	ldd	r24, Y+9	; 0x09
    2260:	9a 85       	ldd	r25, Y+10	; 0x0a
    2262:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    2266:	23 96       	adiw	r28, 0x03	; 3
    2268:	6c af       	std	Y+60, r22	; 0x3c
    226a:	7d af       	std	Y+61, r23	; 0x3d
    226c:	8e af       	std	Y+62, r24	; 0x3e
    226e:	9f af       	std	Y+63, r25	; 0x3f
    2270:	23 97       	sbiw	r28, 0x03	; 3
    2272:	23 96       	adiw	r28, 0x03	; 3
    2274:	8c ad       	ldd	r24, Y+60	; 0x3c
    2276:	9d ad       	ldd	r25, Y+61	; 0x3d
    2278:	ae ad       	ldd	r26, Y+62	; 0x3e
    227a:	bf ad       	ldd	r27, Y+63	; 0x3f
    227c:	23 97       	sbiw	r28, 0x03	; 3
    227e:	8c 8b       	std	Y+20, r24	; 0x14
    2280:	9d 8b       	std	Y+21, r25	; 0x15
    2282:	ae 8b       	std	Y+22, r26	; 0x16
    2284:	bf 8b       	std	Y+23, r27	; 0x17

00002286 <.LBB71>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    2286:	20 e0       	ldi	r18, 0x00	; 0
    2288:	30 e0       	ldi	r19, 0x00	; 0
    228a:	4a e7       	ldi	r20, 0x7A	; 122
    228c:	55 e4       	ldi	r21, 0x45	; 69
    228e:	6c 89       	ldd	r22, Y+20	; 0x14
    2290:	7d 89       	ldd	r23, Y+21	; 0x15
    2292:	8e 89       	ldd	r24, Y+22	; 0x16
    2294:	9f 89       	ldd	r25, Y+23	; 0x17
    2296:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    229a:	27 96       	adiw	r28, 0x07	; 7
    229c:	6c af       	std	Y+60, r22	; 0x3c
    229e:	7d af       	std	Y+61, r23	; 0x3d
    22a0:	8e af       	std	Y+62, r24	; 0x3e
    22a2:	9f af       	std	Y+63, r25	; 0x3f
    22a4:	27 97       	sbiw	r28, 0x07	; 7
    22a6:	27 96       	adiw	r28, 0x07	; 7
    22a8:	2c ad       	ldd	r18, Y+60	; 0x3c
    22aa:	3d ad       	ldd	r19, Y+61	; 0x3d
    22ac:	4e ad       	ldd	r20, Y+62	; 0x3e
    22ae:	5f ad       	ldd	r21, Y+63	; 0x3f
    22b0:	27 97       	sbiw	r28, 0x07	; 7
    22b2:	28 8f       	std	Y+24, r18	; 0x18
    22b4:	39 8f       	std	Y+25, r19	; 0x19
    22b6:	4a 8f       	std	Y+26, r20	; 0x1a
    22b8:	5b 8f       	std	Y+27, r21	; 0x1b

000022ba <.Loc.95>:
	if (__tmp < 1.0)
    22ba:	20 e0       	ldi	r18, 0x00	; 0
    22bc:	30 e0       	ldi	r19, 0x00	; 0
    22be:	40 e8       	ldi	r20, 0x80	; 128
    22c0:	5f e3       	ldi	r21, 0x3F	; 63
    22c2:	68 8d       	ldd	r22, Y+24	; 0x18
    22c4:	79 8d       	ldd	r23, Y+25	; 0x19
    22c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    22c8:	9b 8d       	ldd	r25, Y+27	; 0x1b
    22ca:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    22ce:	88 23       	and	r24, r24
    22d0:	2c f4       	brge	.+10     	; 0x22dc <.L64>

000022d2 <.Loc.96>:
		__ticks = 1;
    22d2:	81 e0       	ldi	r24, 0x01	; 1
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	9d 8f       	std	Y+29, r25	; 0x1d
    22d8:	8c 8f       	std	Y+28, r24	; 0x1c
    22da:	62 c0       	rjmp	.+196    	; 0x23a0 <.L43>

000022dc <.L64>:
	else if (__tmp > 65535)
    22dc:	20 e0       	ldi	r18, 0x00	; 0
    22de:	3f ef       	ldi	r19, 0xFF	; 255
    22e0:	4f e7       	ldi	r20, 0x7F	; 127
    22e2:	57 e4       	ldi	r21, 0x47	; 71
    22e4:	68 8d       	ldd	r22, Y+24	; 0x18
    22e6:	79 8d       	ldd	r23, Y+25	; 0x19
    22e8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    22ea:	9b 8d       	ldd	r25, Y+27	; 0x1b
    22ec:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    22f0:	88 23       	and	r24, r24
    22f2:	09 f0       	breq	.+2      	; 0x22f6 <L0^A>

000022f4 <L0^A>:
    22f4:	0c f4       	brge	.+2      	; 0x22f8 <.Loc.98>

000022f6 <L0^A>:
    22f6:	42 c0       	rjmp	.+132    	; 0x237c <.L65>

000022f8 <.Loc.98>:
		__ticks = (uint16_t) (__ms * 10.0);
    22f8:	20 e0       	ldi	r18, 0x00	; 0
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	40 e2       	ldi	r20, 0x20	; 32
    22fe:	51 e4       	ldi	r21, 0x41	; 65
    2300:	6c 89       	ldd	r22, Y+20	; 0x14
    2302:	7d 89       	ldd	r23, Y+21	; 0x15
    2304:	8e 89       	ldd	r24, Y+22	; 0x16
    2306:	9f 89       	ldd	r25, Y+23	; 0x17
    2308:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    230c:	2b 96       	adiw	r28, 0x0b	; 11
    230e:	6c af       	std	Y+60, r22	; 0x3c
    2310:	7d af       	std	Y+61, r23	; 0x3d
    2312:	8e af       	std	Y+62, r24	; 0x3e
    2314:	9f af       	std	Y+63, r25	; 0x3f
    2316:	2b 97       	sbiw	r28, 0x0b	; 11
    2318:	2b 96       	adiw	r28, 0x0b	; 11
    231a:	8c ad       	ldd	r24, Y+60	; 0x3c
    231c:	9d ad       	ldd	r25, Y+61	; 0x3d
    231e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2320:	bf ad       	ldd	r27, Y+63	; 0x3f
    2322:	2b 97       	sbiw	r28, 0x0b	; 11
    2324:	8f a7       	std	Y+47, r24	; 0x2f
    2326:	98 ab       	std	Y+48, r25	; 0x30
    2328:	a9 ab       	std	Y+49, r26	; 0x31
    232a:	ba ab       	std	Y+50, r27	; 0x32

0000232c <.Loc.99>:
    232c:	6f a5       	ldd	r22, Y+47	; 0x2f
    232e:	78 a9       	ldd	r23, Y+48	; 0x30
    2330:	89 a9       	ldd	r24, Y+49	; 0x31
    2332:	9a a9       	ldd	r25, Y+50	; 0x32
    2334:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    2338:	2f 96       	adiw	r28, 0x0f	; 15
    233a:	6c af       	std	Y+60, r22	; 0x3c
    233c:	7d af       	std	Y+61, r23	; 0x3d
    233e:	8e af       	std	Y+62, r24	; 0x3e
    2340:	9f af       	std	Y+63, r25	; 0x3f
    2342:	2f 97       	sbiw	r28, 0x0f	; 15
    2344:	2d 96       	adiw	r28, 0x0d	; 13
    2346:	ae ad       	ldd	r26, Y+62	; 0x3e
    2348:	bf ad       	ldd	r27, Y+63	; 0x3f
    234a:	2d 97       	sbiw	r28, 0x0d	; 13
    234c:	bd 8f       	std	Y+29, r27	; 0x1d
    234e:	ac 8f       	std	Y+28, r26	; 0x1c

00002350 <.Loc.100>:
		while(__ticks)
    2350:	10 c0       	rjmp	.+32     	; 0x2372 <.L46>

00002352 <.L47>:
    2352:	80 e9       	ldi	r24, 0x90	; 144
    2354:	91 e0       	ldi	r25, 0x01	; 1
    2356:	9f 8f       	std	Y+31, r25	; 0x1f
    2358:	8e 8f       	std	Y+30, r24	; 0x1e

0000235a <.LBB73>:
	__asm__ volatile (
    235a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    235c:	9f 8d       	ldd	r25, Y+31	; 0x1f

0000235e <.L1^B5>:
    235e:	01 97       	sbiw	r24, 0x01	; 1
    2360:	f1 f7       	brne	.-4      	; 0x235e <.L1^B5>
    2362:	9f 8f       	std	Y+31, r25	; 0x1f
    2364:	8e 8f       	std	Y+30, r24	; 0x1e

00002366 <.Loc.102>:
	...

00002368 <.LBE73>:
			__ticks --;
    2368:	8c 8d       	ldd	r24, Y+28	; 0x1c
    236a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    236c:	01 97       	sbiw	r24, 0x01	; 1
    236e:	9d 8f       	std	Y+29, r25	; 0x1d
    2370:	8c 8f       	std	Y+28, r24	; 0x1c

00002372 <.L46>:
		while(__ticks)
    2372:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2374:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2376:	00 97       	sbiw	r24, 0x00	; 0
    2378:	61 f7       	brne	.-40     	; 0x2352 <.L47>

0000237a <.Loc.105>:
		return;
    237a:	58 c0       	rjmp	.+176    	; 0x242c <.L38>

0000237c <.L65>:
		__ticks = (uint16_t)__tmp;
    237c:	68 8d       	ldd	r22, Y+24	; 0x18
    237e:	79 8d       	ldd	r23, Y+25	; 0x19
    2380:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2382:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2384:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    2388:	63 96       	adiw	r28, 0x13	; 19
    238a:	6c af       	std	Y+60, r22	; 0x3c
    238c:	7d af       	std	Y+61, r23	; 0x3d
    238e:	8e af       	std	Y+62, r24	; 0x3e
    2390:	9f af       	std	Y+63, r25	; 0x3f
    2392:	63 97       	sbiw	r28, 0x13	; 19
    2394:	61 96       	adiw	r28, 0x11	; 17
    2396:	ee ad       	ldd	r30, Y+62	; 0x3e
    2398:	ff ad       	ldd	r31, Y+63	; 0x3f
    239a:	61 97       	sbiw	r28, 0x11	; 17
    239c:	fd 8f       	std	Y+29, r31	; 0x1d
    239e:	ec 8f       	std	Y+28, r30	; 0x1c

000023a0 <.L43>:
    23a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    23a2:	9d 8d       	ldd	r25, Y+29	; 0x1d
    23a4:	99 a3       	std	Y+33, r25	; 0x21
    23a6:	88 a3       	std	Y+32, r24	; 0x20

000023a8 <.LBB75>:
    23a8:	88 a1       	ldd	r24, Y+32	; 0x20
    23aa:	99 a1       	ldd	r25, Y+33	; 0x21

000023ac <.L1^B6>:
    23ac:	01 97       	sbiw	r24, 0x01	; 1
    23ae:	f1 f7       	brne	.-4      	; 0x23ac <.L1^B6>
    23b0:	99 a3       	std	Y+33, r25	; 0x21
    23b2:	88 a3       	std	Y+32, r24	; 0x20

000023b4 <.Loc.108>:
}
    23b4:	3b c0       	rjmp	.+118    	; 0x242c <.L38>

000023b6 <.L63>:
	else if (__tmp > 255)
    23b6:	20 e0       	ldi	r18, 0x00	; 0
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	4f e7       	ldi	r20, 0x7F	; 127
    23bc:	53 e4       	ldi	r21, 0x43	; 67
    23be:	6b 85       	ldd	r22, Y+11	; 0x0b
    23c0:	7c 85       	ldd	r23, Y+12	; 0x0c
    23c2:	8d 85       	ldd	r24, Y+13	; 0x0d
    23c4:	9e 85       	ldd	r25, Y+14	; 0x0e
    23c6:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    23ca:	88 23       	and	r24, r24
    23cc:	f9 f0       	breq	.+62     	; 0x240c <.L66>
    23ce:	f4 f0       	brlt	.+60     	; 0x240c <.L66>

000023d0 <.LBB77>:
		uint16_t __ticks=(uint16_t)__tmp2;
    23d0:	6f 85       	ldd	r22, Y+15	; 0x0f
    23d2:	78 89       	ldd	r23, Y+16	; 0x10
    23d4:	89 89       	ldd	r24, Y+17	; 0x11
    23d6:	9a 89       	ldd	r25, Y+18	; 0x12
    23d8:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    23dc:	67 96       	adiw	r28, 0x17	; 23
    23de:	6c af       	std	Y+60, r22	; 0x3c
    23e0:	7d af       	std	Y+61, r23	; 0x3d
    23e2:	8e af       	std	Y+62, r24	; 0x3e
    23e4:	9f af       	std	Y+63, r25	; 0x3f
    23e6:	67 97       	sbiw	r28, 0x17	; 23
    23e8:	65 96       	adiw	r28, 0x15	; 21
    23ea:	2e ad       	ldd	r18, Y+62	; 0x3e
    23ec:	3f ad       	ldd	r19, Y+63	; 0x3f
    23ee:	65 97       	sbiw	r28, 0x15	; 21
    23f0:	3b a3       	std	Y+35, r19	; 0x23
    23f2:	2a a3       	std	Y+34, r18	; 0x22
    23f4:	8a a1       	ldd	r24, Y+34	; 0x22
    23f6:	9b a1       	ldd	r25, Y+35	; 0x23
    23f8:	9d a3       	std	Y+37, r25	; 0x25
    23fa:	8c a3       	std	Y+36, r24	; 0x24

000023fc <.LBB78>:
	__asm__ volatile (
    23fc:	8c a1       	ldd	r24, Y+36	; 0x24
    23fe:	9d a1       	ldd	r25, Y+37	; 0x25

00002400 <.L1^B7>:
    2400:	01 97       	sbiw	r24, 0x01	; 1
    2402:	f1 f7       	brne	.-4      	; 0x2400 <.L1^B7>
    2404:	9d a3       	std	Y+37, r25	; 0x25
    2406:	8c a3       	std	Y+36, r24	; 0x24

00002408 <.Loc.112>:
	...

0000240a <.LBE78>:
		return;
    240a:	17 c0       	rjmp	.+46     	; 0x243a <.L51>

0000240c <.L66>:
		__ticks = (uint8_t)__tmp;
    240c:	6b 85       	ldd	r22, Y+11	; 0x0b
    240e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2410:	8d 85       	ldd	r24, Y+13	; 0x0d
    2412:	9e 85       	ldd	r25, Y+14	; 0x0e
    2414:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    2418:	6b 96       	adiw	r28, 0x1b	; 27
    241a:	6c af       	std	Y+60, r22	; 0x3c
    241c:	7d af       	std	Y+61, r23	; 0x3d
    241e:	8e af       	std	Y+62, r24	; 0x3e
    2420:	9f af       	std	Y+63, r25	; 0x3f
    2422:	6b 97       	sbiw	r28, 0x1b	; 27
    2424:	68 96       	adiw	r28, 0x18	; 24
    2426:	3f ad       	ldd	r19, Y+63	; 0x3f
    2428:	68 97       	sbiw	r28, 0x18	; 24
    242a:	3b 8b       	std	Y+19, r19	; 0x13

0000242c <.L38>:
    242c:	8b 89       	ldd	r24, Y+19	; 0x13
    242e:	8e a3       	std	Y+38, r24	; 0x26

00002430 <.LBB80>:
	__asm__ volatile (
    2430:	8e a1       	ldd	r24, Y+38	; 0x26

00002432 <.L1^B8>:
    2432:	8a 95       	dec	r24
    2434:	f1 f7       	brne	.-4      	; 0x2432 <.L1^B8>
    2436:	8e a3       	std	Y+38, r24	; 0x26

00002438 <.Loc.116>:
	...

0000243a <.L51>:
    _delay_us(10);
    PORTJ &= ~(1 << US2_TRIG_PIN);
    243a:	85 e0       	ldi	r24, 0x05	; 5
    243c:	91 e0       	ldi	r25, 0x01	; 1
    243e:	dc 01       	movw	r26, r24
    2440:	2c 91       	ld	r18, X

00002442 <.Loc.118>:
    2442:	85 e0       	ldi	r24, 0x05	; 5
    2444:	91 e0       	ldi	r25, 0x01	; 1

00002446 <.Loc.119>:
    2446:	2d 7f       	andi	r18, 0xFD	; 253
    2448:	fc 01       	movw	r30, r24
    244a:	20 83       	st	Z, r18

0000244c <.Loc.120>:
	...

0000244e <.L52>:

    // Wait for echo pin to go high
    while (!(PINJ & (1 << US2_ECHO_PIN)));
    244e:	83 e0       	ldi	r24, 0x03	; 3
    2450:	91 e0       	ldi	r25, 0x01	; 1
    2452:	dc 01       	movw	r26, r24
    2454:	8c 91       	ld	r24, X

00002456 <.Loc.122>:
    2456:	88 2f       	mov	r24, r24
    2458:	90 e0       	ldi	r25, 0x00	; 0
    245a:	81 70       	andi	r24, 0x01	; 1
    245c:	99 27       	eor	r25, r25

0000245e <.Loc.123>:
    245e:	00 97       	sbiw	r24, 0x00	; 0
    2460:	b1 f3       	breq	.-20     	; 0x244e <.L52>

00002462 <.Loc.124>:

    // Start timer
    TCNT1 = 0;
    2462:	84 e8       	ldi	r24, 0x84	; 132
    2464:	90 e0       	ldi	r25, 0x00	; 0

00002466 <.Loc.125>:
    2466:	fc 01       	movw	r30, r24
    2468:	11 82       	std	Z+1, r1	; 0x01
    246a:	10 82       	st	Z, r1

0000246c <.Loc.126>:
    TCCR1B |= (1 << CS11); // Prescaler of 8
    246c:	81 e8       	ldi	r24, 0x81	; 129
    246e:	90 e0       	ldi	r25, 0x00	; 0
    2470:	dc 01       	movw	r26, r24
    2472:	2c 91       	ld	r18, X
    2474:	81 e8       	ldi	r24, 0x81	; 129
    2476:	90 e0       	ldi	r25, 0x00	; 0

00002478 <.Loc.127>:
    2478:	22 60       	ori	r18, 0x02	; 2
    247a:	fc 01       	movw	r30, r24
    247c:	20 83       	st	Z, r18

0000247e <.Loc.128>:

    // Wait for echo pin to go low
    while (PINJ & (1 << US2_ECHO_PIN)) {
    247e:	0b c0       	rjmp	.+22     	; 0x2496 <.L53>

00002480 <.L55>:
        if (TCNT1 > 60000) {
    2480:	84 e8       	ldi	r24, 0x84	; 132
    2482:	90 e0       	ldi	r25, 0x00	; 0
    2484:	dc 01       	movw	r26, r24
    2486:	8d 91       	ld	r24, X+
    2488:	9c 91       	ld	r25, X
    248a:	11 97       	sbiw	r26, 0x01	; 1

0000248c <.Loc.130>:
    248c:	80 36       	cpi	r24, 0x60	; 96
    248e:	ba ee       	ldi	r27, 0xEA	; 234
    2490:	9b 07       	cpc	r25, r27
    2492:	09 f0       	breq	.+2      	; 0x2496 <.L53>

00002494 <L0^A>:
    2494:	58 f4       	brcc	.+22     	; 0x24ac <.L67>

00002496 <.L53>:
    while (PINJ & (1 << US2_ECHO_PIN)) {
    2496:	83 e0       	ldi	r24, 0x03	; 3
    2498:	91 e0       	ldi	r25, 0x01	; 1
    249a:	fc 01       	movw	r30, r24
    249c:	80 81       	ld	r24, Z

0000249e <.Loc.132>:
    249e:	88 2f       	mov	r24, r24
    24a0:	90 e0       	ldi	r25, 0x00	; 0
    24a2:	81 70       	andi	r24, 0x01	; 1
    24a4:	99 27       	eor	r25, r25

000024a6 <.Loc.133>:
    24a6:	00 97       	sbiw	r24, 0x00	; 0
    24a8:	59 f7       	brne	.-42     	; 0x2480 <.L55>
    24aa:	01 c0       	rjmp	.+2      	; 0x24ae <.L54>

000024ac <.L67>:
	...

000024ae <.L54>:
            break;
        }
    }

    // Stop timer
    TCCR1B &= ~(1 << CS11);
    24ae:	81 e8       	ldi	r24, 0x81	; 129
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	dc 01       	movw	r26, r24
    24b4:	2c 91       	ld	r18, X

000024b6 <.Loc.136>:
    24b6:	81 e8       	ldi	r24, 0x81	; 129
    24b8:	90 e0       	ldi	r25, 0x00	; 0

000024ba <.Loc.137>:
    24ba:	2d 7f       	andi	r18, 0xFD	; 253
    24bc:	fc 01       	movw	r30, r24
    24be:	20 83       	st	Z, r18

000024c0 <.Loc.138>:

    // Read timer value
    duration = TCNT1;
    24c0:	84 e8       	ldi	r24, 0x84	; 132
    24c2:	90 e0       	ldi	r25, 0x00	; 0

000024c4 <.Loc.139>:
    24c4:	dc 01       	movw	r26, r24
    24c6:	8d 91       	ld	r24, X+
    24c8:	9c 91       	ld	r25, X
    24ca:	9a 83       	std	Y+2, r25	; 0x02
    24cc:	89 83       	std	Y+1, r24	; 0x01

000024ce <.Loc.140>:

    // Convert duration to distance in cm
    float distance = duration / 58.0 / 2.0;
    24ce:	89 81       	ldd	r24, Y+1	; 0x01
    24d0:	9a 81       	ldd	r25, Y+2	; 0x02
    24d2:	9c 01       	movw	r18, r24
    24d4:	40 e0       	ldi	r20, 0x00	; 0
    24d6:	50 e0       	ldi	r21, 0x00	; 0
    24d8:	6f 96       	adiw	r28, 0x1f	; 31
    24da:	2c af       	std	Y+60, r18	; 0x3c
    24dc:	3d af       	std	Y+61, r19	; 0x3d
    24de:	4e af       	std	Y+62, r20	; 0x3e
    24e0:	5f af       	std	Y+63, r21	; 0x3f
    24e2:	6f 97       	sbiw	r28, 0x1f	; 31
    24e4:	6f 96       	adiw	r28, 0x1f	; 31
    24e6:	6c ad       	ldd	r22, Y+60	; 0x3c
    24e8:	7d ad       	ldd	r23, Y+61	; 0x3d
    24ea:	8e ad       	ldd	r24, Y+62	; 0x3e
    24ec:	9f ad       	ldd	r25, Y+63	; 0x3f
    24ee:	6f 97       	sbiw	r28, 0x1f	; 31
    24f0:	0e 94 df 15 	call	0x2bbe	; 0x2bbe <__floatunsisf>
    24f4:	6f a3       	std	Y+39, r22	; 0x27
    24f6:	78 a7       	std	Y+40, r23	; 0x28
    24f8:	89 a7       	std	Y+41, r24	; 0x29
    24fa:	9a a7       	std	Y+42, r25	; 0x2a
    24fc:	20 e0       	ldi	r18, 0x00	; 0
    24fe:	30 e0       	ldi	r19, 0x00	; 0
    2500:	48 e6       	ldi	r20, 0x68	; 104
    2502:	52 e4       	ldi	r21, 0x42	; 66
    2504:	6f a1       	ldd	r22, Y+39	; 0x27
    2506:	78 a5       	ldd	r23, Y+40	; 0x28
    2508:	89 a5       	ldd	r24, Y+41	; 0x29
    250a:	9a a5       	ldd	r25, Y+42	; 0x2a
    250c:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    2510:	a3 96       	adiw	r28, 0x23	; 35
    2512:	6c af       	std	Y+60, r22	; 0x3c
    2514:	7d af       	std	Y+61, r23	; 0x3d
    2516:	8e af       	std	Y+62, r24	; 0x3e
    2518:	9f af       	std	Y+63, r25	; 0x3f
    251a:	a3 97       	sbiw	r28, 0x23	; 35
    251c:	a3 96       	adiw	r28, 0x23	; 35
    251e:	8c ad       	ldd	r24, Y+60	; 0x3c
    2520:	9d ad       	ldd	r25, Y+61	; 0x3d
    2522:	ae ad       	ldd	r26, Y+62	; 0x3e
    2524:	bf ad       	ldd	r27, Y+63	; 0x3f
    2526:	a3 97       	sbiw	r28, 0x23	; 35
    2528:	8b a7       	std	Y+43, r24	; 0x2b
    252a:	9c a7       	std	Y+44, r25	; 0x2c
    252c:	ad a7       	std	Y+45, r26	; 0x2d
    252e:	be a7       	std	Y+46, r27	; 0x2e

00002530 <.Loc.141>:
    2530:	20 e0       	ldi	r18, 0x00	; 0
    2532:	30 e0       	ldi	r19, 0x00	; 0
    2534:	40 e0       	ldi	r20, 0x00	; 0
    2536:	50 e4       	ldi	r21, 0x40	; 64
    2538:	6b a5       	ldd	r22, Y+43	; 0x2b
    253a:	7c a5       	ldd	r23, Y+44	; 0x2c
    253c:	8d a5       	ldd	r24, Y+45	; 0x2d
    253e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2540:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    2544:	a7 96       	adiw	r28, 0x27	; 39
    2546:	6c af       	std	Y+60, r22	; 0x3c
    2548:	7d af       	std	Y+61, r23	; 0x3d
    254a:	8e af       	std	Y+62, r24	; 0x3e
    254c:	9f af       	std	Y+63, r25	; 0x3f
    254e:	a7 97       	sbiw	r28, 0x27	; 39
    2550:	a7 96       	adiw	r28, 0x27	; 39
    2552:	2c ad       	ldd	r18, Y+60	; 0x3c
    2554:	3d ad       	ldd	r19, Y+61	; 0x3d
    2556:	4e ad       	ldd	r20, Y+62	; 0x3e
    2558:	5f ad       	ldd	r21, Y+63	; 0x3f
    255a:	a7 97       	sbiw	r28, 0x27	; 39
    255c:	2b 83       	std	Y+3, r18	; 0x03
    255e:	3c 83       	std	Y+4, r19	; 0x04
    2560:	4d 83       	std	Y+5, r20	; 0x05
    2562:	5e 83       	std	Y+6, r21	; 0x06

00002564 <.Loc.142>:

    return distance;
    2564:	8b 81       	ldd	r24, Y+3	; 0x03
    2566:	9c 81       	ldd	r25, Y+4	; 0x04
    2568:	ad 81       	ldd	r26, Y+5	; 0x05
    256a:	be 81       	ldd	r27, Y+6	; 0x06
    256c:	8b ab       	std	Y+51, r24	; 0x33
    256e:	9c ab       	std	Y+52, r25	; 0x34
    2570:	ad ab       	std	Y+53, r26	; 0x35
    2572:	be ab       	std	Y+54, r27	; 0x36

00002574 <.Loc.143>:
}
    2574:	6b a9       	ldd	r22, Y+51	; 0x33
    2576:	7c a9       	ldd	r23, Y+52	; 0x34
    2578:	8d a9       	ldd	r24, Y+53	; 0x35
    257a:	9e a9       	ldd	r25, Y+54	; 0x36
    257c:	ca 59       	subi	r28, 0x9A	; 154
    257e:	df 4f       	sbci	r29, 0xFF	; 255
    2580:	0f b6       	in	r0, 0x3f	; 63
    2582:	f8 94       	cli
    2584:	de bf       	out	0x3e, r29	; 62
    2586:	0f be       	out	0x3f, r0	; 63
    2588:	cd bf       	out	0x3d, r28	; 61
    258a:	df 91       	pop	r29
    258c:	cf 91       	pop	r28
    258e:	08 95       	ret

00002590 <measure_distance3>:

// Measure distance with sensor 3
float measure_distance3(void) {
    2590:	cf 93       	push	r28
    2592:	df 93       	push	r29
    2594:	cd b7       	in	r28, 0x3d	; 61
    2596:	de b7       	in	r29, 0x3e	; 62
    2598:	c6 56       	subi	r28, 0x66	; 102
    259a:	d1 09       	sbc	r29, r1
    259c:	0f b6       	in	r0, 0x3f	; 63
    259e:	f8 94       	cli
    25a0:	de bf       	out	0x3e, r29	; 62
    25a2:	0f be       	out	0x3f, r0	; 63
    25a4:	cd bf       	out	0x3d, r28	; 61

000025a6 <.Loc.145>:
    uint16_t duration;

    // Trigger pulse
    PORTH |= (1 << US3_TRIG_PIN);
    25a6:	82 e0       	ldi	r24, 0x02	; 2
    25a8:	91 e0       	ldi	r25, 0x01	; 1
    25aa:	dc 01       	movw	r26, r24
    25ac:	2c 91       	ld	r18, X
    25ae:	82 e0       	ldi	r24, 0x02	; 2
    25b0:	91 e0       	ldi	r25, 0x01	; 1

000025b2 <.Loc.146>:
    25b2:	20 61       	ori	r18, 0x10	; 16
    25b4:	fc 01       	movw	r30, r24
    25b6:	20 83       	st	Z, r18
    25b8:	80 e0       	ldi	r24, 0x00	; 0
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	a0 e2       	ldi	r26, 0x20	; 32
    25be:	b1 e4       	ldi	r27, 0x41	; 65
    25c0:	8f 83       	std	Y+7, r24	; 0x07
    25c2:	98 87       	std	Y+8, r25	; 0x08
    25c4:	a9 87       	std	Y+9, r26	; 0x09
    25c6:	ba 87       	std	Y+10, r27	; 0x0a

000025c8 <.LBB82>:
	__tmp = ((F_CPU) / 3e6) * __us;
    25c8:	2b ea       	ldi	r18, 0xAB	; 171
    25ca:	3a ea       	ldi	r19, 0xAA	; 170
    25cc:	4a ea       	ldi	r20, 0xAA	; 170
    25ce:	50 e4       	ldi	r21, 0x40	; 64
    25d0:	6f 81       	ldd	r22, Y+7	; 0x07
    25d2:	78 85       	ldd	r23, Y+8	; 0x08
    25d4:	89 85       	ldd	r24, Y+9	; 0x09
    25d6:	9a 85       	ldd	r25, Y+10	; 0x0a
    25d8:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    25dc:	6f ab       	std	Y+55, r22	; 0x37
    25de:	78 af       	std	Y+56, r23	; 0x38
    25e0:	89 af       	std	Y+57, r24	; 0x39
    25e2:	9a af       	std	Y+58, r25	; 0x3a
    25e4:	2f a9       	ldd	r18, Y+55	; 0x37
    25e6:	38 ad       	ldd	r19, Y+56	; 0x38
    25e8:	49 ad       	ldd	r20, Y+57	; 0x39
    25ea:	5a ad       	ldd	r21, Y+58	; 0x3a
    25ec:	2b 87       	std	Y+11, r18	; 0x0b
    25ee:	3c 87       	std	Y+12, r19	; 0x0c
    25f0:	4d 87       	std	Y+13, r20	; 0x0d
    25f2:	5e 87       	std	Y+14, r21	; 0x0e

000025f4 <.Loc.148>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
    25f4:	20 e0       	ldi	r18, 0x00	; 0
    25f6:	30 e0       	ldi	r19, 0x00	; 0
    25f8:	40 e8       	ldi	r20, 0x80	; 128
    25fa:	50 e4       	ldi	r21, 0x40	; 64
    25fc:	6f 81       	ldd	r22, Y+7	; 0x07
    25fe:	78 85       	ldd	r23, Y+8	; 0x08
    2600:	89 85       	ldd	r24, Y+9	; 0x09
    2602:	9a 85       	ldd	r25, Y+10	; 0x0a
    2604:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    2608:	6b af       	std	Y+59, r22	; 0x3b
    260a:	7c af       	std	Y+60, r23	; 0x3c
    260c:	8d af       	std	Y+61, r24	; 0x3d
    260e:	9e af       	std	Y+62, r25	; 0x3e
    2610:	8b ad       	ldd	r24, Y+59	; 0x3b
    2612:	9c ad       	ldd	r25, Y+60	; 0x3c
    2614:	ad ad       	ldd	r26, Y+61	; 0x3d
    2616:	be ad       	ldd	r27, Y+62	; 0x3e
    2618:	8f 87       	std	Y+15, r24	; 0x0f
    261a:	98 8b       	std	Y+16, r25	; 0x10
    261c:	a9 8b       	std	Y+17, r26	; 0x11
    261e:	ba 8b       	std	Y+18, r27	; 0x12

00002620 <.Loc.149>:
	if (__tmp < 1.0)
    2620:	20 e0       	ldi	r18, 0x00	; 0
    2622:	30 e0       	ldi	r19, 0x00	; 0
    2624:	40 e8       	ldi	r20, 0x80	; 128
    2626:	5f e3       	ldi	r21, 0x3F	; 63
    2628:	6b 85       	ldd	r22, Y+11	; 0x0b
    262a:	7c 85       	ldd	r23, Y+12	; 0x0c
    262c:	8d 85       	ldd	r24, Y+13	; 0x0d
    262e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2630:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    2634:	88 23       	and	r24, r24
    2636:	1c f4       	brge	.+6      	; 0x263e <.L95>

00002638 <.Loc.150>:
		__ticks = 1;
    2638:	81 e0       	ldi	r24, 0x01	; 1
    263a:	8b 8b       	std	Y+19, r24	; 0x13
    263c:	fb c0       	rjmp	.+502    	; 0x2834 <.L71>

0000263e <.L95>:
	else if (__tmp2 > 65535)
    263e:	20 e0       	ldi	r18, 0x00	; 0
    2640:	3f ef       	ldi	r19, 0xFF	; 255
    2642:	4f e7       	ldi	r20, 0x7F	; 127
    2644:	57 e4       	ldi	r21, 0x47	; 71
    2646:	6f 85       	ldd	r22, Y+15	; 0x0f
    2648:	78 89       	ldd	r23, Y+16	; 0x10
    264a:	89 89       	ldd	r24, Y+17	; 0x11
    264c:	9a 89       	ldd	r25, Y+18	; 0x12
    264e:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    2652:	88 23       	and	r24, r24
    2654:	09 f0       	breq	.+2      	; 0x2658 <L0^A>

00002656 <L0^A>:
    2656:	0c f4       	brge	.+2      	; 0x265a <.Loc.152>

00002658 <L0^A>:
    2658:	b2 c0       	rjmp	.+356    	; 0x27be <.L96>

0000265a <.Loc.152>:
		_delay_ms(__us / 1000.0);
    265a:	20 e0       	ldi	r18, 0x00	; 0
    265c:	30 e0       	ldi	r19, 0x00	; 0
    265e:	4a e7       	ldi	r20, 0x7A	; 122
    2660:	54 e4       	ldi	r21, 0x44	; 68
    2662:	6f 81       	ldd	r22, Y+7	; 0x07
    2664:	78 85       	ldd	r23, Y+8	; 0x08
    2666:	89 85       	ldd	r24, Y+9	; 0x09
    2668:	9a 85       	ldd	r25, Y+10	; 0x0a
    266a:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    266e:	23 96       	adiw	r28, 0x03	; 3
    2670:	6c af       	std	Y+60, r22	; 0x3c
    2672:	7d af       	std	Y+61, r23	; 0x3d
    2674:	8e af       	std	Y+62, r24	; 0x3e
    2676:	9f af       	std	Y+63, r25	; 0x3f
    2678:	23 97       	sbiw	r28, 0x03	; 3
    267a:	23 96       	adiw	r28, 0x03	; 3
    267c:	8c ad       	ldd	r24, Y+60	; 0x3c
    267e:	9d ad       	ldd	r25, Y+61	; 0x3d
    2680:	ae ad       	ldd	r26, Y+62	; 0x3e
    2682:	bf ad       	ldd	r27, Y+63	; 0x3f
    2684:	23 97       	sbiw	r28, 0x03	; 3
    2686:	8c 8b       	std	Y+20, r24	; 0x14
    2688:	9d 8b       	std	Y+21, r25	; 0x15
    268a:	ae 8b       	std	Y+22, r26	; 0x16
    268c:	bf 8b       	std	Y+23, r27	; 0x17

0000268e <.LBB84>:
	__tmp = ((F_CPU) / 4e3) * __ms;
    268e:	20 e0       	ldi	r18, 0x00	; 0
    2690:	30 e0       	ldi	r19, 0x00	; 0
    2692:	4a e7       	ldi	r20, 0x7A	; 122
    2694:	55 e4       	ldi	r21, 0x45	; 69
    2696:	6c 89       	ldd	r22, Y+20	; 0x14
    2698:	7d 89       	ldd	r23, Y+21	; 0x15
    269a:	8e 89       	ldd	r24, Y+22	; 0x16
    269c:	9f 89       	ldd	r25, Y+23	; 0x17
    269e:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    26a2:	27 96       	adiw	r28, 0x07	; 7
    26a4:	6c af       	std	Y+60, r22	; 0x3c
    26a6:	7d af       	std	Y+61, r23	; 0x3d
    26a8:	8e af       	std	Y+62, r24	; 0x3e
    26aa:	9f af       	std	Y+63, r25	; 0x3f
    26ac:	27 97       	sbiw	r28, 0x07	; 7
    26ae:	27 96       	adiw	r28, 0x07	; 7
    26b0:	2c ad       	ldd	r18, Y+60	; 0x3c
    26b2:	3d ad       	ldd	r19, Y+61	; 0x3d
    26b4:	4e ad       	ldd	r20, Y+62	; 0x3e
    26b6:	5f ad       	ldd	r21, Y+63	; 0x3f
    26b8:	27 97       	sbiw	r28, 0x07	; 7
    26ba:	28 8f       	std	Y+24, r18	; 0x18
    26bc:	39 8f       	std	Y+25, r19	; 0x19
    26be:	4a 8f       	std	Y+26, r20	; 0x1a
    26c0:	5b 8f       	std	Y+27, r21	; 0x1b

000026c2 <.Loc.154>:
	if (__tmp < 1.0)
    26c2:	20 e0       	ldi	r18, 0x00	; 0
    26c4:	30 e0       	ldi	r19, 0x00	; 0
    26c6:	40 e8       	ldi	r20, 0x80	; 128
    26c8:	5f e3       	ldi	r21, 0x3F	; 63
    26ca:	68 8d       	ldd	r22, Y+24	; 0x18
    26cc:	79 8d       	ldd	r23, Y+25	; 0x19
    26ce:	8a 8d       	ldd	r24, Y+26	; 0x1a
    26d0:	9b 8d       	ldd	r25, Y+27	; 0x1b
    26d2:	0e 94 39 15 	call	0x2a72	; 0x2a72 <__cmpsf2>
    26d6:	88 23       	and	r24, r24
    26d8:	2c f4       	brge	.+10     	; 0x26e4 <.L97>

000026da <.Loc.155>:
		__ticks = 1;
    26da:	81 e0       	ldi	r24, 0x01	; 1
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	9d 8f       	std	Y+29, r25	; 0x1d
    26e0:	8c 8f       	std	Y+28, r24	; 0x1c
    26e2:	62 c0       	rjmp	.+196    	; 0x27a8 <.L76>

000026e4 <.L97>:
	else if (__tmp > 65535)
    26e4:	20 e0       	ldi	r18, 0x00	; 0
    26e6:	3f ef       	ldi	r19, 0xFF	; 255
    26e8:	4f e7       	ldi	r20, 0x7F	; 127
    26ea:	57 e4       	ldi	r21, 0x47	; 71
    26ec:	68 8d       	ldd	r22, Y+24	; 0x18
    26ee:	79 8d       	ldd	r23, Y+25	; 0x19
    26f0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    26f2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    26f4:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    26f8:	88 23       	and	r24, r24
    26fa:	09 f0       	breq	.+2      	; 0x26fe <L0^A>

000026fc <L0^A>:
    26fc:	0c f4       	brge	.+2      	; 0x2700 <.Loc.157>

000026fe <L0^A>:
    26fe:	42 c0       	rjmp	.+132    	; 0x2784 <.L98>

00002700 <.Loc.157>:
		__ticks = (uint16_t) (__ms * 10.0);
    2700:	20 e0       	ldi	r18, 0x00	; 0
    2702:	30 e0       	ldi	r19, 0x00	; 0
    2704:	40 e2       	ldi	r20, 0x20	; 32
    2706:	51 e4       	ldi	r21, 0x41	; 65
    2708:	6c 89       	ldd	r22, Y+20	; 0x14
    270a:	7d 89       	ldd	r23, Y+21	; 0x15
    270c:	8e 89       	ldd	r24, Y+22	; 0x16
    270e:	9f 89       	ldd	r25, Y+23	; 0x17
    2710:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__mulsf3>
    2714:	2b 96       	adiw	r28, 0x0b	; 11
    2716:	6c af       	std	Y+60, r22	; 0x3c
    2718:	7d af       	std	Y+61, r23	; 0x3d
    271a:	8e af       	std	Y+62, r24	; 0x3e
    271c:	9f af       	std	Y+63, r25	; 0x3f
    271e:	2b 97       	sbiw	r28, 0x0b	; 11
    2720:	2b 96       	adiw	r28, 0x0b	; 11
    2722:	8c ad       	ldd	r24, Y+60	; 0x3c
    2724:	9d ad       	ldd	r25, Y+61	; 0x3d
    2726:	ae ad       	ldd	r26, Y+62	; 0x3e
    2728:	bf ad       	ldd	r27, Y+63	; 0x3f
    272a:	2b 97       	sbiw	r28, 0x0b	; 11
    272c:	8f a7       	std	Y+47, r24	; 0x2f
    272e:	98 ab       	std	Y+48, r25	; 0x30
    2730:	a9 ab       	std	Y+49, r26	; 0x31
    2732:	ba ab       	std	Y+50, r27	; 0x32

00002734 <.Loc.158>:
    2734:	6f a5       	ldd	r22, Y+47	; 0x2f
    2736:	78 a9       	ldd	r23, Y+48	; 0x30
    2738:	89 a9       	ldd	r24, Y+49	; 0x31
    273a:	9a a9       	ldd	r25, Y+50	; 0x32
    273c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    2740:	2f 96       	adiw	r28, 0x0f	; 15
    2742:	6c af       	std	Y+60, r22	; 0x3c
    2744:	7d af       	std	Y+61, r23	; 0x3d
    2746:	8e af       	std	Y+62, r24	; 0x3e
    2748:	9f af       	std	Y+63, r25	; 0x3f
    274a:	2f 97       	sbiw	r28, 0x0f	; 15
    274c:	2d 96       	adiw	r28, 0x0d	; 13
    274e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2750:	bf ad       	ldd	r27, Y+63	; 0x3f
    2752:	2d 97       	sbiw	r28, 0x0d	; 13
    2754:	bd 8f       	std	Y+29, r27	; 0x1d
    2756:	ac 8f       	std	Y+28, r26	; 0x1c

00002758 <.Loc.159>:
		while(__ticks)
    2758:	10 c0       	rjmp	.+32     	; 0x277a <.L79>

0000275a <.L80>:
    275a:	80 e9       	ldi	r24, 0x90	; 144
    275c:	91 e0       	ldi	r25, 0x01	; 1
    275e:	9f 8f       	std	Y+31, r25	; 0x1f
    2760:	8e 8f       	std	Y+30, r24	; 0x1e

00002762 <.LBB86>:
	__asm__ volatile (
    2762:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2764:	9f 8d       	ldd	r25, Y+31	; 0x1f

00002766 <.L1^B9>:
    2766:	01 97       	sbiw	r24, 0x01	; 1
    2768:	f1 f7       	brne	.-4      	; 0x2766 <.L1^B9>
    276a:	9f 8f       	std	Y+31, r25	; 0x1f
    276c:	8e 8f       	std	Y+30, r24	; 0x1e

0000276e <.Loc.161>:
	...

00002770 <.LBE86>:
			__ticks --;
    2770:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2772:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2774:	01 97       	sbiw	r24, 0x01	; 1
    2776:	9d 8f       	std	Y+29, r25	; 0x1d
    2778:	8c 8f       	std	Y+28, r24	; 0x1c

0000277a <.L79>:
		while(__ticks)
    277a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    277c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    277e:	00 97       	sbiw	r24, 0x00	; 0
    2780:	61 f7       	brne	.-40     	; 0x275a <.L80>

00002782 <.Loc.164>:
		return;
    2782:	58 c0       	rjmp	.+176    	; 0x2834 <.L71>

00002784 <.L98>:
		__ticks = (uint16_t)__tmp;
    2784:	68 8d       	ldd	r22, Y+24	; 0x18
    2786:	79 8d       	ldd	r23, Y+25	; 0x19
    2788:	8a 8d       	ldd	r24, Y+26	; 0x1a
    278a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    278c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    2790:	63 96       	adiw	r28, 0x13	; 19
    2792:	6c af       	std	Y+60, r22	; 0x3c
    2794:	7d af       	std	Y+61, r23	; 0x3d
    2796:	8e af       	std	Y+62, r24	; 0x3e
    2798:	9f af       	std	Y+63, r25	; 0x3f
    279a:	63 97       	sbiw	r28, 0x13	; 19
    279c:	61 96       	adiw	r28, 0x11	; 17
    279e:	ee ad       	ldd	r30, Y+62	; 0x3e
    27a0:	ff ad       	ldd	r31, Y+63	; 0x3f
    27a2:	61 97       	sbiw	r28, 0x11	; 17
    27a4:	fd 8f       	std	Y+29, r31	; 0x1d
    27a6:	ec 8f       	std	Y+28, r30	; 0x1c

000027a8 <.L76>:
    27a8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    27aa:	9d 8d       	ldd	r25, Y+29	; 0x1d
    27ac:	99 a3       	std	Y+33, r25	; 0x21
    27ae:	88 a3       	std	Y+32, r24	; 0x20

000027b0 <.LBB88>:
    27b0:	88 a1       	ldd	r24, Y+32	; 0x20
    27b2:	99 a1       	ldd	r25, Y+33	; 0x21

000027b4 <.L1^B10>:
    27b4:	01 97       	sbiw	r24, 0x01	; 1
    27b6:	f1 f7       	brne	.-4      	; 0x27b4 <.L1^B10>
    27b8:	99 a3       	std	Y+33, r25	; 0x21
    27ba:	88 a3       	std	Y+32, r24	; 0x20

000027bc <.Loc.167>:
}
    27bc:	3b c0       	rjmp	.+118    	; 0x2834 <.L71>

000027be <.L96>:
	else if (__tmp > 255)
    27be:	20 e0       	ldi	r18, 0x00	; 0
    27c0:	30 e0       	ldi	r19, 0x00	; 0
    27c2:	4f e7       	ldi	r20, 0x7F	; 127
    27c4:	53 e4       	ldi	r21, 0x43	; 67
    27c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    27c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    27ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    27cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    27ce:	0e 94 91 16 	call	0x2d22	; 0x2d22 <__gesf2>
    27d2:	88 23       	and	r24, r24
    27d4:	f9 f0       	breq	.+62     	; 0x2814 <.L99>
    27d6:	f4 f0       	brlt	.+60     	; 0x2814 <.L99>

000027d8 <.LBB90>:
		uint16_t __ticks=(uint16_t)__tmp2;
    27d8:	6f 85       	ldd	r22, Y+15	; 0x0f
    27da:	78 89       	ldd	r23, Y+16	; 0x10
    27dc:	89 89       	ldd	r24, Y+17	; 0x11
    27de:	9a 89       	ldd	r25, Y+18	; 0x12
    27e0:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    27e4:	67 96       	adiw	r28, 0x17	; 23
    27e6:	6c af       	std	Y+60, r22	; 0x3c
    27e8:	7d af       	std	Y+61, r23	; 0x3d
    27ea:	8e af       	std	Y+62, r24	; 0x3e
    27ec:	9f af       	std	Y+63, r25	; 0x3f
    27ee:	67 97       	sbiw	r28, 0x17	; 23
    27f0:	65 96       	adiw	r28, 0x15	; 21
    27f2:	2e ad       	ldd	r18, Y+62	; 0x3e
    27f4:	3f ad       	ldd	r19, Y+63	; 0x3f
    27f6:	65 97       	sbiw	r28, 0x15	; 21
    27f8:	3b a3       	std	Y+35, r19	; 0x23
    27fa:	2a a3       	std	Y+34, r18	; 0x22
    27fc:	8a a1       	ldd	r24, Y+34	; 0x22
    27fe:	9b a1       	ldd	r25, Y+35	; 0x23
    2800:	9d a3       	std	Y+37, r25	; 0x25
    2802:	8c a3       	std	Y+36, r24	; 0x24

00002804 <.LBB91>:
	__asm__ volatile (
    2804:	8c a1       	ldd	r24, Y+36	; 0x24
    2806:	9d a1       	ldd	r25, Y+37	; 0x25

00002808 <.L1^B11>:
    2808:	01 97       	sbiw	r24, 0x01	; 1
    280a:	f1 f7       	brne	.-4      	; 0x2808 <.L1^B11>
    280c:	9d a3       	std	Y+37, r25	; 0x25
    280e:	8c a3       	std	Y+36, r24	; 0x24

00002810 <.Loc.171>:
	...

00002812 <.LBE91>:
		return;
    2812:	17 c0       	rjmp	.+46     	; 0x2842 <.L84>

00002814 <.L99>:
		__ticks = (uint8_t)__tmp;
    2814:	6b 85       	ldd	r22, Y+11	; 0x0b
    2816:	7c 85       	ldd	r23, Y+12	; 0x0c
    2818:	8d 85       	ldd	r24, Y+13	; 0x0d
    281a:	9e 85       	ldd	r25, Y+14	; 0x0e
    281c:	0e 94 b0 15 	call	0x2b60	; 0x2b60 <__fixunssfsi>
    2820:	6b 96       	adiw	r28, 0x1b	; 27
    2822:	6c af       	std	Y+60, r22	; 0x3c
    2824:	7d af       	std	Y+61, r23	; 0x3d
    2826:	8e af       	std	Y+62, r24	; 0x3e
    2828:	9f af       	std	Y+63, r25	; 0x3f
    282a:	6b 97       	sbiw	r28, 0x1b	; 27
    282c:	68 96       	adiw	r28, 0x18	; 24
    282e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2830:	68 97       	sbiw	r28, 0x18	; 24
    2832:	3b 8b       	std	Y+19, r19	; 0x13

00002834 <.L71>:
    2834:	8b 89       	ldd	r24, Y+19	; 0x13
    2836:	8e a3       	std	Y+38, r24	; 0x26

00002838 <.LBB93>:
	__asm__ volatile (
    2838:	8e a1       	ldd	r24, Y+38	; 0x26

0000283a <.L1^B12>:
    283a:	8a 95       	dec	r24
    283c:	f1 f7       	brne	.-4      	; 0x283a <.L1^B12>
    283e:	8e a3       	std	Y+38, r24	; 0x26

00002840 <.Loc.175>:
	...

00002842 <.L84>:
    _delay_us(10);
    PORTH &= ~(1 << US3_TRIG_PIN);
    2842:	82 e0       	ldi	r24, 0x02	; 2
    2844:	91 e0       	ldi	r25, 0x01	; 1
    2846:	dc 01       	movw	r26, r24
    2848:	2c 91       	ld	r18, X

0000284a <.Loc.177>:
    284a:	82 e0       	ldi	r24, 0x02	; 2
    284c:	91 e0       	ldi	r25, 0x01	; 1

0000284e <.Loc.178>:
    284e:	2f 7e       	andi	r18, 0xEF	; 239
    2850:	fc 01       	movw	r30, r24
    2852:	20 83       	st	Z, r18

00002854 <.Loc.179>:
	...

00002856 <.L85>:

    // Wait for echo pin to go high
    while (!(PINH & (1 << US3_ECHO_PIN)));
    2856:	80 e0       	ldi	r24, 0x00	; 0
    2858:	91 e0       	ldi	r25, 0x01	; 1
    285a:	dc 01       	movw	r26, r24
    285c:	8c 91       	ld	r24, X

0000285e <.Loc.181>:
    285e:	88 2f       	mov	r24, r24
    2860:	90 e0       	ldi	r25, 0x00	; 0
    2862:	80 72       	andi	r24, 0x20	; 32
    2864:	99 27       	eor	r25, r25

00002866 <.Loc.182>:
    2866:	00 97       	sbiw	r24, 0x00	; 0
    2868:	b1 f3       	breq	.-20     	; 0x2856 <.L85>

0000286a <.Loc.183>:

    // Start timer
    TCNT1 = 0;
    286a:	84 e8       	ldi	r24, 0x84	; 132
    286c:	90 e0       	ldi	r25, 0x00	; 0

0000286e <.Loc.184>:
    286e:	fc 01       	movw	r30, r24
    2870:	11 82       	std	Z+1, r1	; 0x01
    2872:	10 82       	st	Z, r1

00002874 <.Loc.185>:
    TCCR1B |= (1 << CS11); // Prescaler of 8
    2874:	81 e8       	ldi	r24, 0x81	; 129
    2876:	90 e0       	ldi	r25, 0x00	; 0
    2878:	dc 01       	movw	r26, r24
    287a:	2c 91       	ld	r18, X
    287c:	81 e8       	ldi	r24, 0x81	; 129
    287e:	90 e0       	ldi	r25, 0x00	; 0

00002880 <.Loc.186>:
    2880:	22 60       	ori	r18, 0x02	; 2
    2882:	fc 01       	movw	r30, r24
    2884:	20 83       	st	Z, r18

00002886 <.Loc.187>:

    // Wait for echo pin to go low
    while (PINH & (1 << US3_ECHO_PIN)) {
    2886:	0b c0       	rjmp	.+22     	; 0x289e <.L86>

00002888 <.L88>:
        if (TCNT1 > 60000) {
    2888:	84 e8       	ldi	r24, 0x84	; 132
    288a:	90 e0       	ldi	r25, 0x00	; 0
    288c:	dc 01       	movw	r26, r24
    288e:	8d 91       	ld	r24, X+
    2890:	9c 91       	ld	r25, X
    2892:	11 97       	sbiw	r26, 0x01	; 1

00002894 <.Loc.189>:
    2894:	80 36       	cpi	r24, 0x60	; 96
    2896:	ba ee       	ldi	r27, 0xEA	; 234
    2898:	9b 07       	cpc	r25, r27
    289a:	09 f0       	breq	.+2      	; 0x289e <.L86>

0000289c <L0^A>:
    289c:	58 f4       	brcc	.+22     	; 0x28b4 <.L100>

0000289e <.L86>:
    while (PINH & (1 << US3_ECHO_PIN)) {
    289e:	80 e0       	ldi	r24, 0x00	; 0
    28a0:	91 e0       	ldi	r25, 0x01	; 1
    28a2:	fc 01       	movw	r30, r24
    28a4:	80 81       	ld	r24, Z

000028a6 <.Loc.191>:
    28a6:	88 2f       	mov	r24, r24
    28a8:	90 e0       	ldi	r25, 0x00	; 0
    28aa:	80 72       	andi	r24, 0x20	; 32
    28ac:	99 27       	eor	r25, r25

000028ae <.Loc.192>:
    28ae:	00 97       	sbiw	r24, 0x00	; 0
    28b0:	59 f7       	brne	.-42     	; 0x2888 <.L88>
    28b2:	01 c0       	rjmp	.+2      	; 0x28b6 <.L87>

000028b4 <.L100>:
	...

000028b6 <.L87>:
            break;
        }
    }

    // Stop timer
    TCCR1B &= ~(1 << CS11);
    28b6:	81 e8       	ldi	r24, 0x81	; 129
    28b8:	90 e0       	ldi	r25, 0x00	; 0
    28ba:	dc 01       	movw	r26, r24
    28bc:	2c 91       	ld	r18, X

000028be <.Loc.195>:
    28be:	81 e8       	ldi	r24, 0x81	; 129
    28c0:	90 e0       	ldi	r25, 0x00	; 0

000028c2 <.Loc.196>:
    28c2:	2d 7f       	andi	r18, 0xFD	; 253
    28c4:	fc 01       	movw	r30, r24
    28c6:	20 83       	st	Z, r18

000028c8 <.Loc.197>:

    // Read timer value
    duration = TCNT1;
    28c8:	84 e8       	ldi	r24, 0x84	; 132
    28ca:	90 e0       	ldi	r25, 0x00	; 0

000028cc <.Loc.198>:
    28cc:	dc 01       	movw	r26, r24
    28ce:	8d 91       	ld	r24, X+
    28d0:	9c 91       	ld	r25, X
    28d2:	9a 83       	std	Y+2, r25	; 0x02
    28d4:	89 83       	std	Y+1, r24	; 0x01

000028d6 <.Loc.199>:

    // Convert duration to distance in cm
    float distance = duration / 58.0 / 2.0;
    28d6:	89 81       	ldd	r24, Y+1	; 0x01
    28d8:	9a 81       	ldd	r25, Y+2	; 0x02
    28da:	9c 01       	movw	r18, r24
    28dc:	40 e0       	ldi	r20, 0x00	; 0
    28de:	50 e0       	ldi	r21, 0x00	; 0
    28e0:	6f 96       	adiw	r28, 0x1f	; 31
    28e2:	2c af       	std	Y+60, r18	; 0x3c
    28e4:	3d af       	std	Y+61, r19	; 0x3d
    28e6:	4e af       	std	Y+62, r20	; 0x3e
    28e8:	5f af       	std	Y+63, r21	; 0x3f
    28ea:	6f 97       	sbiw	r28, 0x1f	; 31
    28ec:	6f 96       	adiw	r28, 0x1f	; 31
    28ee:	6c ad       	ldd	r22, Y+60	; 0x3c
    28f0:	7d ad       	ldd	r23, Y+61	; 0x3d
    28f2:	8e ad       	ldd	r24, Y+62	; 0x3e
    28f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    28f6:	6f 97       	sbiw	r28, 0x1f	; 31
    28f8:	0e 94 df 15 	call	0x2bbe	; 0x2bbe <__floatunsisf>
    28fc:	6f a3       	std	Y+39, r22	; 0x27
    28fe:	78 a7       	std	Y+40, r23	; 0x28
    2900:	89 a7       	std	Y+41, r24	; 0x29
    2902:	9a a7       	std	Y+42, r25	; 0x2a
    2904:	20 e0       	ldi	r18, 0x00	; 0
    2906:	30 e0       	ldi	r19, 0x00	; 0
    2908:	48 e6       	ldi	r20, 0x68	; 104
    290a:	52 e4       	ldi	r21, 0x42	; 66
    290c:	6f a1       	ldd	r22, Y+39	; 0x27
    290e:	78 a5       	ldd	r23, Y+40	; 0x28
    2910:	89 a5       	ldd	r24, Y+41	; 0x29
    2912:	9a a5       	ldd	r25, Y+42	; 0x2a
    2914:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    2918:	a3 96       	adiw	r28, 0x23	; 35
    291a:	6c af       	std	Y+60, r22	; 0x3c
    291c:	7d af       	std	Y+61, r23	; 0x3d
    291e:	8e af       	std	Y+62, r24	; 0x3e
    2920:	9f af       	std	Y+63, r25	; 0x3f
    2922:	a3 97       	sbiw	r28, 0x23	; 35
    2924:	a3 96       	adiw	r28, 0x23	; 35
    2926:	8c ad       	ldd	r24, Y+60	; 0x3c
    2928:	9d ad       	ldd	r25, Y+61	; 0x3d
    292a:	ae ad       	ldd	r26, Y+62	; 0x3e
    292c:	bf ad       	ldd	r27, Y+63	; 0x3f
    292e:	a3 97       	sbiw	r28, 0x23	; 35
    2930:	8b a7       	std	Y+43, r24	; 0x2b
    2932:	9c a7       	std	Y+44, r25	; 0x2c
    2934:	ad a7       	std	Y+45, r26	; 0x2d
    2936:	be a7       	std	Y+46, r27	; 0x2e

00002938 <.Loc.200>:
    2938:	20 e0       	ldi	r18, 0x00	; 0
    293a:	30 e0       	ldi	r19, 0x00	; 0
    293c:	40 e0       	ldi	r20, 0x00	; 0
    293e:	50 e4       	ldi	r21, 0x40	; 64
    2940:	6b a5       	ldd	r22, Y+43	; 0x2b
    2942:	7c a5       	ldd	r23, Y+44	; 0x2c
    2944:	8d a5       	ldd	r24, Y+45	; 0x2d
    2946:	9e a5       	ldd	r25, Y+46	; 0x2e
    2948:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <__divsf3>
    294c:	a7 96       	adiw	r28, 0x27	; 39
    294e:	6c af       	std	Y+60, r22	; 0x3c
    2950:	7d af       	std	Y+61, r23	; 0x3d
    2952:	8e af       	std	Y+62, r24	; 0x3e
    2954:	9f af       	std	Y+63, r25	; 0x3f
    2956:	a7 97       	sbiw	r28, 0x27	; 39
    2958:	a7 96       	adiw	r28, 0x27	; 39
    295a:	2c ad       	ldd	r18, Y+60	; 0x3c
    295c:	3d ad       	ldd	r19, Y+61	; 0x3d
    295e:	4e ad       	ldd	r20, Y+62	; 0x3e
    2960:	5f ad       	ldd	r21, Y+63	; 0x3f
    2962:	a7 97       	sbiw	r28, 0x27	; 39
    2964:	2b 83       	std	Y+3, r18	; 0x03
    2966:	3c 83       	std	Y+4, r19	; 0x04
    2968:	4d 83       	std	Y+5, r20	; 0x05
    296a:	5e 83       	std	Y+6, r21	; 0x06

0000296c <.Loc.201>:

    return distance;
    296c:	8b 81       	ldd	r24, Y+3	; 0x03
    296e:	9c 81       	ldd	r25, Y+4	; 0x04
    2970:	ad 81       	ldd	r26, Y+5	; 0x05
    2972:	be 81       	ldd	r27, Y+6	; 0x06
    2974:	8b ab       	std	Y+51, r24	; 0x33
    2976:	9c ab       	std	Y+52, r25	; 0x34
    2978:	ad ab       	std	Y+53, r26	; 0x35
    297a:	be ab       	std	Y+54, r27	; 0x36

0000297c <.Loc.202>:
}
    297c:	6b a9       	ldd	r22, Y+51	; 0x33
    297e:	7c a9       	ldd	r23, Y+52	; 0x34
    2980:	8d a9       	ldd	r24, Y+53	; 0x35
    2982:	9e a9       	ldd	r25, Y+54	; 0x36
    2984:	ca 59       	subi	r28, 0x9A	; 154
    2986:	df 4f       	sbci	r29, 0xFF	; 255
    2988:	0f b6       	in	r0, 0x3f	; 63
    298a:	f8 94       	cli
    298c:	de bf       	out	0x3e, r29	; 62
    298e:	0f be       	out	0x3f, r0	; 63
    2990:	cd bf       	out	0x3d, r28	; 61
    2992:	df 91       	pop	r29
    2994:	cf 91       	pop	r28
    2996:	08 95       	ret

00002998 <__subsf3>:
    2998:	50 58       	subi	r21, 0x80	; 128

0000299a <__addsf3>:
    299a:	bb 27       	eor	r27, r27
    299c:	aa 27       	eor	r26, r26
    299e:	0e 94 e4 14 	call	0x29c8	; 0x29c8 <__addsf3x>
    29a2:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__fp_round>

000029a6 <.L^B1>:
    29a6:	0e 94 49 16 	call	0x2c92	; 0x2c92 <__fp_pscA>
    29aa:	38 f0       	brcs	.+14     	; 0x29ba <.L_nan>
    29ac:	0e 94 50 16 	call	0x2ca0	; 0x2ca0 <__fp_pscB>
    29b0:	20 f0       	brcs	.+8      	; 0x29ba <.L_nan>
    29b2:	39 f4       	brne	.+14     	; 0x29c2 <.L_inf>
    29b4:	9f 3f       	cpi	r25, 0xFF	; 255
    29b6:	19 f4       	brne	.+6      	; 0x29be <.L_infB>
    29b8:	26 f4       	brtc	.+8      	; 0x29c2 <.L_inf>

000029ba <.L_nan>:
    29ba:	0c 94 46 16 	jmp	0x2c8c	; 0x2c8c <__fp_nan>

000029be <.L_infB>:
    29be:	0e f4       	brtc	.+2      	; 0x29c2 <.L_inf>
    29c0:	e0 95       	com	r30

000029c2 <.L_inf>:
    29c2:	e7 fb       	bst	r30, 7
    29c4:	0c 94 40 16 	jmp	0x2c80	; 0x2c80 <__fp_inf>

000029c8 <__addsf3x>:
    29c8:	e9 2f       	mov	r30, r25
    29ca:	0e 94 68 16 	call	0x2cd0	; 0x2cd0 <__fp_split3>
    29ce:	58 f3       	brcs	.-42     	; 0x29a6 <.L^B1>
    29d0:	ba 17       	cp	r27, r26
    29d2:	62 07       	cpc	r22, r18
    29d4:	73 07       	cpc	r23, r19
    29d6:	84 07       	cpc	r24, r20
    29d8:	95 07       	cpc	r25, r21
    29da:	20 f0       	brcs	.+8      	; 0x29e4 <.L2^B1>
    29dc:	79 f4       	brne	.+30     	; 0x29fc <.L4^B1>
    29de:	a6 f5       	brtc	.+104    	; 0x2a48 <.L_add>
    29e0:	0c 94 8a 16 	jmp	0x2d14	; 0x2d14 <__fp_zero>

000029e4 <.L2^B1>:
    29e4:	0e f4       	brtc	.+2      	; 0x29e8 <.L3^B1>
    29e6:	e0 95       	com	r30

000029e8 <.L3^B1>:
    29e8:	0b 2e       	mov	r0, r27
    29ea:	ba 2f       	mov	r27, r26
    29ec:	a0 2d       	mov	r26, r0
    29ee:	0b 01       	movw	r0, r22
    29f0:	b9 01       	movw	r22, r18
    29f2:	90 01       	movw	r18, r0
    29f4:	0c 01       	movw	r0, r24
    29f6:	ca 01       	movw	r24, r20
    29f8:	a0 01       	movw	r20, r0
    29fa:	11 24       	eor	r1, r1

000029fc <.L4^B1>:
    29fc:	ff 27       	eor	r31, r31
    29fe:	59 1b       	sub	r21, r25

00002a00 <.L5^B1>:
    2a00:	99 f0       	breq	.+38     	; 0x2a28 <.L7^B1>
    2a02:	59 3f       	cpi	r21, 0xF9	; 249
    2a04:	50 f4       	brcc	.+20     	; 0x2a1a <.L6^B1>
    2a06:	50 3e       	cpi	r21, 0xE0	; 224
    2a08:	68 f1       	brcs	.+90     	; 0x2a64 <.L_ret>
    2a0a:	1a 16       	cp	r1, r26
    2a0c:	f0 40       	sbci	r31, 0x00	; 0
    2a0e:	a2 2f       	mov	r26, r18
    2a10:	23 2f       	mov	r18, r19
    2a12:	34 2f       	mov	r19, r20
    2a14:	44 27       	eor	r20, r20
    2a16:	58 5f       	subi	r21, 0xF8	; 248
    2a18:	f3 cf       	rjmp	.-26     	; 0x2a00 <.L5^B1>

00002a1a <.L6^B1>:
    2a1a:	46 95       	lsr	r20
    2a1c:	37 95       	ror	r19
    2a1e:	27 95       	ror	r18
    2a20:	a7 95       	ror	r26
    2a22:	f0 40       	sbci	r31, 0x00	; 0
    2a24:	53 95       	inc	r21
    2a26:	c9 f7       	brne	.-14     	; 0x2a1a <.L6^B1>

00002a28 <.L7^B1>:
    2a28:	7e f4       	brtc	.+30     	; 0x2a48 <.L_add>
    2a2a:	1f 16       	cp	r1, r31
    2a2c:	ba 0b       	sbc	r27, r26
    2a2e:	62 0b       	sbc	r22, r18
    2a30:	73 0b       	sbc	r23, r19
    2a32:	84 0b       	sbc	r24, r20
    2a34:	ba f0       	brmi	.+46     	; 0x2a64 <.L_ret>

00002a36 <.L8^B1>:
    2a36:	91 50       	subi	r25, 0x01	; 1
    2a38:	a1 f0       	breq	.+40     	; 0x2a62 <.L9^B1>
    2a3a:	ff 0f       	add	r31, r31
    2a3c:	bb 1f       	adc	r27, r27
    2a3e:	66 1f       	adc	r22, r22
    2a40:	77 1f       	adc	r23, r23
    2a42:	88 1f       	adc	r24, r24
    2a44:	c2 f7       	brpl	.-16     	; 0x2a36 <.L8^B1>
    2a46:	0e c0       	rjmp	.+28     	; 0x2a64 <.L_ret>

00002a48 <.L_add>:
    2a48:	ba 0f       	add	r27, r26
    2a4a:	62 1f       	adc	r22, r18
    2a4c:	73 1f       	adc	r23, r19
    2a4e:	84 1f       	adc	r24, r20
    2a50:	48 f4       	brcc	.+18     	; 0x2a64 <.L_ret>
    2a52:	87 95       	ror	r24
    2a54:	77 95       	ror	r23
    2a56:	67 95       	ror	r22
    2a58:	b7 95       	ror	r27
    2a5a:	f7 95       	ror	r31
    2a5c:	9e 3f       	cpi	r25, 0xFE	; 254
    2a5e:	08 f0       	brcs	.+2      	; 0x2a62 <.L9^B1>
    2a60:	b0 cf       	rjmp	.-160    	; 0x29c2 <.L_inf>

00002a62 <.L9^B1>:
    2a62:	93 95       	inc	r25

00002a64 <.L_ret>:
    2a64:	88 0f       	add	r24, r24
    2a66:	08 f0       	brcs	.+2      	; 0x2a6a <.L1^B1>
    2a68:	99 27       	eor	r25, r25

00002a6a <.L1^B1>:
    2a6a:	ee 0f       	add	r30, r30
    2a6c:	97 95       	ror	r25
    2a6e:	87 95       	ror	r24
    2a70:	08 95       	ret

00002a72 <__cmpsf2>:
    2a72:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__fp_cmp>
    2a76:	08 f4       	brcc	.+2      	; 0x2a7a <.L1^B1>
    2a78:	81 e0       	ldi	r24, 0x01	; 1

00002a7a <.L1^B1>:
    2a7a:	08 95       	ret

00002a7c <__divsf3>:
    2a7c:	0e 94 52 15 	call	0x2aa4	; 0x2aa4 <__divsf3x>
    2a80:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__fp_round>

00002a84 <.L^B1>:
    2a84:	0e 94 50 16 	call	0x2ca0	; 0x2ca0 <__fp_pscB>
    2a88:	58 f0       	brcs	.+22     	; 0x2aa0 <.L_nan>
    2a8a:	0e 94 49 16 	call	0x2c92	; 0x2c92 <__fp_pscA>
    2a8e:	40 f0       	brcs	.+16     	; 0x2aa0 <.L_nan>
    2a90:	29 f4       	brne	.+10     	; 0x2a9c <.L_zr>
    2a92:	5f 3f       	cpi	r21, 0xFF	; 255
    2a94:	29 f0       	breq	.+10     	; 0x2aa0 <.L_nan>

00002a96 <.L_inf>:
    2a96:	0c 94 40 16 	jmp	0x2c80	; 0x2c80 <__fp_inf>

00002a9a <.L1^B1>:
    2a9a:	51 11       	cpse	r21, r1

00002a9c <.L_zr>:
    2a9c:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__fp_szero>

00002aa0 <.L_nan>:
    2aa0:	0c 94 46 16 	jmp	0x2c8c	; 0x2c8c <__fp_nan>

00002aa4 <__divsf3x>:
    2aa4:	0e 94 68 16 	call	0x2cd0	; 0x2cd0 <__fp_split3>
    2aa8:	68 f3       	brcs	.-38     	; 0x2a84 <.L^B1>

00002aaa <__divsf3_pse>:
    2aaa:	99 23       	and	r25, r25
    2aac:	b1 f3       	breq	.-20     	; 0x2a9a <.L1^B1>
    2aae:	55 23       	and	r21, r21
    2ab0:	91 f3       	breq	.-28     	; 0x2a96 <.L_inf>
    2ab2:	95 1b       	sub	r25, r21
    2ab4:	55 0b       	sbc	r21, r21
    2ab6:	bb 27       	eor	r27, r27
    2ab8:	aa 27       	eor	r26, r26

00002aba <.L2^B1>:
    2aba:	62 17       	cp	r22, r18
    2abc:	73 07       	cpc	r23, r19
    2abe:	84 07       	cpc	r24, r20
    2ac0:	38 f0       	brcs	.+14     	; 0x2ad0 <.L3^B1>
    2ac2:	9f 5f       	subi	r25, 0xFF	; 255
    2ac4:	5f 4f       	sbci	r21, 0xFF	; 255
    2ac6:	22 0f       	add	r18, r18
    2ac8:	33 1f       	adc	r19, r19
    2aca:	44 1f       	adc	r20, r20
    2acc:	aa 1f       	adc	r26, r26
    2ace:	a9 f3       	breq	.-22     	; 0x2aba <.L2^B1>

00002ad0 <.L3^B1>:
    2ad0:	35 d0       	rcall	.+106    	; 0x2b3c <.L_div>
    2ad2:	0e 2e       	mov	r0, r30
    2ad4:	3a f0       	brmi	.+14     	; 0x2ae4 <.L5^B1>

00002ad6 <.L4^B1>:
    2ad6:	e0 e8       	ldi	r30, 0x80	; 128
    2ad8:	32 d0       	rcall	.+100    	; 0x2b3e <.L_div1>
    2ada:	91 50       	subi	r25, 0x01	; 1
    2adc:	50 40       	sbci	r21, 0x00	; 0
    2ade:	e6 95       	lsr	r30
    2ae0:	00 1c       	adc	r0, r0
    2ae2:	ca f7       	brpl	.-14     	; 0x2ad6 <.L4^B1>

00002ae4 <.L5^B1>:
    2ae4:	2b d0       	rcall	.+86     	; 0x2b3c <.L_div>
    2ae6:	fe 2f       	mov	r31, r30
    2ae8:	29 d0       	rcall	.+82     	; 0x2b3c <.L_div>
    2aea:	66 0f       	add	r22, r22
    2aec:	77 1f       	adc	r23, r23
    2aee:	88 1f       	adc	r24, r24
    2af0:	bb 1f       	adc	r27, r27
    2af2:	26 17       	cp	r18, r22
    2af4:	37 07       	cpc	r19, r23
    2af6:	48 07       	cpc	r20, r24
    2af8:	ab 07       	cpc	r26, r27
    2afa:	b0 e8       	ldi	r27, 0x80	; 128
    2afc:	09 f0       	breq	.+2      	; 0x2b00 <.L4^B2>
    2afe:	bb 0b       	sbc	r27, r27

00002b00 <.L4^B2>:
    2b00:	80 2d       	mov	r24, r0
    2b02:	bf 01       	movw	r22, r30
    2b04:	ff 27       	eor	r31, r31
    2b06:	93 58       	subi	r25, 0x83	; 131
    2b08:	5f 4f       	sbci	r21, 0xFF	; 255
    2b0a:	3a f0       	brmi	.+14     	; 0x2b1a <.L13^B1>
    2b0c:	9e 3f       	cpi	r25, 0xFE	; 254
    2b0e:	51 05       	cpc	r21, r1
    2b10:	78 f0       	brcs	.+30     	; 0x2b30 <.L15^B1>
    2b12:	0c 94 40 16 	jmp	0x2c80	; 0x2c80 <__fp_inf>

00002b16 <.L12^B1>:
    2b16:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__fp_szero>

00002b1a <.L13^B1>:
    2b1a:	5f 3f       	cpi	r21, 0xFF	; 255
    2b1c:	e4 f3       	brlt	.-8      	; 0x2b16 <.L12^B1>
    2b1e:	98 3e       	cpi	r25, 0xE8	; 232
    2b20:	d4 f3       	brlt	.-12     	; 0x2b16 <.L12^B1>

00002b22 <.L14^B1>:
    2b22:	86 95       	lsr	r24
    2b24:	77 95       	ror	r23
    2b26:	67 95       	ror	r22
    2b28:	b7 95       	ror	r27
    2b2a:	f7 95       	ror	r31
    2b2c:	9f 5f       	subi	r25, 0xFF	; 255
    2b2e:	c9 f7       	brne	.-14     	; 0x2b22 <.L14^B1>

00002b30 <.L15^B1>:
    2b30:	88 0f       	add	r24, r24
    2b32:	91 1d       	adc	r25, r1
    2b34:	96 95       	lsr	r25
    2b36:	87 95       	ror	r24
    2b38:	97 f9       	bld	r25, 7
    2b3a:	08 95       	ret

00002b3c <.L_div>:
    2b3c:	e1 e0       	ldi	r30, 0x01	; 1

00002b3e <.L_div1>:
    2b3e:	66 0f       	add	r22, r22
    2b40:	77 1f       	adc	r23, r23
    2b42:	88 1f       	adc	r24, r24
    2b44:	bb 1f       	adc	r27, r27
    2b46:	62 17       	cp	r22, r18
    2b48:	73 07       	cpc	r23, r19
    2b4a:	84 07       	cpc	r24, r20
    2b4c:	ba 07       	cpc	r27, r26
    2b4e:	20 f0       	brcs	.+8      	; 0x2b58 <.L2^B2>
    2b50:	62 1b       	sub	r22, r18
    2b52:	73 0b       	sbc	r23, r19
    2b54:	84 0b       	sbc	r24, r20
    2b56:	ba 0b       	sbc	r27, r26

00002b58 <.L2^B2>:
    2b58:	ee 1f       	adc	r30, r30
    2b5a:	88 f7       	brcc	.-30     	; 0x2b3e <.L_div1>
    2b5c:	e0 95       	com	r30
    2b5e:	08 95       	ret

00002b60 <__fixunssfsi>:
    2b60:	0e 94 70 16 	call	0x2ce0	; 0x2ce0 <__fp_splitA>
    2b64:	88 f0       	brcs	.+34     	; 0x2b88 <.L_err>
    2b66:	9f 57       	subi	r25, 0x7F	; 127
    2b68:	98 f0       	brcs	.+38     	; 0x2b90 <.L_zr>
    2b6a:	b9 2f       	mov	r27, r25
    2b6c:	99 27       	eor	r25, r25
    2b6e:	b7 51       	subi	r27, 0x17	; 23
    2b70:	b0 f0       	brcs	.+44     	; 0x2b9e <.L4^B1>
    2b72:	e1 f0       	breq	.+56     	; 0x2bac <.L_sign>

00002b74 <.L1^B1>:
    2b74:	66 0f       	add	r22, r22
    2b76:	77 1f       	adc	r23, r23
    2b78:	88 1f       	adc	r24, r24
    2b7a:	99 1f       	adc	r25, r25
    2b7c:	1a f0       	brmi	.+6      	; 0x2b84 <.L2^B1>
    2b7e:	ba 95       	dec	r27
    2b80:	c9 f7       	brne	.-14     	; 0x2b74 <.L1^B1>
    2b82:	14 c0       	rjmp	.+40     	; 0x2bac <.L_sign>

00002b84 <.L2^B1>:
    2b84:	b1 30       	cpi	r27, 0x01	; 1
    2b86:	91 f0       	breq	.+36     	; 0x2bac <.L_sign>

00002b88 <.L_err>:
    2b88:	0e 94 8a 16 	call	0x2d14	; 0x2d14 <__fp_zero>
    2b8c:	b1 e0       	ldi	r27, 0x01	; 1
    2b8e:	08 95       	ret

00002b90 <.L_zr>:
    2b90:	0c 94 8a 16 	jmp	0x2d14	; 0x2d14 <__fp_zero>

00002b94 <.L3^B1>:
    2b94:	67 2f       	mov	r22, r23
    2b96:	78 2f       	mov	r23, r24
    2b98:	88 27       	eor	r24, r24
    2b9a:	b8 5f       	subi	r27, 0xF8	; 248
    2b9c:	39 f0       	breq	.+14     	; 0x2bac <.L_sign>

00002b9e <.L4^B1>:
    2b9e:	b9 3f       	cpi	r27, 0xF9	; 249
    2ba0:	cc f3       	brlt	.-14     	; 0x2b94 <.L3^B1>

00002ba2 <.L5^B1>:
    2ba2:	86 95       	lsr	r24
    2ba4:	77 95       	ror	r23
    2ba6:	67 95       	ror	r22
    2ba8:	b3 95       	inc	r27
    2baa:	d9 f7       	brne	.-10     	; 0x2ba2 <.L5^B1>

00002bac <.L_sign>:
    2bac:	3e f4       	brtc	.+14     	; 0x2bbc <.L6^B1>
    2bae:	90 95       	com	r25
    2bb0:	80 95       	com	r24
    2bb2:	70 95       	com	r23
    2bb4:	61 95       	neg	r22
    2bb6:	7f 4f       	sbci	r23, 0xFF	; 255
    2bb8:	8f 4f       	sbci	r24, 0xFF	; 255
    2bba:	9f 4f       	sbci	r25, 0xFF	; 255

00002bbc <.L6^B1>:
    2bbc:	08 95       	ret

00002bbe <__floatunsisf>:
    2bbe:	e8 94       	clt
    2bc0:	09 c0       	rjmp	.+18     	; 0x2bd4 <.L1^B1>

00002bc2 <__floatsisf>:
    2bc2:	97 fb       	bst	r25, 7
    2bc4:	3e f4       	brtc	.+14     	; 0x2bd4 <.L1^B1>
    2bc6:	90 95       	com	r25
    2bc8:	80 95       	com	r24
    2bca:	70 95       	com	r23
    2bcc:	61 95       	neg	r22
    2bce:	7f 4f       	sbci	r23, 0xFF	; 255
    2bd0:	8f 4f       	sbci	r24, 0xFF	; 255
    2bd2:	9f 4f       	sbci	r25, 0xFF	; 255

00002bd4 <.L1^B1>:
    2bd4:	99 23       	and	r25, r25
    2bd6:	a9 f0       	breq	.+42     	; 0x2c02 <.L4^B1>
    2bd8:	f9 2f       	mov	r31, r25
    2bda:	96 e9       	ldi	r25, 0x96	; 150
    2bdc:	bb 27       	eor	r27, r27

00002bde <.L2^B1>:
    2bde:	93 95       	inc	r25
    2be0:	f6 95       	lsr	r31
    2be2:	87 95       	ror	r24
    2be4:	77 95       	ror	r23
    2be6:	67 95       	ror	r22
    2be8:	b7 95       	ror	r27
    2bea:	f1 11       	cpse	r31, r1
    2bec:	f8 cf       	rjmp	.-16     	; 0x2bde <.L2^B1>
    2bee:	fa f4       	brpl	.+62     	; 0x2c2e <.L_pack>
    2bf0:	bb 0f       	add	r27, r27
    2bf2:	11 f4       	brne	.+4      	; 0x2bf8 <.L3^B1>
    2bf4:	60 ff       	sbrs	r22, 0
    2bf6:	1b c0       	rjmp	.+54     	; 0x2c2e <.L_pack>

00002bf8 <.L3^B1>:
    2bf8:	6f 5f       	subi	r22, 0xFF	; 255
    2bfa:	7f 4f       	sbci	r23, 0xFF	; 255
    2bfc:	8f 4f       	sbci	r24, 0xFF	; 255
    2bfe:	9f 4f       	sbci	r25, 0xFF	; 255
    2c00:	16 c0       	rjmp	.+44     	; 0x2c2e <.L_pack>

00002c02 <.L4^B1>:
    2c02:	88 23       	and	r24, r24
    2c04:	11 f0       	breq	.+4      	; 0x2c0a <.L5^B1>
    2c06:	96 e9       	ldi	r25, 0x96	; 150
    2c08:	11 c0       	rjmp	.+34     	; 0x2c2c <.L8^B1>

00002c0a <.L5^B1>:
    2c0a:	77 23       	and	r23, r23
    2c0c:	21 f0       	breq	.+8      	; 0x2c16 <.L6^B1>
    2c0e:	9e e8       	ldi	r25, 0x8E	; 142
    2c10:	87 2f       	mov	r24, r23
    2c12:	76 2f       	mov	r23, r22
    2c14:	05 c0       	rjmp	.+10     	; 0x2c20 <.L7^B1>

00002c16 <.L6^B1>:
    2c16:	66 23       	and	r22, r22
    2c18:	71 f0       	breq	.+28     	; 0x2c36 <.L9^B1>
    2c1a:	96 e8       	ldi	r25, 0x86	; 134
    2c1c:	86 2f       	mov	r24, r22
    2c1e:	70 e0       	ldi	r23, 0x00	; 0

00002c20 <.L7^B1>:
    2c20:	60 e0       	ldi	r22, 0x00	; 0
    2c22:	2a f0       	brmi	.+10     	; 0x2c2e <.L_pack>

00002c24 <.L10^B1>:
    2c24:	9a 95       	dec	r25
    2c26:	66 0f       	add	r22, r22
    2c28:	77 1f       	adc	r23, r23
    2c2a:	88 1f       	adc	r24, r24

00002c2c <.L8^B1>:
    2c2c:	da f7       	brpl	.-10     	; 0x2c24 <.L10^B1>

00002c2e <.L_pack>:
    2c2e:	88 0f       	add	r24, r24
    2c30:	96 95       	lsr	r25
    2c32:	87 95       	ror	r24
    2c34:	97 f9       	bld	r25, 7

00002c36 <.L9^B1>:
    2c36:	08 95       	ret

00002c38 <__fp_cmp>:
    2c38:	99 0f       	add	r25, r25
    2c3a:	00 08       	sbc	r0, r0
    2c3c:	55 0f       	add	r21, r21
    2c3e:	aa 0b       	sbc	r26, r26
    2c40:	e0 e8       	ldi	r30, 0x80	; 128
    2c42:	fe ef       	ldi	r31, 0xFE	; 254
    2c44:	16 16       	cp	r1, r22
    2c46:	17 06       	cpc	r1, r23
    2c48:	e8 07       	cpc	r30, r24
    2c4a:	f9 07       	cpc	r31, r25
    2c4c:	c0 f0       	brcs	.+48     	; 0x2c7e <.L9^B1>
    2c4e:	12 16       	cp	r1, r18
    2c50:	13 06       	cpc	r1, r19
    2c52:	e4 07       	cpc	r30, r20
    2c54:	f5 07       	cpc	r31, r21
    2c56:	98 f0       	brcs	.+38     	; 0x2c7e <.L9^B1>
    2c58:	62 1b       	sub	r22, r18
    2c5a:	73 0b       	sbc	r23, r19
    2c5c:	84 0b       	sbc	r24, r20
    2c5e:	95 0b       	sbc	r25, r21
    2c60:	39 f4       	brne	.+14     	; 0x2c70 <.L1^B1>
    2c62:	0a 26       	eor	r0, r26
    2c64:	61 f0       	breq	.+24     	; 0x2c7e <.L9^B1>
    2c66:	23 2b       	or	r18, r19
    2c68:	24 2b       	or	r18, r20
    2c6a:	25 2b       	or	r18, r21
    2c6c:	21 f4       	brne	.+8      	; 0x2c76 <.L2^B1>
    2c6e:	08 95       	ret

00002c70 <.L1^B1>:
    2c70:	0a 26       	eor	r0, r26
    2c72:	09 f4       	brne	.+2      	; 0x2c76 <.L2^B1>
    2c74:	a1 40       	sbci	r26, 0x01	; 1

00002c76 <.L2^B1>:
    2c76:	a6 95       	lsr	r26
    2c78:	8f ef       	ldi	r24, 0xFF	; 255
    2c7a:	81 1d       	adc	r24, r1
    2c7c:	81 1d       	adc	r24, r1

00002c7e <.L9^B1>:
    2c7e:	08 95       	ret

00002c80 <__fp_inf>:
    2c80:	97 f9       	bld	r25, 7
    2c82:	9f 67       	ori	r25, 0x7F	; 127
    2c84:	80 e8       	ldi	r24, 0x80	; 128
    2c86:	70 e0       	ldi	r23, 0x00	; 0
    2c88:	60 e0       	ldi	r22, 0x00	; 0
    2c8a:	08 95       	ret

00002c8c <__fp_nan>:
    2c8c:	9f ef       	ldi	r25, 0xFF	; 255
    2c8e:	80 ec       	ldi	r24, 0xC0	; 192
    2c90:	08 95       	ret

00002c92 <__fp_pscA>:
    2c92:	00 24       	eor	r0, r0
    2c94:	0a 94       	dec	r0
    2c96:	16 16       	cp	r1, r22
    2c98:	17 06       	cpc	r1, r23
    2c9a:	18 06       	cpc	r1, r24
    2c9c:	09 06       	cpc	r0, r25
    2c9e:	08 95       	ret

00002ca0 <__fp_pscB>:
    2ca0:	00 24       	eor	r0, r0
    2ca2:	0a 94       	dec	r0
    2ca4:	12 16       	cp	r1, r18
    2ca6:	13 06       	cpc	r1, r19
    2ca8:	14 06       	cpc	r1, r20
    2caa:	05 06       	cpc	r0, r21
    2cac:	08 95       	ret

00002cae <__fp_round>:
    2cae:	09 2e       	mov	r0, r25
    2cb0:	03 94       	inc	r0
    2cb2:	00 0c       	add	r0, r0
    2cb4:	11 f4       	brne	.+4      	; 0x2cba <.L1^B1>
    2cb6:	88 23       	and	r24, r24
    2cb8:	52 f0       	brmi	.+20     	; 0x2cce <.L3^B1>

00002cba <.L1^B1>:
    2cba:	bb 0f       	add	r27, r27
    2cbc:	40 f4       	brcc	.+16     	; 0x2cce <.L3^B1>
    2cbe:	bf 2b       	or	r27, r31
    2cc0:	11 f4       	brne	.+4      	; 0x2cc6 <.L2^B1>
    2cc2:	60 ff       	sbrs	r22, 0
    2cc4:	04 c0       	rjmp	.+8      	; 0x2cce <.L3^B1>

00002cc6 <.L2^B1>:
    2cc6:	6f 5f       	subi	r22, 0xFF	; 255
    2cc8:	7f 4f       	sbci	r23, 0xFF	; 255
    2cca:	8f 4f       	sbci	r24, 0xFF	; 255
    2ccc:	9f 4f       	sbci	r25, 0xFF	; 255

00002cce <.L3^B1>:
    2cce:	08 95       	ret

00002cd0 <__fp_split3>:
    2cd0:	57 fd       	sbrc	r21, 7
    2cd2:	90 58       	subi	r25, 0x80	; 128
    2cd4:	44 0f       	add	r20, r20
    2cd6:	55 1f       	adc	r21, r21
    2cd8:	59 f0       	breq	.+22     	; 0x2cf0 <.L4^B1>
    2cda:	5f 3f       	cpi	r21, 0xFF	; 255
    2cdc:	71 f0       	breq	.+28     	; 0x2cfa <.L5^B1>

00002cde <.L1^B1>:
    2cde:	47 95       	ror	r20

00002ce0 <__fp_splitA>:
    2ce0:	88 0f       	add	r24, r24
    2ce2:	97 fb       	bst	r25, 7
    2ce4:	99 1f       	adc	r25, r25
    2ce6:	61 f0       	breq	.+24     	; 0x2d00 <.L6^B1>
    2ce8:	9f 3f       	cpi	r25, 0xFF	; 255
    2cea:	79 f0       	breq	.+30     	; 0x2d0a <.L7^B1>

00002cec <.L3^B1>:
    2cec:	87 95       	ror	r24
    2cee:	08 95       	ret

00002cf0 <.L4^B1>:
    2cf0:	12 16       	cp	r1, r18
    2cf2:	13 06       	cpc	r1, r19
    2cf4:	14 06       	cpc	r1, r20
    2cf6:	55 1f       	adc	r21, r21
    2cf8:	f2 cf       	rjmp	.-28     	; 0x2cde <.L1^B1>

00002cfa <.L5^B1>:
    2cfa:	46 95       	lsr	r20
    2cfc:	f1 df       	rcall	.-30     	; 0x2ce0 <__fp_splitA>
    2cfe:	08 c0       	rjmp	.+16     	; 0x2d10 <.L8^B1>

00002d00 <.L6^B1>:
    2d00:	16 16       	cp	r1, r22
    2d02:	17 06       	cpc	r1, r23
    2d04:	18 06       	cpc	r1, r24
    2d06:	99 1f       	adc	r25, r25
    2d08:	f1 cf       	rjmp	.-30     	; 0x2cec <.L3^B1>

00002d0a <.L7^B1>:
    2d0a:	86 95       	lsr	r24
    2d0c:	71 05       	cpc	r23, r1
    2d0e:	61 05       	cpc	r22, r1

00002d10 <.L8^B1>:
    2d10:	08 94       	sec
    2d12:	08 95       	ret

00002d14 <__fp_zero>:
    2d14:	e8 94       	clt

00002d16 <__fp_szero>:
    2d16:	bb 27       	eor	r27, r27
    2d18:	66 27       	eor	r22, r22
    2d1a:	77 27       	eor	r23, r23
    2d1c:	cb 01       	movw	r24, r22
    2d1e:	97 f9       	bld	r25, 7
    2d20:	08 95       	ret

00002d22 <__gesf2>:
    2d22:	0e 94 1c 16 	call	0x2c38	; 0x2c38 <__fp_cmp>
    2d26:	08 f4       	brcc	.+2      	; 0x2d2a <.L1^B1>
    2d28:	8f ef       	ldi	r24, 0xFF	; 255

00002d2a <.L1^B1>:
    2d2a:	08 95       	ret

00002d2c <__mulsf3>:
    2d2c:	0e 94 a9 16 	call	0x2d52	; 0x2d52 <__mulsf3x>
    2d30:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__fp_round>

00002d34 <.L^B1>:
    2d34:	0e 94 49 16 	call	0x2c92	; 0x2c92 <__fp_pscA>
    2d38:	38 f0       	brcs	.+14     	; 0x2d48 <.L1^B1>
    2d3a:	0e 94 50 16 	call	0x2ca0	; 0x2ca0 <__fp_pscB>
    2d3e:	20 f0       	brcs	.+8      	; 0x2d48 <.L1^B1>
    2d40:	95 23       	and	r25, r21
    2d42:	11 f0       	breq	.+4      	; 0x2d48 <.L1^B1>
    2d44:	0c 94 40 16 	jmp	0x2c80	; 0x2c80 <__fp_inf>

00002d48 <.L1^B1>:
    2d48:	0c 94 46 16 	jmp	0x2c8c	; 0x2c8c <__fp_nan>

00002d4c <.L2^B1>:
    2d4c:	11 24       	eor	r1, r1
    2d4e:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__fp_szero>

00002d52 <__mulsf3x>:
    2d52:	0e 94 68 16 	call	0x2cd0	; 0x2cd0 <__fp_split3>
    2d56:	70 f3       	brcs	.-36     	; 0x2d34 <.L^B1>

00002d58 <__mulsf3_pse>:
    2d58:	95 9f       	mul	r25, r21
    2d5a:	c1 f3       	breq	.-16     	; 0x2d4c <.L2^B1>
    2d5c:	95 0f       	add	r25, r21
    2d5e:	50 e0       	ldi	r21, 0x00	; 0
    2d60:	55 1f       	adc	r21, r21
    2d62:	62 9f       	mul	r22, r18
    2d64:	f0 01       	movw	r30, r0
    2d66:	72 9f       	mul	r23, r18
    2d68:	bb 27       	eor	r27, r27
    2d6a:	f0 0d       	add	r31, r0
    2d6c:	b1 1d       	adc	r27, r1
    2d6e:	63 9f       	mul	r22, r19
    2d70:	aa 27       	eor	r26, r26
    2d72:	f0 0d       	add	r31, r0
    2d74:	b1 1d       	adc	r27, r1
    2d76:	aa 1f       	adc	r26, r26
    2d78:	64 9f       	mul	r22, r20
    2d7a:	66 27       	eor	r22, r22
    2d7c:	b0 0d       	add	r27, r0
    2d7e:	a1 1d       	adc	r26, r1
    2d80:	66 1f       	adc	r22, r22
    2d82:	82 9f       	mul	r24, r18
    2d84:	22 27       	eor	r18, r18
    2d86:	b0 0d       	add	r27, r0
    2d88:	a1 1d       	adc	r26, r1
    2d8a:	62 1f       	adc	r22, r18
    2d8c:	73 9f       	mul	r23, r19
    2d8e:	b0 0d       	add	r27, r0
    2d90:	a1 1d       	adc	r26, r1
    2d92:	62 1f       	adc	r22, r18
    2d94:	83 9f       	mul	r24, r19
    2d96:	a0 0d       	add	r26, r0
    2d98:	61 1d       	adc	r22, r1
    2d9a:	22 1f       	adc	r18, r18
    2d9c:	74 9f       	mul	r23, r20
    2d9e:	33 27       	eor	r19, r19
    2da0:	a0 0d       	add	r26, r0
    2da2:	61 1d       	adc	r22, r1
    2da4:	23 1f       	adc	r18, r19
    2da6:	84 9f       	mul	r24, r20
    2da8:	60 0d       	add	r22, r0
    2daa:	21 1d       	adc	r18, r1
    2dac:	82 2f       	mov	r24, r18
    2dae:	76 2f       	mov	r23, r22
    2db0:	6a 2f       	mov	r22, r26
    2db2:	11 24       	eor	r1, r1
    2db4:	9f 57       	subi	r25, 0x7F	; 127
    2db6:	50 40       	sbci	r21, 0x00	; 0
    2db8:	9a f0       	brmi	.+38     	; 0x2de0 <.L13^B1>
    2dba:	f1 f0       	breq	.+60     	; 0x2df8 <.L15^B1>

00002dbc <.L10^B1>:
    2dbc:	88 23       	and	r24, r24
    2dbe:	4a f0       	brmi	.+18     	; 0x2dd2 <.L11^B1>
    2dc0:	ee 0f       	add	r30, r30
    2dc2:	ff 1f       	adc	r31, r31
    2dc4:	bb 1f       	adc	r27, r27
    2dc6:	66 1f       	adc	r22, r22
    2dc8:	77 1f       	adc	r23, r23
    2dca:	88 1f       	adc	r24, r24
    2dcc:	91 50       	subi	r25, 0x01	; 1
    2dce:	50 40       	sbci	r21, 0x00	; 0
    2dd0:	a9 f7       	brne	.-22     	; 0x2dbc <.L10^B1>

00002dd2 <.L11^B1>:
    2dd2:	9e 3f       	cpi	r25, 0xFE	; 254
    2dd4:	51 05       	cpc	r21, r1
    2dd6:	80 f0       	brcs	.+32     	; 0x2df8 <.L15^B1>
    2dd8:	0c 94 40 16 	jmp	0x2c80	; 0x2c80 <__fp_inf>

00002ddc <.L12^B1>:
    2ddc:	0c 94 8b 16 	jmp	0x2d16	; 0x2d16 <__fp_szero>

00002de0 <.L13^B1>:
    2de0:	5f 3f       	cpi	r21, 0xFF	; 255
    2de2:	e4 f3       	brlt	.-8      	; 0x2ddc <.L12^B1>
    2de4:	98 3e       	cpi	r25, 0xE8	; 232
    2de6:	d4 f3       	brlt	.-12     	; 0x2ddc <.L12^B1>

00002de8 <.L14^B1>:
    2de8:	86 95       	lsr	r24
    2dea:	77 95       	ror	r23
    2dec:	67 95       	ror	r22
    2dee:	b7 95       	ror	r27
    2df0:	f7 95       	ror	r31
    2df2:	e7 95       	ror	r30
    2df4:	9f 5f       	subi	r25, 0xFF	; 255
    2df6:	c1 f7       	brne	.-16     	; 0x2de8 <.L14^B1>

00002df8 <.L15^B1>:
    2df8:	fe 2b       	or	r31, r30
    2dfa:	88 0f       	add	r24, r24
    2dfc:	91 1d       	adc	r25, r1
    2dfe:	96 95       	lsr	r25
    2e00:	87 95       	ror	r24
    2e02:	97 f9       	bld	r25, 7
    2e04:	08 95       	ret

00002e06 <_exit>:
    2e06:	f8 94       	cli

00002e08 <__stop_program>:
    2e08:	ff cf       	rjmp	.-2      	; 0x2e08 <__stop_program>
